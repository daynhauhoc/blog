{"head":{"id":2171,"layout":"Post","route":"wiki-ham-ki-m-tra-s-nguyen-t-trong-c-c","title":"[Wiki] Hàm Kiểm Tra số nguyên tố trong C/C++","tags":["wiki","c++"],"date":"2014-11-30T15:24:50.196Z","author":{"username":"Honey_moon","avatar":"/letter_avatar_proxy/v2/letter/h/82dd89/{size}.png"},"description":"Số nguyên tố:\n\nSố nguyên tố là số tự nhiên chỉ chia hết cho 1 và chính nó. Ngoài ra nó không chia hết cho bất cứ số nào khác. Số 0 và 1…"},"body":"<p><strong>Số nguyên tố:</strong></p>\n<blockquote>\n<ul>\n<li>Số nguyên tố là số tự nhiên chỉ chia hết cho 1 và chính nó. Ngoài ra nó không chia hết cho bất cứ số nào khác. Số 0 và 1 không được coi là số nguyên tố. - Theo wiki</li>\n<li>Số 2 là số nguyên tố chẵn duy nhất.</li>\n</ul>\n</blockquote>\n<ul>\n<li>Cấu trúc ở dạng C:</li>\n</ul>\n<pre><code class=\"hljs language-c\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">soNguyenTo</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> soA)</span>\n</span>{\n    <span class=\"hljs-keyword\">if</span> (soA &lt; <span class=\"hljs-number\">2</span>)    \n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">2</span>; i &lt;= <span class=\"hljs-built_in\">sqrt</span>((<span class=\"hljs-keyword\">float</span>)soA); i ++)\n    {\n        <span class=\"hljs-keyword\">if</span> (soA%i==<span class=\"hljs-number\">0</span>)\n        {\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n        }\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n}</code></pre>\n<ul>\n<li>\n<p>Định nghĩa : Do người dùng tự tạo. Có thể có nhiều cách để tối ưu.<br>\nVí dụ : Hãy kiểm tra xem số bạn nhập có phải là 1 số nguyên tố hay không ?</p>\n</li>\n<li>\n<p>Code minh hoạ C++</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-c++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">soNguyenTo</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>)</span></span>;\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">bool</span> <span class=\"hljs-title\">soNguyenTo</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> soA)</span> <span class=\"hljs-comment\">// hàm bool trả về true/false</span>\n</span>{\n\t<span class=\"hljs-keyword\">if</span> (soA &lt; <span class=\"hljs-number\">2</span>) <span class=\"hljs-comment\">// Nếu số A nhỏ hơn 2</span>\n\t{\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<span class=\"hljs-comment\">// trả về false</span>\n\t}\n\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (soA&gt;<span class=\"hljs-number\">2</span>)<span class=\"hljs-comment\">// Nếu số A lớn hơn 2</span>\n\t{\n\t\t<span class=\"hljs-keyword\">if</span> (soA % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>)  <span class=\"hljs-comment\">// Xét xem A có chia hết cho 2 không?</span>\n\t\t{\n\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<span class=\"hljs-comment\">// Nếu chia hết, return false.</span>\n\t\t}\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">3</span>; i &lt; <span class=\"hljs-built_in\">sqrt</span>((<span class=\"hljs-keyword\">float</span>)soA); i += <span class=\"hljs-number\">2</span>)  <span class=\"hljs-comment\">// xét từ 3 đến căn bậc 2 của số A</span>\n\t\t{\n\t\t\t<span class=\"hljs-keyword\">if</span> (soA%i == <span class=\"hljs-number\">0</span>)  <span class=\"hljs-comment\">// nếu A chia hết cho một số nào đó trong đoạn này</span>\n\t\t\t{\n\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<span class=\"hljs-comment\">// trả về kết quả sai</span>\n\t\t\t}\n\t\t}\n\t}\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;<span class=\"hljs-comment\">// sau tất cả các chỗ trên, nó mà không sai thì cuối cùng nó đúng :3</span>\n}\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> argc, <span class=\"hljs-keyword\">char</span> ** argv)</span>\n</span>{\n\t<span class=\"hljs-keyword\">int</span> n; <span class=\"hljs-comment\">// khai bao so kiem tra la so nguyen</span>\n\t<span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Nhap so can kiem tra?!\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\t<span class=\"hljs-built_in\">cin</span> &gt;&gt; n; <span class=\"hljs-comment\">// nhap vao so nguyen tu ban phim</span>\n\t<span class=\"hljs-keyword\">if</span> (soNguyenTo(n) == <span class=\"hljs-literal\">true</span>)\n\t{\n\t\t<span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"So \"</span> &lt;&lt; n &lt;&lt; <span class=\"hljs-string\">\" la so nguyen to!!!!\"</span>;\n\t}\n\t<span class=\"hljs-keyword\">else</span>\n\t{\n\t\t<span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"So \"</span> &lt;&lt; n &lt;&lt; <span class=\"hljs-string\">\" khong phai nguyen to!!!!\"</span>;\n\t}\n\tsystem(<span class=\"hljs-string\">\"pause\"</span>);\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<ul>\n<li>Hình minh họa:</li>\n</ul>\n<p><img src='http://daynhauhoc.com/uploads/default/2093/2b321a23ae4a02fb.gif'></p>\n","rawBody":"\n**Số nguyên tố:**\n> - Số nguyên tố là số tự nhiên chỉ chia hết cho 1 và chính nó. Ngoài ra nó không chia hết cho bất cứ số nào khác. Số 0 và 1 không được coi là số nguyên tố. - Theo wiki\n- Số 2 là số nguyên tố chẵn duy nhất.\n\n- Cấu trúc ở dạng C:\n\n```c\nint soNguyenTo(int soA)\n{\n    if (soA < 2)    \n        return 0;\n\n    for (int i = 2; i <= sqrt((float)soA); i ++)\n    {\n        if (soA%i==0)\n        {\n            return 0;\n        }\n    }\n    return 1;\n}\n```\n\n- Định nghĩa : Do người dùng tự tạo. Có thể có nhiều cách để tối ưu.\nVí dụ : Hãy kiểm tra xem số bạn nhập có phải là 1 số nguyên tố hay không ?\n\n- Code minh hoạ C++\n\n```c++\n#include <iostream>\nusing namespace std;\nbool soNguyenTo(int);\nbool soNguyenTo(int soA) // hàm bool trả về true/false\n{\n\tif (soA < 2) // Nếu số A nhỏ hơn 2\n\t{\n\t\treturn false;// trả về false\n\t}\n\telse if (soA>2)// Nếu số A lớn hơn 2\n\t{\n\t\tif (soA % 2 == 0)  // Xét xem A có chia hết cho 2 không?\n\t\t{\n\t\t\treturn false;// Nếu chia hết, return false.\n\t\t}\n\t\tfor (int i = 3; i < sqrt((float)soA); i += 2)  // xét từ 3 đến căn bậc 2 của số A\n\t\t{\n\t\t\tif (soA%i == 0)  // nếu A chia hết cho một số nào đó trong đoạn này\n\t\t\t{\n\t\t\t\treturn false;// trả về kết quả sai\n\t\t\t}\n\t\t}\n\t}\n\treturn true;// sau tất cả các chỗ trên, nó mà không sai thì cuối cùng nó đúng :3\n}\nint main(int argc, char ** argv)\n{\n\tint n; // khai bao so kiem tra la so nguyen\n\tcout << \"Nhap so can kiem tra?!\" << endl;\n\tcin >> n; // nhap vao so nguyen tu ban phim\n\tif (soNguyenTo(n) == true)\n\t{\n\t\tcout << \"So \" << n << \" la so nguyen to!!!!\";\n\t}\n\telse\n\t{\n\t\tcout << \"So \" << n << \" khong phai nguyen to!!!!\";\n\t}\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n\n- Hình minh họa:\n\n<img src='/uploads/default/2093/2b321a23ae4a02fb.gif'>\n","raw":"---json\n{\"id\":2171,\"layout\":\"Post\",\"route\":\"wiki-ham-ki-m-tra-s-nguyen-t-trong-c-c\",\"title\":\"[Wiki] Hàm Kiểm Tra số nguyên tố trong C/C++\",\"tags\":[\"wiki\",\"c++\"],\"date\":\"2014-11-30T15:24:50.196Z\",\"author\":{\"username\":\"Honey_moon\",\"avatar\":\"/letter_avatar_proxy/v2/letter/h/82dd89/{size}.png\"}}\n---\n\n**Số nguyên tố:**\n> - Số nguyên tố là số tự nhiên chỉ chia hết cho 1 và chính nó. Ngoài ra nó không chia hết cho bất cứ số nào khác. Số 0 và 1 không được coi là số nguyên tố. - Theo wiki\n- Số 2 là số nguyên tố chẵn duy nhất.\n\n- Cấu trúc ở dạng C:\n\n```c\nint soNguyenTo(int soA)\n{\n    if (soA < 2)    \n        return 0;\n\n    for (int i = 2; i <= sqrt((float)soA); i ++)\n    {\n        if (soA%i==0)\n        {\n            return 0;\n        }\n    }\n    return 1;\n}\n```\n\n- Định nghĩa : Do người dùng tự tạo. Có thể có nhiều cách để tối ưu.\nVí dụ : Hãy kiểm tra xem số bạn nhập có phải là 1 số nguyên tố hay không ?\n\n- Code minh hoạ C++\n\n```c++\n#include <iostream>\nusing namespace std;\nbool soNguyenTo(int);\nbool soNguyenTo(int soA) // hàm bool trả về true/false\n{\n\tif (soA < 2) // Nếu số A nhỏ hơn 2\n\t{\n\t\treturn false;// trả về false\n\t}\n\telse if (soA>2)// Nếu số A lớn hơn 2\n\t{\n\t\tif (soA % 2 == 0)  // Xét xem A có chia hết cho 2 không?\n\t\t{\n\t\t\treturn false;// Nếu chia hết, return false.\n\t\t}\n\t\tfor (int i = 3; i < sqrt((float)soA); i += 2)  // xét từ 3 đến căn bậc 2 của số A\n\t\t{\n\t\t\tif (soA%i == 0)  // nếu A chia hết cho một số nào đó trong đoạn này\n\t\t\t{\n\t\t\t\treturn false;// trả về kết quả sai\n\t\t\t}\n\t\t}\n\t}\n\treturn true;// sau tất cả các chỗ trên, nó mà không sai thì cuối cùng nó đúng :3\n}\nint main(int argc, char ** argv)\n{\n\tint n; // khai bao so kiem tra la so nguyen\n\tcout << \"Nhap so can kiem tra?!\" << endl;\n\tcin >> n; // nhap vao so nguyen tu ban phim\n\tif (soNguyenTo(n) == true)\n\t{\n\t\tcout << \"So \" << n << \" la so nguyen to!!!!\";\n\t}\n\telse\n\t{\n\t\tcout << \"So \" << n << \" khong phai nguyen to!!!!\";\n\t}\n\tsystem(\"pause\");\n\treturn 0;\n}\n```\n\n- Hình minh họa:\n\n<img src='/uploads/default/2093/2b321a23ae4a02fb.gif'>\n","__filename":"posts/2171.md","__url":"/wiki-ham-ki-m-tra-s-nguyen-t-trong-c-c/","__resourceUrl":"/wiki-ham-ki-m-tra-s-nguyen-t-trong-c-c/index.html","__dataUrl":"/wiki-ham-ki-m-tra-s-nguyen-t-trong-c-c/index.html.72561e8e61221ddb899a7c0680464e86.json"}