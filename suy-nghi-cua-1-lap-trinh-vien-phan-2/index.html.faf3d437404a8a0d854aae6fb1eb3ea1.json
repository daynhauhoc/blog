{"head":{"id":7734,"layout":"Post","route":"suy-nghi-cua-1-lap-trinh-vien-phan-2","title":"Suy nghĩ của 1 lập trình viên ! ( Phần 2 )","tags":null,"date":"2015-05-27T18:44:39.593Z","author":{"username":"khiemnvd","avatar":"/user_avatar/daynhauhoc.com/khiemnvd/{size}/9211_1.png"},"description":"tiếp theo phần 1 [http://daynhauhoc.com/t/suy-nghi-cua-1-lap-trinh-vien-phan-1/7733][1]\n\nTrong bài viết trước, tôi đã cố gắng mô tả một số…"},"body":"<p>tiếp theo phần 1 <a href=\"http://daynhauhoc.com/t/suy-nghi-cua-1-lap-trinh-vien-phan-1/7733\">http://daynhauhoc.com/t/suy-nghi-cua-1-lap-trinh-vien-phan-1/7733</a></p>\n<p>Trong bài viết trước, tôi đã cố gắng mô tả một số khía cạnh của nghề lập trình viên, nhưng quên nêu lên luận điểm quan trọng nhất: vì sao lại như vậy và chúng ta phải làm thế nào đây?</p>\n<p>Ta sẽ đi đến đâu từ vị trí này?</p>\n<p>Nào, trước hết chúng ta bắt đầu bằng câu hỏi:</p>\n<p>Chúng ta sẽ được làm gì khi tham gia vào một công ty phần mềm?</p>\n<p>Quan niệm phổ biến hiện nay nói rằng bạn sẽ bắt đầu ở vị trí thấp nhất là một lập trình viên (programmer, hoặc là developer, hoặc coder, hoặc tester, hoặc technician). Ở đó bạn cần hoàn thành tốt các công việc được giao bằng nỗ lực cá nhân. Nếu làm tốt, bạn sẽ tiến lên làm lãnh đạo nhóm (team leader, hoặc senior developer), khi đó công việc chuyên môn được chia ra, bạn chỉ làm những thứ khó nhất và quan trọng nhất; còn đối với những việc dễ và thường lập đi lập lại, bạn sẽ chỉ dẫn những người lập trình viên ở bên dưới thực hiện. Lên một mức cao hơn, bạn sẽ được làm quản lý dự án (nếu bạn có thiên hướng về quản lý) hoặc sẽ làm trưởng phòng kỹ thuật (nếu bạn có thiên hướng về chuyên môn). Lúc này bạn sẽ dành phần lớn thời gian cho việc lập kế hoạch, giao việc, kiểm soát, sử dụng người, đào tạo,... Tiếp tục lên cao nữa, bạn sẽ được tham gia vào ban lãnh đạo, nơi bạn sẽ chịu trách nhiệm định hướng, phân tích cơ hội, thách thức,... Và cứ thế tiếp tục lên cao nữa.</p>\n<p>Tôi nghe người ta mô tả về nấc thang nghề nghiệp trên ngay từ khi bước chân vào khoa Công nghệ thông tin trường Đại học Bách Khoa. Lúc tôi đi dự phỏng vấn ở các công ty phần mềm, người ta lại nói về nó. Khi tôi đã đi làm và trong các buổi đánh giá thành tích (performance appraisal), người ta cũng lại nói về nó. Đến khi tôi rời khỏi công ty, người ta vẫn lại nói về nó. Cho đến gần đây khi tôi có dịp trở lại trường đại học Bách Khoa, tôi lại vẫn thấy người ta tiếp tục nói về nó!</p>\n<p>Tôi thấy quan niệm đó có gì đó mẫu thuẫn và hơi buồn cười. Vì sao vậy? Tôi xin nêu ra một số lý do sau.</p>\n<p><strong>1) Vị trí phía trên không phải là hình thức cao hơn của vị trí phía dưới</strong></p>\n<p>Điều kỳ diệu nhất của con người so với những sinh vật khác là khả năng tiến hóa và phát triển. Chúng ta biết rằng các loài đều tiến hóa từ hình thức cấp thấp lên hình thức cấp cao. Người ta gọi đó là một phần của sự phát triển.</p>\n<p>Nhưng nghề nghiệp của chúng ta thì lại không phát triển theo cách như vậy được. Thử lấy ví dụ về công việc của người kiểm thử phần mềm (tester) và lập trình viên. Rất nhiều người quản lý mắc phải sai lầm thô thiển khi cho rằng lập trình viên là hình thức cao hơn của tester. Điều đó có nghĩa là, nếu một nhân viên hơi yếu về kỹ năng lập trình, cách tốt nhất là đưa người đó vào vị trí tester. Đ���n khi nào người đó thể hiện tương đối tốt công việc của tester, ta sẽ thăng cấp cho người đó lên vị trí lập trình viên.</p>\n<p>Thực sự thì tester và lập trình viên đòi hỏi hai loại người hoàn toàn khác nhau. Những người lập trình viên giỏi là những người đặc biệt yêu thích sự chặt chẽ, sự hiệu quả, và những vấn đề hóc búa (có thể đọc cuốn Làm thế nào để dịch chuyển núi Phú Sĩ? để biết rõ những người lập trìnn viên xuất sắc nhất thế giới thích giải quyết những câu đố hóc búa cỡ nào; tuy nhiên chú ý là bản dịch sang tiếng Việt hơi bị kém.) Khả năng đó giúp cho họ hiểu được một bài toán trừu tượng và cụ thể hóa nó bằng các dòng lệnh máy tính trong thời gian ngắn nhất, với độ chính xác cao nhất.</p>\n<p>Nhưng nếu có dịp gặp gỡ những tester xuất sắc, bạn sẽ thấy họ hoàn toàn khác biệt. Họ đặc biệt giỏi trong các bài toán tổ hợp (vd: với những điều kiện này thì có bao nhiêu tình huống có thể xảy ra); họ rất ghét phải làm đúng theo một quy trình các bước đã định sẵn (họ luôn tò mò chuyện gì sẽ xảy ra nếu ta bỏ qua bước này, nếu ta đổi ngược thứ tự hai bước kế tiếp nhau); và họ có một niềm đam mê, có thể nói là đến mức bệnh hoạn, trong việc tìm ra chỗ sai sót của mọi việc (những tester xuất sắc luôn vui mừng vì chứng minh sản phẩn bị lỗi, và cảm thấy rất khó chịu khi phải chấp nhận rằng sản phẩm không còn lỗi, trong khi người bình thường thì ngược lại).</p>\n<p>Điều đấy cho thấy rằng không có dấu hiệu gì để bảo đảm một tester xuất sắc sẽ có thể trở thành một lập trình viên xuất sắc. Cũng không có lý do gì để cho rằng lập trình là công việc đòi hỏi kỹ năng cao hơn so với kiểm thử.</p>\n<p>Cũng cách nhìn nhận như vậy, ta sẽ thấy rằng system analysis không phải là hình thức cao hơn của developer, manager không phải là hình thức cao hơn của system analysis, và director không phải là hình thức cao hơn của manager,... Ở mỗi cặp so sánh như vậy, thành công ở vị trí đầu tiên không thể bảo đảm sẽ thành công ở vị trí tiếp theo.</p>\n<p>Để dễ hình dung, chúng ta hãy nói đến bóng đá. Hồi còn nhỏ, tôi và các bạn vẫn có suy nghĩ ấu trĩ giống như trên khi chơi bóng đá. Những đứa giỏi nhất (hoặc có uy nhất) sẽ được đá ở trên hàng tiền đạo, kém hơn một ít thì đã ở giữa làm tiền vệ, ai không có chút khéo léo và khả năng thì cho làm hậu vệ, còn đứa nào tệ nhất thì đẩy xuống làm thủ môn.</p>\n<p>Đội bóng đó đã thi đấu thế nào? Hoàn toàn thất bại. Chúng tôi có thủ môn tầm thường, các hậu vệ tầm thường, tiền vệ cũng tầm thường, và tiền đạo cũng tầm thường nốt. Ai cũng không cảm thấy thoải mái ở vị trí của mình cả, nghĩ rằng mình không thể phát huy hết khả năng ở đây. Vì vậy chẳng ai thực sự thi đấu cả, nhất là những đứa phía dưới. Đứa nào cũng hau háu lao lên để ghi bàn hoặc thể hiện kỹ thuật cá nhân, mong có lúc nào đã sẽ được nhìn nhận lại để được xếp ở vị trí phía trên.</p>\n<p>Rất nhiều công ty phần mềm đang ở vào tình trạng giống như đội bóng của chúng tôi trước kia. Hiện tượng là khác nhau, nhưng bản chất của vấn đề là một.</p>\n<p><strong>2) Một cuộc đua vô nghĩa</strong></p>\n<p>Khi thiết kế ra những nấc thang nghề nghiệp kia, người ta đã vô tình đẩy mọi nhân viên vào một cuộc đua vô nghĩa và rất thiếu tính nhân bản. Tất cả những người mới bắt đầu sẽ đứng ở nấc thang thấp nhất. Trong những người này, ai giỏi hơn sẽ được bước lên nấc thang cao hơn. Nấc thang càng ở trên cao thì chỗ cho những người ở đó cũng càng ít đi. Bạn nghĩ sao? Một sự canh tranh rất tốt cho sự phát triển?</p>\n<p>Nhìn bề ngoài thì có vẻ như vậy. Nhưng thực sự bên trong thì không giống như vậy. Hãy nghe câu chuyện của hai người sau đây để có thể hiểu vì sao như vậy.</p>\n<p>Anh K. là một lập trình viên xuất sắc khi vào làm cho công ty phần mềm X. Anh có một niềm đam mê mãnh liệt với công việc lập trình, và chỉ trong nửa năm tài năng đặc biệt của K. đã được mọi người thừa nhận. Manager của K., lo lắng rằng có thể mất K. vào các công ty khác và cũng muốn giúp K. phát triển nghề nghiệp, liền đề nghị thăng chức cho K. lên vị trí trưởng nhóm lập trình. Vẫn với đà tiến triển như vậy, sau gần hai năm K. lại bước thêm lên được nấc thang cao hơn nữa: project manager. Mọi chuyện tồi tệ bắt đầu từ đây. Ở vị trí này, K. sớm nhận ra mình thiếu quá nhiều thứ để trở thành nhà lãnh đạo giỏi: kiến thức, kinh nghiệm, tài năng,... K. cảm thấy mọi thứ đều trì trệ. K. cảm thấy bị lạc lối. K. cảm thấy không còn nhiệt tình khi làm công việc hiện tại nữa. K. cảm thấy công việc thật bế tắc. Dù lãnh đạo công ty đã tạo điều kiện cho K. tham dự các khóa đào tạo về quản lý, K. vẫn không thấy tình hình khá hơn. Kiến thức có thể học được, kinh nghiệm có thể tích lũy theo thời gian, nhưng như vậy thì chưa đủ. K. hiểu rằng mình không có tài năng lãnh đạo: anh không có khả năng trình bày tốt, không có khả năng ra quyết định khi không có đầy đủ thông tin,...</p>\n<p>Cấp trên động viên K. rằng nếu cố gắng thì K. sẽ sớm khắc phục được những khiếm khuyết đó. Nhưng K. thì không tin rằng như vậy. K. hiểu rằng mình thiếu yếu tố cơ bản nhất để làm được những điều đó: K. không hề có sự đam mê công việc quản lý. Không có đam mê, anh không thể thấy được mình muốn gì, sẽ đi về đâu, và không hề có đủ sức mạnh để vượt qua những khó khăn và cám dỗ xung quanh. Đào tạo hoặc kinh nghiệm thì không thể giúp gì để tạo ra niềm đam mê.</p>\n<p>K. cảm thấy thời gian đang kéo dài ra. K. cảm thấy chán nản với công việc. K. cảm thấy không hài lòng với nấc thang hiện nay mình đang đứng. K. muốn có sự mới mẻ, tiến bộ và phát triển. Ban lãnh đạo thấy điều đó và lại động viên: K. cần cố gắng hoàn thiện một số mặt nữa để có thể rời nấc thang hiện tại và bước lên nấc thang cao hơn nữa.</p>\n<p>Và K. thấy thất vọng tràn trề. Không, anh không còn muốn bước lên nấc thang kế tiếp nữa. Ngay cả nấc thang cao nhất ở trên cùng cũng không còn hấp dẫn đối với anh nữa. Anh đã bước qua nhiều nấc thang trong thời gian quá ngắn để rồi chợt nhận ra rằng mình đã bước đi quá xa. Càng lúc anh càng xa rời những việc anh yêu thích nhất, những việc mà anh có thể phát huy hết khả năng của mình, những việc luôn kích thích anh phát triển và học hỏi nhiều hơn. Đáng buồn thay, đó là những công việc ở nấc thang phía dưới nơi anh đứng.</p>\n<p>Nhưng K. không thể bước xuống được. Không ai có thể từ vị trí project manager lại chuyển xuống làm developer được. Và K. cũng không muốn bước xuống nữa. Ở những nấc thang phía dưới giờ chỉ còn lại những người có khả năng lập trình tầm thường và khả năng lãnh đạo cũng tầm thường, những người không có chút đam mê với công việc, những người cũng mất phương hướng như anh.</p>\n<p>K. không biết đi đến đâu từ vị trí hiện tại của mình. Bi kịch của K. là rất phổ biến, và cũng chính vì vậy mà tôi lấy đó làm tiêu đề của bài viết.</p>\n<p>Cái hệ thống phát triển nghề nghiệp trên đã tàn nhẫn đẩy K. và những người khác vào một cuộc đua hoàn toàn vô nghĩa cho chính bản thân họ. Nó luôn thúc mọi người tiến lên và tiến lên một cách mù quáng; càng bước lên cao, họ càng nhận ra nó thật vô nghĩa đối với bản thân. Cái gì vô nghĩa với từng nhân viên thì sớm muộn cũng sẽ hoàn toàn vô nghĩa với công ty.</p>\n<p>K. sẽ không bước lên nấc thang kế tiếp, dù công ty có làm mọi cách. Anh cũng sẽ không bước xuống nấc thang bên dưới. Và anh chỉ có một chọn lựa thực sự: nhảy ra khỏi cái thang đó.</p>\n<p>Câu chuyện thứ hai.</p>\n<p>T. đã từng là một sinh viên đầy năng động và có khả năng phân tích, đánh giá vấn đề cực kỳ xuất sắc. Cô yêu thích công việc phân tích thiết kế hệ thống và mong muốn theo đuổi nghề đó thật lâu dài. Nhưng khi vào công ty F., người ta đánh giá rằng vì kinh nghiệm lập trình của T. còn ít, nên tốt nhất cô nên bắt đầu từ vị trí tester. Sau một thời gian nếu có tiến bộ, cô sẽ được đưa lên làm lập trình viên, rồi nếu vẫn làm tốt, cô sẽ có đủ khả năng và kinh nghiệm để làm phân tích viên. T. vui vẻ chấp nhận đề nghị này.</p>\n<p>Gần hai năm trôi qua và T. vẫn làm tester ở công ty đó. Dĩ nhiên là cô thất vọng. Cô thấy mình bị mắc kẹt ở phía dưới. Người ta vẫn nhắc nhở T. trong những buổi đánh giá nhân viên rằng T. cần vượt qua hai nấc thang trước khi đến được vị trí mình mong muốn. Nhưng T. không thể bước lên được. Chỉ có một số người được bước lên nấc thang kế tiếp từ vị trí hiện tại. Những người sớm phát huy khả năng trong công việc kiểm thử đã bước lên trước T. hết rồi. Cô không thể cạnh tranh với họ được, đơn giản bởi vì khả năng testing của cô không thể bằng họ. Người ta tiếp tục khuyến khích T. nâng cao các kỹ năng và kinh nghiệm testing, lập trình để được trở thành phần tích viên!!! T. thấy buồn cười và mất tự tin. T. không còn thấy kiên nhẫn với công việc và công ty nữa. Gia đình và bạn trai của của cũng không còn kiên nhẫn được nữa. Cũng như K. cô cũng nhảy ra khỏi cái thang đó.</p>\n<p>Chúng ta đều biết cái thang và từng nấc thang của nó vô nghĩa như thế nào. Nhưng không ai nói điều đó với chúng ta cả. Chúng ta vẫn vẽ nó ra để động viên nhau, và động viên chính chúng ta. Nhưng không sớm thì muộn, chúng ta sẽ biết nó thật ngốc nghếch.</p>\n<p>Nó vô nghĩa vì chẳng có ai có thể bước hết tất cả các bậc, từ bậc thấp nhất lên bậc cao nhất được. Nếu có ai đó có thể làm được điều đó, thì tôi không thể hình dung được một người hoàn hảo đến thế. Tôi đã thử tìm hiểu tiểu sử của rất nhiều những nhân vật kiệt xuất và thành đạt trong lĩnh vực của mình, và nhận ra rằng không có ai hoàn hảo đến vậy.</p>\n<p>Nó vô nghĩa bởi vì nó ép chúng ta vào một cuộc đua mà cuối cùng tất cả những người tham gia đều là kẻ bỏ cuộc. Nó buộc chúng ta nếu muốn phát triển thì phải tiến lên. Khi tiến lên có nghĩa chúng ta phải rời bỏ vị trí mà chúng ta ưa thích và có thể tiến bộ, để bước vào một địa hạt mà chúng ta hoàn toàn lạ lẫm và không có dấu hiệu gì cho thấy sẽ tiến bộ.</p>\n<p>Những người trong ngành đều đã được nghe về chuyện của K. và T., nhưng không biết kết thúc của câu chuyện là thế nào. Tôi cũng không biết bây giờ họ ra sao. Một số người nói rằng sau khi nhảy khỏi cái thang đó, K. trở thành một lập trình viên tự do. Người khác nói rằng K. đã đổi nghề. Có người thì thấy T. lập gia đình và theo chồng định cư ở nước ngoài rồi học lên cao. Lại có người cho rằng T. đã trở thành nữ chủ doanh nghiệp của riêng mình.</p>\n<p>Nhưng tôi tin rằng, dù ở nơi nào đó, và dù đang làm nghề gì, nếu được hỏi về câu chuyện những nấc thang nghề nghiệp, cả hai sẽ đều cười và nói rằng không bao giờ muốn trở lại với nó nữa.</p>\n<p><strong>3) Triệt tiêu những cá nhân xuất sắc</strong></p>\n<p>Dĩ nhiên cũng có một số người có thể trèo lên những nấc thang thật cao trong một thời gian rất ngắn. Hiện nay ở Việt Nam điều đó ngày càng xuất hiện nhiều. Chúng ta không còn thấy lạ nếu biết được có người chưa đầy 30 tuổi đã trở thành senior manager, thậm chí là director của những công ty lớn.</p>\n<p>Trở thành senior manager khi chưa đầy 30 tuổi có nghĩa là gì?</p>\n<p>Có nghĩa là người đó chỉ cần trải qua chừng 1-2 năm ở mỗi nấc thang: developer, team leader, manager,... (Dĩ nhiên có một số ít người đã đi làm từ trước khi tốt nghiệp đại học, nhưng đó không phải là đa số) trước khi bước được lên nấc thang kế tiếp.</p>\n<p>Tôi thấy nghi ngờ về điều này. Có lẽ ở Việt Nam chúng ta đã quá dễ dãi trong việc đánh giá năng lực con người. Tôi may mắn có dịp biết được một số lập trình viên làm việc trong các công ty ở Mỹ (họ là công ty đối tác của công ty tôi), và đã từng bị sốc khi biết rằng họ đều ngoài 50 tuổi. Họ làm lập trình viên đã được hơn 20 năm, có nghĩa là tuổi nghề của họ còn lớn hơn tuổi đời của tôi! Ồ, đừng nghĩ rằng họ là những nhân viên kém cỏi nên mới ở mãi vị trí đó. Xét về năng lực, kinh nghiệm và kiến thức, có lẽ tôi chưa quen ai ở Việt Nam có thể sánh được với họ.</p>\n<p>Nhân viên ở Nhật cũng cần 10 đến 15 năm làm công việc chuyên môn trước khi được xem xét để thăng chức. Ở Microsoft, lập trình viên cũng có 4-5 năm làm việc trở lên.</p>\n<p>Trong nghiên cứu mang tên Dự án Phát triển tài năng, tiến sĩ Benjamin Bloom của trường đại học NorthWestern đã tìm hiểu quá trình phát triển của những cá nhân xuất sắc trong nhiều lĩnh vực khác nhau. Kết luận được ông đưa ra là những người đó trung bình mất từ 10 đến 18 năm để đạt đến thành tựu cao nhất trong lĩnh vực của mình. Nghĩa là ngay cả những cá nhân kiệt xuất nhất trên thế giới (nghiên cứu đó đánh giá họ có trình độ world-class), cần không dưới 10 năm để đạt đến đỉnh cao trong lĩnh vực của họ. Chú ý rằng lập trình viên, quản lý, hoặc kinh doanh là những lĩnh vực hoàn toàn khác nhau. Nghiên cứu của tiến sĩ Benjamin không hề nói rằng cần mất trên 10 năm để con người vươn lên vị trí lãnh đạo cao nhất.</p>\n<p>Đây là một sự tai hại nữa của cái thang nghề nghiệp. Nó khiến cho chúng ta không thấy được đỉnh cao trong từng công việc, ngược lại nó làm cho chúng ta vội vã tìm cách thể hiện mình vừa đủ tốt trong nấc thang hiện tại để được bước lên cao. Và đến lúc nào đó, như anh K. chẳng hạn, chúng ta sẽ sớm nhận ra chúng ta đã bước đi quá xa, đến nỗi chúng ta không thể quay lại, đồng thời chúng ta đã không còn hứng thú gì nữa với những nấc thang phía trên nữa. Cái gì đến quá dễ thì ra đi cũng dễ dàng như vậy.</p>\n<p>Có thể đây là sản phẩm của những người làm công tác nhân sự chăng? Trong nỗ lực tìm ra cách giúp mọi nhân viên phát triển nghề nghiệp, họ đã vô tình bắt mọi người phải leo thang! Và sau quá trình leo thang mệt mọi như vậy, chúng ta sẽ thấy một số ít người ở trên cao có khả năng làm tốt được nhiều việc, nhưng chẳng có việc gì xuất sắc. Còn phần lớn mọi người thì ở bên dưới, bất mãn và buồn chán vì không thấy mình tiến bộ. Những người ở giữa thì hoang mang và mất phương hướng.</p>\n<p>Bạn cần chú ý cách dùng từ ở đây, cần phải thấy được sự khác biệt giữa tốt (good) và xuất sắc (excellent, hoặc great). Tôi tin một số người chỉ cần mất 1-2 năm để làm tốt một số việc nào đó, nhưng để đạt được mức độ xuất sắc thì không thể.</p>\n<p>Tôi sẽ không ngạc nhiên nếu càng về sau chúng ta càng có ít những người xuất sắc, những người giữ vị trí hàng đầu trong lĩnh vực của họ. Thiếu những người đó, chúng ta sẽ không thể phát triển xa được. Tôi cũng không ngạc nhiên nếu một ngày nào đó, mọi người lại tiếp tục xuýt xoa về loạt bài báo: những người leo thang số 1 Việt Nam. Có những người leo thang như vậy, chúng ta sẽ mãi ì ạch thua xa những nước khác.</p>\n<p>Điều này sẽ rất khó thay đổi, vì càng ngày càng có nhiều người tham gia vào cuộc đua leo thang. Và những nấc thang thì càng lúc càng nhiều ra. Tôi được biết có công ty lúc mới thành lập thì chỉ có 3 nấc thang: developer, team leader, và boss. Nhưng sau đó thì họ có thêm nấc manager ở giữa team leader và boss. Rồi consultant ở giữa team leader và manager. Rồi senior developer ở giữa developer và team leader. Rồi thêm senior manager. Lần gần đây nhất khi xem trên website của công ty thì tôi thấy đã có thêm director. Tôi nghĩ số nấc thang sẽ không dừng lại ở đây.</p>\n<p>Đây là điều rất nguy hiểm. Với sự phát triển vô độ như vậy, chẳng mấy chốc các công ty sẽ giống như một anh chàng ốm nhách và cao kêu. Ai cũng được quản lý một số người phía dưới của mình. Tướng nhiều nhưng quân thì ít. Một số người bên dưới phải lao động vất vả cho số lượng rất nhiều người bên trên. Quá nhiều người tầm thường ở các cấp quản lý trung gian. Mọi người sẽ phí nhiều thời gian cho việc họp hành, báo cáo, kế hoạch, đánh giá, khen thưởng,... nên sẽ ít thời gian cho những công việc thực tế (viết code, kiểm tra, tạo quan hệ tốt với khách hàng,...)</p>\n<p>Chúng ta nên làm gì?\nChúng ta có 2 cách tiếp cận để giải quyết những vấn đề trên. Cả 2 cách đều được lấy từ cuốn sách Peopleware mà tôi đã từng giới thiệu, cùng với cuốn sách “First Break All The Rules” – một cuốn sách mà những người làm quản lý và nhân sự nên đọc. Tôi viết bài viết này cũng là nhờ lấy thông tin từ 2 cuốn sách trên.</p>\n<p>Cách thứ 1: tôi gọi là “sửa chữa nhẹ”. Chúng ta sẽ điều chỉnh lại những ảnh hưởng của cái thang theo hướng tích cực.</p>\n<p>Cách thứ 2: tôi gọi là “làm lại hoàn toàn”. Tôi sẽ trình bày về cách này ở phần sau.</p>\n<p>Sửa chữa nhẹ có nghĩa là chúng ta tạm chấp nhận sự tồn tại của cái thang, nhưng sẽ “tùy biến” nó lại một chút. Quan điểm thông thường bảo rằng chúng ta chỉ được phép tiến lên trên cái thang (hoặc có thể rẽ trái hay phải tùy theo chúng ta có thiên hướng quản lý hay kỹ thuật, nhưng cuối cùng thì cũng phải đi lên). Vậy thì chúng ta sẽ thêm một lựa chọn nữa khi leo thang: nếu ai không thích leo lên trên thì có thể leo ngang!</p>\n<p>Nghĩa là mỗi người sẽ được khuyến khích đi sâu vào lĩnh vực mà họ đang làm. Không nhất thiết phải giỏi mọi thứ trong thời gian ngắn mới được đánh giá cao, thay vì vậy mỗi người cần tìm cái mình thích nhất và có khả năng nhất, rồi tập trung phát triển để mình trở nên xuất sắc nhất trong lĩnh vực đó.</p>\n<p>Sau đây tôi sẽ trình bày cụ thể chúng ta sẽ cần làm thế nào và hệ quả sẽ ra sao.</p>\n<p><strong>1) Trả lương theo đúng năng lực</strong></p>\n<p>Chắc chắn những gì tôi trình bày ở trên sẽ khiến bạn phải nghi ngờ ngay: thực tế tuy phũ phàng nhưng nó phải là như vậy. Manager thì quan trọng hơn developer nên lương cũng cao hơn developer. Vì vậy ai cũng muốn thăng tiến để làm manager. Suy cho cùng thì ai lại chẳng muốn địa vị cao và lương cao!</p>\n<p>Đúng vậy, tìm một manager tốt thì khó hơn rất nhiều so với tìm được developer tốt. Để trở thành manager tốt thì cũng cần nhiều thời gian, nhiều kỹ năng hơn, nhiều kinh nghiệm hơn, cho nên lương trung bình của manager phải cao hơn lương trung bình của developer.</p>\n<p>Nhưng sẽ thật sai lầm nếu cho rằng lương của mọi manager đều phải cao hơn lương của mọi developer. Nếu công ty trả lương dựa trên nấc thang mà nhân viên đang đứng, thì không sớm thì muộn mọi nhân viên sẽ cũng xô đẩy nhau vào cuộc đua leo thang không có kết thúc hậu.</p>\n<p>Trở lại câu chuyện bóng đá một chút. Thật ra ngay cả những đứa nhỏ cũng hiểu làm tiền đạo thì có giá hơn làm hậu vệ. Tiền đạo ít khi thi đấu đủ 90 phút, lại chạy ít hơn, nhưng lúc nào cũng nhận lương cao hơn, giá trị chuyển nhượng cũng cao hơn, và luôn được hâm mộ hơn so với hậu vệ. Vậy thì ai lại muốn làm hậu vệ?</p>\n<p>Câu trả lời là có. Đó là những hậu vệ xuất sắc. Thể thao, đặc biệt là bóng đá, có một hệ thống lương bổng tốt mà những ngành khác nên học tập. Nó khuyến khích những hậu vệ giỏi luôn nỗ lực để xuất sắc hơn, thay vì cắm cúi rèn luyện để trở thành những tiền đạo trung bình. Họ hiểu rằng làm hậu vệ xuất sắc thì lương cao hơn làm tiền đạo trung bình. Dĩ nhiên, họ cũng hiểu ở cùng trình độ cao như họ thì những đồng nghiệp trên hàng tiền đạo sẽ có lương cao hơn, hợp đồng quảng cáo nhiều hơn, khả năng đạt giải thưởng (như Quả bóng vàng chẳng hạn) cũng sẽ lớn hơn. Nhưng điều đó không làm họ quan tâm, bởi vì họ hiểu rằng mình sinh ra không phải để làm tiền đạo xuất sắc.</p>\n<p>Tương tự như vậy, trong bóng đá thì lương trung bình của huấn luyện viên luôn cao hơn lương trung bình của cầu thủ. Mourinho có mức lương mà rất nhiều cầu thủ ở Chelsea phải thèm muốn. Các cầu thủ Việt Nam hẳn sẽ phải e dè trước mức lương của ông Riedl. Nghề huấn luyện viên cũng có tuổi thọ cao hơn nghề cầu thủ.</p>\n<p>Nhưng chẳng có mấy cầu thủ muốn kết thúc sự nghiệp cho nhanh để trở thành huấn luyện viên. Bởi vì trở thành cầu thủ xuất sắc đối với họ thì khả thi hơn, và khi đó họ cũng có thu nhập cao hơn so với việc trở thành huấn luyện viên làng nhàng.</p>\n<p>Chúng ta nên làm như vậy trong ngành phần mềm. Chúng ta vẫn giữ những nấc thang như vậy, nhưng sẽ trả lương sao cho những người xuất sắc ở nấc thang bên dưới sẽ có lương cao hơn so với những người bình thường ở nấc thang bên trên.</p>\n<p>Lấy ví dụ ở công ty Merrill Lynch. Theo như tác giả Marcus Buckingham và Curt Coffman của cuốn sách “First Break All The Rules” thì lương cao nhất mà một người cố vấn tài chính có thể nhận được là 500 ngàn đô la một năm. Trong khi đó, lương thấp nhất của một giám đốc chi nhánh (vị trí cao hơn so với cố vấn tài chính) chỉ là 150 ngàn đô la. Vì vậy, nếu một cố vần tài chính giỏi muốn được thăng chức, anh/chị ấy phải chấp nhận rủi ro sẽ bị lương thấp hơn đi rất nhiều. Dĩ nhiên, ở khía cạnh còn lại, nếu trở thành giám đốc chi nhánh xuất sắc, lương của họ có thể lên đến hàng triệu đô la. Cuộc chơi rất công bằng.</p>\n<p>Các cầu thủ xuất sắc hoặc cầu thủ gạo cội cũng phải cân nhắc rất nhiều khi chuyển sang nghề huấn luyện viên. Bởi vì ngay lập tức họ sẽ bị giảm lương so với khi làm cầu thủ. Nguyên tắc này khuyến khích những người giỏi trở nên giỏi hơn, và loại bớt những người chỉ nhằm vào thu nhập cao mà không cần tài năng ra khỏi cuộc chơi.</p>\n<p>Cũng có nhiều người phải đối cách làm này. Họ nghĩ rằng cách làm hiện tại đỡ tốn kém hơn. Trả nhiều cho manager (có số người ít) và trả ít cho developer (có số người nhiều hơn) thì sẽ tiết kiệm hơn so với làm ngược lại. Họ nghĩ rằng chỉ cần manager giỏi thì cũng có thể quản lý được một tập thể developer trung bình.</p>\n<p>Một tập thể developer trung bình thì kết quả cuối cùng sẽ là trung bình, cho dù manager có là ai. Người manager sẽ phải mất nhiều thời gian để “hốt” những hậu quả và sai sót mà những developer để lại. Họ sẽ giẫm lên chân nhau. Một số người, đặc biệt là manager, thậm chí phải dành thời gian để lao vào coding thay cho những người không có khả năng. Cơn ác mộng này hẳn ai trong chúng ta cũng từng một lần biết qua.</p>\n<p>Nếu một manager xuất sắc mà tập thể thì kém cỏi, kết quả sẽ thế nào? Không khó phải đoán, vì kinh nghiệm cho thấy kết quả của tập thể đó cũng sẽ rất kém cỏi. Điều duy nhất mà manager xuất sắc làm tốt hơn manager kém cỏi trong trường hợp này là dù thất bại, các thành viên cũng vấn thấy vui vẻ vì đã làm việc chung với người manager xuất sắc, vì họ đã học được nhiều điều có ích. Ngược lại, họ sẽ vô cùng tức giận và ganh ghét vì thấy người kém cỏi mà cũng được làm manager.</p>\n<p>Khả năng duy nhất mà manager xuất sắc có thể làm là biến một tập thể có tiềm năng trở nên thực sự xuất sắc. Điều này thì manager trung bình hay kém cỏi không thể làm được.</p>\n<p>Vì vậy, hãy trả lương cao cho những những developer xuất sắc, và trả lương cao hơn nữa cho những manager xuất sắc; đối với những người còn lại thì trả lương thấp hơn.</p>\n<p><strong>2) Mở rộng các nâng thang sang chiều ngang</strong></p>\n<p>Phần lớn các công ty phần mềm đều định ra bảng liệt kê các tiêu chí để đánh giá nhân viên. Trong đó, nó sẽ phân biệt rạch ròi đâu là sự khác biệt giữa developer với senior developer, với team leader, với manager, với senior manager. Chẳng hạn, senior developer thì hơn developer ở số năm kinh nghiệm và khả năng truyền đạt. Nhưng rất ít nơi nào có khả năng định nghĩa đâu là sự khác biệt giữa developer kém, đâu là developer trung bình, và đâu là developer xuất sắc.</p>\n<p>Đánh giá như vậy thì buồn cười quá. Nếu dựa vào cách làm đó, tôi có thể nói rằng Trần Tiến Anh, cựu thủ môn của đội Thể Công giỏi hơn Ronaldinho nhiều. Ronaldinho chỉ biết đá ở vị trí tiền về tấn công hoặc tiền đạo. Nhưng Trần Tiên Anh thì “tròn trịa” hơn, bắt gôn thì hay, thình thoảng cũng đá được hậu vệ, khi nào có dịp đẩy lên đá tiền đạo cũng ngon lành chẳng kém tiền đạo mấy đội bóng phong trào.</p>\n<p>Cách làm hiện nay đang phá hủy nghề nghiệp của tester, developer, và cả team leader, những người ở nấc thang bên dưới. Rất nhiều người làm testing và lập trình hiện nay đang hoang mang và chán nản, vì cho rằng những công việc này chẳng có gì phức tạp cả, ai làm cũng như ai. Là một người say đặc biệt say mê phần mềm và làm phần mềm, tôi không khỏi xót xa vì chuyện này. Ngay cả những người dọn dẹp phòng trong các khách sạn cũng hiểu được thế nào là người làm giỏi, thế nào là người làm dở, vậy mà chúng ta không chịu phân biệt đâu là developer giỏi và đâu là developer dở. Mà thật ra ngay cả những vị trí ở trên cũng đang xảy ra tình trạng tương tự đấy thôi.</p>\n<p>Chúng ta nên chấm dứt tình trạng so sánh táo và cam, so sánh chó và mèo, so sánh tàu thủy và máy bay. Thay vì vậy, hãy so sánh những con mèo với nhau, chỉ rõ ra được đâu là mèo đẹp, đâu là mèo xấu; nuôi dưỡng và thưởng cho mèo đẹp để nó đẹp hơn, và không bao giờ khuyến khích nó trở thành chó nếu điều đó là không khả thi.</p>\n<p><strong>3) Thay đổi công việc phát triển phần mềm</strong></p>\n<p>Thực tình tôi cũng phải thừa nhận rằng với công việc phát triển phần mềm hiện nay, rất khó để khuyến khích mọi người phát triển theo chiều ngang được, dù đó là tester, developer, hay manager. Vâng, phần lớn chúng ta làm gia công phần mềm (outsourcing), và khi outsourcing, chúng ta không cần nhiều những developer xuất sắc như nước Mỹ, và về mức độ cũng không cần phải xuất sắc như những người hàng đầu ở Mỹ.</p>\n<p>Trong tình hình hiện nay, một số nhỏ những cá nhân xuất sắc ở Việt Nam sẽ không tìm được vị trí của nấc thang thích hợp cho mình. Họ đang hoang mang không biết làm gì. Phần lớn họ quyết định ra nước ngoài học lên cao. Tôi chưa có khả năng bình luận về điều này, bởi vì tôi không may mắn được sinh ra trong số đó. Tôi đã và đang phải vật lộn với từng nấc thang đấy thôi, bắt đầu từ nấc thang thấp nhất đấy thôi :P</p>\n<p>Nhưng ngay cả trong gia công phần mềm, vẫn còn rất nhiều khoảng trống để nhiều người phát triển sang ngang. Vấn đề là chúng ta có biết cách làm hay không. Tôi sẽ trở lại với đề tài này trong thời gian sắp tới.</p>\n<ol start=\"4\">\n<li>Hiểu rõ bản chất của sự phát triển</li>\n</ol>\n<p>Tuy vậy, cũng sẽ có nhiều người phản đối những gì tôi đã trình bày ở trên. Tôi đoán có lẽ họ xuất thân từ ngành nhân sự, vì cái thang sự nghiệp là sản phẩm của ngành đó, không phải là của ngành công nghiệp phần mềm. Tôi cũng đoán có lẽ họ nhiễm phim kiếm hiệp Hồng Kông nặng.</p>\n<p>Trong phim kiếm hiệp, nhân vật chính của chúng ta sẽ luyện võ công từ cơ bản đến thượng thừa bằng cách bước vào một tòa tháp nhiều tầng. Ở mỗi tầng sẽ có các đối thủ với những sở trường khác nhau. Chẳng hạn, ở tấng 1, anh ta phải đối đầu với một cao thủ về khinh công. Anh ta phải rèn luyện để khinh công của mình vượt qua được đối thủ đó. Chiến thắng ở tầng 1 sẽ cho phép anh ta bước lên tầng 2. Ở tầng này, anh ta sẽ phải luyện kiếm pháp để đánh bại một cao thủ chuyên về kiếm. Cứ như thế, tấng 3 sẽ là đao pháp, tầng 4 là quyền pháp, tầng 5 là khí công, tấng 6 là trí lực, tầng 7 là phi tiêu ám khí, vân vân và vân vân. Khi vượt qua được tất cả các tầng và lên đến đỉnh ngọn tháp, anh ta sẽ trở thành cao thủ đệ nhất thiên hạ.</p>\n<p>Quan niệm thông thường dạy chúng ta rằng đó là sự phát triển của con người. Chúng ta được khuyến khích chinh phục những cái chưa biết, những cái chưa làm, khắc phục những điểm yếu của mình. Chúng ta cần làm cho mình hoàn thiện hơn.</p>\n<p>Sự thực thì chẳng ai có thể làm được như vậy. Mỗi người sinh ra đều có điểm mạnh và điểm yếu riêng. Rất khó để chúng ta tự rèn luyện nhằm có thêm được những điểm mạnh mới, và càng không thể nếu chúng ta cố gằng tự sửa chữa điểm yếu để nó trở thành điểm mạnh.</p>\n<p>Tất cả các vĩ nhân đều có khiếm khuyết. Họ không mất thời gian đi sửa chữa khiếm khuyết của mình. Thay vào đó họ tìm ra đầu là điểm mạnh của họ, tìm môi trường để điểm mạnh phát huy hết, và tìm những người cộng sự xuất sắc ở lĩnh vực khác để bù đắp cho khiếm khuyết của mình.</p>\n<p>Tôi hiểu ra điều này sau khi đọc 2 cuốn sách ở trên, và nhất là sau khi cuộc trao đổi với một nhân viên trong công ty. Tôi hỏi:</p>\n<ul>\n<li>\n<p>Định hướng nghề nghiệp trong tương lai của em như thế nào? Và rồi tôi thao thao về những cơ hội phía trước, nào là leader, manager, technical director,...</p>\n</li>\n<li>\n<p>Em thấy mình phù hợp với công việc chỉnh sửa và hoàn thiện lại những phần mềm sẵn có, để nó trở nên tốt hơn. Em thích được làm việc, nhưng quan trọng nhất là em thích được chơi game!!! – Nhân viên đó trả lời.</p>\n</li>\n</ul>\n<p>Tôi bị bất ngờ và chợt bửng tỉnh. Tôi đã quá ngu muội, tưởng tượng mình là đạo diễn trong bộ phim kiếm hiệp, và dựng cho người nhân viên này vai chính trong đó. Tôi lại đi khuyến khích nhân viên này kinh qua tất cả các tầng để trở nên hoàn thiện hơn, nhưng lại không hiểu người này muốn gì và có khả năng gì.</p>\n<p>Bây giờ thì tôi đã hiểu. Người nhân viên của tôi không cần phải trở thành nhân vật chính trong bộ phim. Ngược lại, anh ta nên trở thành một trong các nhân vật phụ. Anh ta sẽ đi tìm xem mình thích cao thủ ở tầng nào nhất, và nếu đủ khả năng, anh ta sẽ ở lại tầng đó, rèn luyện để có thể trở thành cao thủ đệ nhất trong lĩnh vực đó. Có thể anh ta sẽ trở thành đệ nhất cao thủ khinh công, và như vậy anh ta không cần thiết phải luyện phép mình đồng da sắt làm gì nữa. Đơn giản là không thể được như vậy.</p>\n<p>Anh ta sẽ ở lại tầng đó càng lâu càng tốt. Có lẽ anh ta sẽ không bao giờ đi lên những tầng phía trên của ngọn tháp. Điều đó là không cần thiết. Bởi vì anh ta là một người rất đặc biệt. Cuộc sống của anh ta không phải là ở ngọn tháp đó. Anh ta chỉ ở tầng 1 của ngọn tháp trong một phần nhỏ của cuộc đời, và trong phần lớn thời gian còn lại, anh sẽ ra ngoài ngọn tháp, chơi những thứ mình thích, làm những điều có ý nghĩa khác, rồi ở bên những người quan trọng nhất đối với anh ta. Đó là phần kết của bộ phim.</p>\n<p>Chúng ta có rất nhiều chọn lựa</p>\n<p>Còn một cách khác, tôi cho rằng triệt để hơn, đó là chúng ta hãy dẹp bỏ cái thang đó. Rõ ràng là nó vô nghĩa và nó đang làm sự nghiệp của nhiều người trở nên vô nghĩa.</p>\n<p>Bất kỳ công ty nào cũng cần có sơ đồ mô tả bộ máy quản lý của công ty. Từ người thấp nhất đến người cao nhất. Sơ đồ này là phải có ở bất kỳ tổ chức nào. Nội dung của nó hoàn toàn giồng “bản vẽ” cái thang sự nghiệp mà chúng ta đang dùng.</p>\n<p>Nhưng chúng ta không nên sử dụng nó đễ định hướng cho nhân viên phát triển sự nghiệp theo đó. Chúng ta nên tìm cách khác tốt hơn.</p>\n<p><strong>Nguồn : Lê Đình Lĩnh Nam.(Nam Le&#x27;s Blog)</strong></p>\n","rawBody":"\ntiếp theo phần 1 [http://daynhauhoc.com/t/suy-nghi-cua-1-lap-trinh-vien-phan-1/7733][1]\n\nTrong bài viết trước, tôi đã cố gắng mô tả một số khía cạnh của nghề lập trình viên, nhưng quên nêu lên luận điểm quan trọng nhất: vì sao lại như vậy và chúng ta phải làm thế nào đây?\n\nTa sẽ đi đến đâu từ vị trí này?\n\nNào, trước hết chúng ta bắt đầu bằng câu hỏi:\n\nChúng ta sẽ được làm gì khi tham gia vào một công ty phần mềm?\n\nQuan niệm phổ biến hiện nay nói rằng bạn sẽ bắt đầu ở vị trí thấp nhất là một lập trình viên (programmer, hoặc là developer, hoặc coder, hoặc tester, hoặc technician). Ở đó bạn cần hoàn thành tốt các công việc được giao bằng nỗ lực cá nhân. Nếu làm tốt, bạn sẽ tiến lên làm lãnh đạo nhóm (team leader, hoặc senior developer), khi đó công việc chuyên môn được chia ra, bạn chỉ làm những thứ khó nhất và quan trọng nhất; còn đối với những việc dễ và thường lập đi lập lại, bạn sẽ chỉ dẫn những người lập trình viên ở bên dưới thực hiện. Lên một mức cao hơn, bạn sẽ được làm quản lý dự án (nếu bạn có thiên hướng về quản lý) hoặc sẽ làm trưởng phòng kỹ thuật (nếu bạn có thiên hướng về chuyên môn). Lúc này bạn sẽ dành phần lớn thời gian cho việc lập kế hoạch, giao việc, kiểm soát, sử dụng người, đào tạo,... Tiếp tục lên cao nữa, bạn sẽ được tham gia vào ban lãnh đạo, nơi bạn sẽ chịu trách nhiệm định hướng, phân tích cơ hội, thách thức,... Và cứ thế tiếp tục lên cao nữa.\n\nTôi nghe người ta mô tả về nấc thang nghề nghiệp trên ngay từ khi bước chân vào khoa Công nghệ thông tin trường Đại học Bách Khoa. Lúc tôi đi dự phỏng vấn ở các công ty phần mềm, người ta lại nói về nó. Khi tôi đã đi làm và trong các buổi đánh giá thành tích (performance appraisal), người ta cũng lại nói về nó. Đến khi tôi rời khỏi công ty, người ta vẫn lại nói về nó. Cho đến gần đây khi tôi có dịp trở lại trường đại học Bách Khoa, tôi lại vẫn thấy người ta tiếp tục nói về nó!\n\nTôi thấy quan niệm đó có gì đó mẫu thuẫn và hơi buồn cười. Vì sao vậy? Tôi xin nêu ra một số lý do sau.\n\n**1) Vị trí phía trên không phải là hình thức cao hơn của vị trí phía dưới**\n\nĐiều kỳ diệu nhất của con người so với những sinh vật khác là khả năng tiến hóa và phát triển. Chúng ta biết rằng các loài đều tiến hóa từ hình thức cấp thấp lên hình thức cấp cao. Người ta gọi đó là một phần của sự phát triển.\n\nNhưng nghề nghiệp của chúng ta thì lại không phát triển theo cách như vậy được. Thử lấy ví dụ về công việc của người kiểm thử phần mềm (tester) và lập trình viên. Rất nhiều người quản lý mắc phải sai lầm thô thiển khi cho rằng lập trình viên là hình thức cao hơn của tester. Điều đó có nghĩa là, nếu một nhân viên hơi yếu về kỹ năng lập trình, cách tốt nhất là đưa người đó vào vị trí tester. Đ���n khi nào người đó thể hiện tương đối tốt công việc của tester, ta sẽ thăng cấp cho người đó lên vị trí lập trình viên.\n\nThực sự thì tester và lập trình viên đòi hỏi hai loại người hoàn toàn khác nhau. Những người lập trình viên giỏi là những người đặc biệt yêu thích sự chặt chẽ, sự hiệu quả, và những vấn đề hóc búa (có thể đọc cuốn Làm thế nào để dịch chuyển núi Phú Sĩ? để biết rõ những người lập trìnn viên xuất sắc nhất thế giới thích giải quyết những câu đố hóc búa cỡ nào; tuy nhiên chú ý là bản dịch sang tiếng Việt hơi bị kém.) Khả năng đó giúp cho họ hiểu được một bài toán trừu tượng và cụ thể hóa nó bằng các dòng lệnh máy tính trong thời gian ngắn nhất, với độ chính xác cao nhất. \n\nNhưng nếu có dịp gặp gỡ những tester xuất sắc, bạn sẽ thấy họ hoàn toàn khác biệt. Họ đặc biệt giỏi trong các bài toán tổ hợp (vd: với những điều kiện này thì có bao nhiêu tình huống có thể xảy ra); họ rất ghét phải làm đúng theo một quy trình các bước đã định sẵn (họ luôn tò mò chuyện gì sẽ xảy ra nếu ta bỏ qua bước này, nếu ta đổi ngược thứ tự hai bước kế tiếp nhau); và họ có một niềm đam mê, có thể nói là đến mức bệnh hoạn, trong việc tìm ra chỗ sai sót của mọi việc (những tester xuất sắc luôn vui mừng vì chứng minh sản phẩn bị lỗi, và cảm thấy rất khó chịu khi phải chấp nhận rằng sản phẩm không còn lỗi, trong khi người bình thường thì ngược lại).\n\nĐiều đấy cho thấy rằng không có dấu hiệu gì để bảo đảm một tester xuất sắc sẽ có thể trở thành một lập trình viên xuất sắc. Cũng không có lý do gì để cho rằng lập trình là công việc đòi hỏi kỹ năng cao hơn so với kiểm thử.\n\nCũng cách nhìn nhận như vậy, ta sẽ thấy rằng system analysis không phải là hình thức cao hơn của developer, manager không phải là hình thức cao hơn của system analysis, và director không phải là hình thức cao hơn của manager,... Ở mỗi cặp so sánh như vậy, thành công ở vị trí đầu tiên không thể bảo đảm sẽ thành công ở vị trí tiếp theo.\n\nĐể dễ hình dung, chúng ta hãy nói đến bóng đá. Hồi còn nhỏ, tôi và các bạn vẫn có suy nghĩ ấu trĩ giống như trên khi chơi bóng đá. Những đứa giỏi nhất (hoặc có uy nhất) sẽ được đá ở trên hàng tiền đạo, kém hơn một ít thì đã ở giữa làm tiền vệ, ai không có chút khéo léo và khả năng thì cho làm hậu vệ, còn đứa nào tệ nhất thì đẩy xuống làm thủ môn.\n\nĐội bóng đó đã thi đấu thế nào? Hoàn toàn thất bại. Chúng tôi có thủ môn tầm thường, các hậu vệ tầm thường, tiền vệ cũng tầm thường, và tiền đạo cũng tầm thường nốt. Ai cũng không cảm thấy thoải mái ở vị trí của mình cả, nghĩ rằng mình không thể phát huy hết khả năng ở đây. Vì vậy chẳng ai thực sự thi đấu cả, nhất là những đứa phía dưới. Đứa nào cũng hau háu lao lên để ghi bàn hoặc thể hiện kỹ thuật cá nhân, mong có lúc nào đã sẽ được nhìn nhận lại để được xếp ở vị trí phía trên.\n\nRất nhiều công ty phần mềm đang ở vào tình trạng giống như đội bóng của chúng tôi trước kia. Hiện tượng là khác nhau, nhưng bản chất của vấn đề là một.\n\n**2) Một cuộc đua vô nghĩa**\n\nKhi thiết kế ra những nấc thang nghề nghiệp kia, người ta đã vô tình đẩy mọi nhân viên vào một cuộc đua vô nghĩa và rất thiếu tính nhân bản. Tất cả những người mới bắt đầu sẽ đứng ở nấc thang thấp nhất. Trong những người này, ai giỏi hơn sẽ được bước lên nấc thang cao hơn. Nấc thang càng ở trên cao thì chỗ cho những người ở đó cũng càng ít đi. Bạn nghĩ sao? Một sự canh tranh rất tốt cho sự phát triển?\n\nNhìn bề ngoài thì có vẻ như vậy. Nhưng thực sự bên trong thì không giống như vậy. Hãy nghe câu chuyện của hai người sau đây để có thể hiểu vì sao như vậy.\n\nAnh K. là một lập trình viên xuất sắc khi vào làm cho công ty phần mềm X. Anh có một niềm đam mê mãnh liệt với công việc lập trình, và chỉ trong nửa năm tài năng đặc biệt của K. đã được mọi người thừa nhận. Manager của K., lo lắng rằng có thể mất K. vào các công ty khác và cũng muốn giúp K. phát triển nghề nghiệp, liền đề nghị thăng chức cho K. lên vị trí trưởng nhóm lập trình. Vẫn với đà tiến triển như vậy, sau gần hai năm K. lại bước thêm lên được nấc thang cao hơn nữa: project manager. Mọi chuyện tồi tệ bắt đầu từ đây. Ở vị trí này, K. sớm nhận ra mình thiếu quá nhiều thứ để trở thành nhà lãnh đạo giỏi: kiến thức, kinh nghiệm, tài năng,... K. cảm thấy mọi thứ đều trì trệ. K. cảm thấy bị lạc lối. K. cảm thấy không còn nhiệt tình khi làm công việc hiện tại nữa. K. cảm thấy công việc thật bế tắc. Dù lãnh đạo công ty đã tạo điều kiện cho K. tham dự các khóa đào tạo về quản lý, K. vẫn không thấy tình hình khá hơn. Kiến thức có thể học được, kinh nghiệm có thể tích lũy theo thời gian, nhưng như vậy thì chưa đủ. K. hiểu rằng mình không có tài năng lãnh đạo: anh không có khả năng trình bày tốt, không có khả năng ra quyết định khi không có đầy đủ thông tin,...\n\nCấp trên động viên K. rằng nếu cố gắng thì K. sẽ sớm khắc phục được những khiếm khuyết đó. Nhưng K. thì không tin rằng như vậy. K. hiểu rằng mình thiếu yếu tố cơ bản nhất để làm được những điều đó: K. không hề có sự đam mê công việc quản lý. Không có đam mê, anh không thể thấy được mình muốn gì, sẽ đi về đâu, và không hề có đủ sức mạnh để vượt qua những khó khăn và cám dỗ xung quanh. Đào tạo hoặc kinh nghiệm thì không thể giúp gì để tạo ra niềm đam mê.\n\nK. cảm thấy thời gian đang kéo dài ra. K. cảm thấy chán nản với công việc. K. cảm thấy không hài lòng với nấc thang hiện nay mình đang đứng. K. muốn có sự mới mẻ, tiến bộ và phát triển. Ban lãnh đạo thấy điều đó và lại động viên: K. cần cố gắng hoàn thiện một số mặt nữa để có thể rời nấc thang hiện tại và bước lên nấc thang cao hơn nữa.\n\nVà K. thấy thất vọng tràn trề. Không, anh không còn muốn bước lên nấc thang kế tiếp nữa. Ngay cả nấc thang cao nhất ở trên cùng cũng không còn hấp dẫn đối với anh nữa. Anh đã bước qua nhiều nấc thang trong thời gian quá ngắn để rồi chợt nhận ra rằng mình đã bước đi quá xa. Càng lúc anh càng xa rời những việc anh yêu thích nhất, những việc mà anh có thể phát huy hết khả năng của mình, những việc luôn kích thích anh phát triển và học hỏi nhiều hơn. Đáng buồn thay, đó là những công việc ở nấc thang phía dưới nơi anh đứng.\n\nNhưng K. không thể bước xuống được. Không ai có thể từ vị trí project manager lại chuyển xuống làm developer được. Và K. cũng không muốn bước xuống nữa. Ở những nấc thang phía dưới giờ chỉ còn lại những người có khả năng lập trình tầm thường và khả năng lãnh đạo cũng tầm thường, những người không có chút đam mê với công việc, những người cũng mất phương hướng như anh. \n\nK. không biết đi đến đâu từ vị trí hiện tại của mình. Bi kịch của K. là rất phổ biến, và cũng chính vì vậy mà tôi lấy đó làm tiêu đề của bài viết.\n\nCái hệ thống phát triển nghề nghiệp trên đã tàn nhẫn đẩy K. và những người khác vào một cuộc đua hoàn toàn vô nghĩa cho chính bản thân họ. Nó luôn thúc mọi người tiến lên và tiến lên một cách mù quáng; càng bước lên cao, họ càng nhận ra nó thật vô nghĩa đối với bản thân. Cái gì vô nghĩa với từng nhân viên thì sớm muộn cũng sẽ hoàn toàn vô nghĩa với công ty.\n\nK. sẽ không bước lên nấc thang kế tiếp, dù công ty có làm mọi cách. Anh cũng sẽ không bước xuống nấc thang bên dưới. Và anh chỉ có một chọn lựa thực sự: nhảy ra khỏi cái thang đó.\n\nCâu chuyện thứ hai.\n\nT. đã từng là một sinh viên đầy năng động và có khả năng phân tích, đánh giá vấn đề cực kỳ xuất sắc. Cô yêu thích công việc phân tích thiết kế hệ thống và mong muốn theo đuổi nghề đó thật lâu dài. Nhưng khi vào công ty F., người ta đánh giá rằng vì kinh nghiệm lập trình của T. còn ít, nên tốt nhất cô nên bắt đầu từ vị trí tester. Sau một thời gian nếu có tiến bộ, cô sẽ được đưa lên làm lập trình viên, rồi nếu vẫn làm tốt, cô sẽ có đủ khả năng và kinh nghiệm để làm phân tích viên. T. vui vẻ chấp nhận đề nghị này.\n\nGần hai năm trôi qua và T. vẫn làm tester ở công ty đó. Dĩ nhiên là cô thất vọng. Cô thấy mình bị mắc kẹt ở phía dưới. Người ta vẫn nhắc nhở T. trong những buổi đánh giá nhân viên rằng T. cần vượt qua hai nấc thang trước khi đến được vị trí mình mong muốn. Nhưng T. không thể bước lên được. Chỉ có một số người được bước lên nấc thang kế tiếp từ vị trí hiện tại. Những người sớm phát huy khả năng trong công việc kiểm thử đã bước lên trước T. hết rồi. Cô không thể cạnh tranh với họ được, đơn giản bởi vì khả năng testing của cô không thể bằng họ. Người ta tiếp tục khuyến khích T. nâng cao các kỹ năng và kinh nghiệm testing, lập trình để được trở thành phần tích viên!!! T. thấy buồn cười và mất tự tin. T. không còn thấy kiên nhẫn với công việc và công ty nữa. Gia đình và bạn trai của của cũng không còn kiên nhẫn được nữa. Cũng như K. cô cũng nhảy ra khỏi cái thang đó.\n\nChúng ta đều biết cái thang và từng nấc thang của nó vô nghĩa như thế nào. Nhưng không ai nói điều đó với chúng ta cả. Chúng ta vẫn vẽ nó ra để động viên nhau, và động viên chính chúng ta. Nhưng không sớm thì muộn, chúng ta sẽ biết nó thật ngốc nghếch.\n\nNó vô nghĩa vì chẳng có ai có thể bước hết tất cả các bậc, từ bậc thấp nhất lên bậc cao nhất được. Nếu có ai đó có thể làm được điều đó, thì tôi không thể hình dung được một người hoàn hảo đến thế. Tôi đã thử tìm hiểu tiểu sử của rất nhiều những nhân vật kiệt xuất và thành đạt trong lĩnh vực của mình, và nhận ra rằng không có ai hoàn hảo đến vậy.\n\nNó vô nghĩa bởi vì nó ép chúng ta vào một cuộc đua mà cuối cùng tất cả những người tham gia đều là kẻ bỏ cuộc. Nó buộc chúng ta nếu muốn phát triển thì phải tiến lên. Khi tiến lên có nghĩa chúng ta phải rời bỏ vị trí mà chúng ta ưa thích và có thể tiến bộ, để bước vào một địa hạt mà chúng ta hoàn toàn lạ lẫm và không có dấu hiệu gì cho thấy sẽ tiến bộ.\n\nNhững người trong ngành đều đã được nghe về chuyện của K. và T., nhưng không biết kết thúc của câu chuyện là thế nào. Tôi cũng không biết bây giờ họ ra sao. Một số người nói rằng sau khi nhảy khỏi cái thang đó, K. trở thành một lập trình viên tự do. Người khác nói rằng K. đã đổi nghề. Có người thì thấy T. lập gia đình và theo chồng định cư ở nước ngoài rồi học lên cao. Lại có người cho rằng T. đã trở thành nữ chủ doanh nghiệp của riêng mình.\n\nNhưng tôi tin rằng, dù ở nơi nào đó, và dù đang làm nghề gì, nếu được hỏi về câu chuyện những nấc thang nghề nghiệp, cả hai sẽ đều cười và nói rằng không bao giờ muốn trở lại với nó nữa.\n\n**3) Triệt tiêu những cá nhân xuất sắc**\n\nDĩ nhiên cũng có một số người có thể trèo lên những nấc thang thật cao trong một thời gian rất ngắn. Hiện nay ở Việt Nam điều đó ngày càng xuất hiện nhiều. Chúng ta không còn thấy lạ nếu biết được có người chưa đầy 30 tuổi đã trở thành senior manager, thậm chí là director của những công ty lớn.\n\nTrở thành senior manager khi chưa đầy 30 tuổi có nghĩa là gì?\n\nCó nghĩa là người đó chỉ cần trải qua chừng 1-2 năm ở mỗi nấc thang: developer, team leader, manager,... (Dĩ nhiên có một số ít người đã đi làm từ trước khi tốt nghiệp đại học, nhưng đó không phải là đa số) trước khi bước được lên nấc thang kế tiếp.\n\nTôi thấy nghi ngờ về điều này. Có lẽ ở Việt Nam chúng ta đã quá dễ dãi trong việc đánh giá năng lực con người. Tôi may mắn có dịp biết được một số lập trình viên làm việc trong các công ty ở Mỹ (họ là công ty đối tác của công ty tôi), và đã từng bị sốc khi biết rằng họ đều ngoài 50 tuổi. Họ làm lập trình viên đã được hơn 20 năm, có nghĩa là tuổi nghề của họ còn lớn hơn tuổi đời của tôi! Ồ, đừng nghĩ rằng họ là những nhân viên kém cỏi nên mới ở mãi vị trí đó. Xét về năng lực, kinh nghiệm và kiến thức, có lẽ tôi chưa quen ai ở Việt Nam có thể sánh được với họ.\n\nNhân viên ở Nhật cũng cần 10 đến 15 năm làm công việc chuyên môn trước khi được xem xét để thăng chức. Ở Microsoft, lập trình viên cũng có 4-5 năm làm việc trở lên.\n\nTrong nghiên cứu mang tên Dự án Phát triển tài năng, tiến sĩ Benjamin Bloom của trường đại học NorthWestern đã tìm hiểu quá trình phát triển của những cá nhân xuất sắc trong nhiều lĩnh vực khác nhau. Kết luận được ông đưa ra là những người đó trung bình mất từ 10 đến 18 năm để đạt đến thành tựu cao nhất trong lĩnh vực của mình. Nghĩa là ngay cả những cá nhân kiệt xuất nhất trên thế giới (nghiên cứu đó đánh giá họ có trình độ world-class), cần không dưới 10 năm để đạt đến đỉnh cao trong lĩnh vực của họ. Chú ý rằng lập trình viên, quản lý, hoặc kinh doanh là những lĩnh vực hoàn toàn khác nhau. Nghiên cứu của tiến sĩ Benjamin không hề nói rằng cần mất trên 10 năm để con người vươn lên vị trí lãnh đạo cao nhất. \n\nĐây là một sự tai hại nữa của cái thang nghề nghiệp. Nó khiến cho chúng ta không thấy được đỉnh cao trong từng công việc, ngược lại nó làm cho chúng ta vội vã tìm cách thể hiện mình vừa đủ tốt trong nấc thang hiện tại để được bước lên cao. Và đến lúc nào đó, như anh K. chẳng hạn, chúng ta sẽ sớm nhận ra chúng ta đã bước đi quá xa, đến nỗi chúng ta không thể quay lại, đồng thời chúng ta đã không còn hứng thú gì nữa với những nấc thang phía trên nữa. Cái gì đến quá dễ thì ra đi cũng dễ dàng như vậy.\n\nCó thể đây là sản phẩm của những người làm công tác nhân sự chăng? Trong nỗ lực tìm ra cách giúp mọi nhân viên phát triển nghề nghiệp, họ đã vô tình bắt mọi người phải leo thang! Và sau quá trình leo thang mệt mọi như vậy, chúng ta sẽ thấy một số ít người ở trên cao có khả năng làm tốt được nhiều việc, nhưng chẳng có việc gì xuất sắc. Còn phần lớn mọi người thì ở bên dưới, bất mãn và buồn chán vì không thấy mình tiến bộ. Những người ở giữa thì hoang mang và mất phương hướng.\n\nBạn cần chú ý cách dùng từ ở đây, cần phải thấy được sự khác biệt giữa tốt (good) và xuất sắc (excellent, hoặc great). Tôi tin một số người chỉ cần mất 1-2 năm để làm tốt một số việc nào đó, nhưng để đạt được mức độ xuất sắc thì không thể.\n\nTôi sẽ không ngạc nhiên nếu càng về sau chúng ta càng có ít những người xuất sắc, những người giữ vị trí hàng đầu trong lĩnh vực của họ. Thiếu những người đó, chúng ta sẽ không thể phát triển xa được. Tôi cũng không ngạc nhiên nếu một ngày nào đó, mọi người lại tiếp tục xuýt xoa về loạt bài báo: những người leo thang số 1 Việt Nam. Có những người leo thang như vậy, chúng ta sẽ mãi ì ạch thua xa những nước khác.\n\nĐiều này sẽ rất khó thay đổi, vì càng ngày càng có nhiều người tham gia vào cuộc đua leo thang. Và những nấc thang thì càng lúc càng nhiều ra. Tôi được biết có công ty lúc mới thành lập thì chỉ có 3 nấc thang: developer, team leader, và boss. Nhưng sau đó thì họ có thêm nấc manager ở giữa team leader và boss. Rồi consultant ở giữa team leader và manager. Rồi senior developer ở giữa developer và team leader. Rồi thêm senior manager. Lần gần đây nhất khi xem trên website của công ty thì tôi thấy đã có thêm director. Tôi nghĩ số nấc thang sẽ không dừng lại ở đây.\n\nĐây là điều rất nguy hiểm. Với sự phát triển vô độ như vậy, chẳng mấy chốc các công ty sẽ giống như một anh chàng ốm nhách và cao kêu. Ai cũng được quản lý một số người phía dưới của mình. Tướng nhiều nhưng quân thì ít. Một số người bên dưới phải lao động vất vả cho số lượng rất nhiều người bên trên. Quá nhiều người tầm thường ở các cấp quản lý trung gian. Mọi người sẽ phí nhiều thời gian cho việc họp hành, báo cáo, kế hoạch, đánh giá, khen thưởng,... nên sẽ ít thời gian cho những công việc thực tế (viết code, kiểm tra, tạo quan hệ tốt với khách hàng,...)\n\nChúng ta nên làm gì?\nChúng ta có 2 cách tiếp cận để giải quyết những vấn đề trên. Cả 2 cách đều được lấy từ cuốn sách Peopleware mà tôi đã từng giới thiệu, cùng với cuốn sách “First Break All The Rules” – một cuốn sách mà những người làm quản lý và nhân sự nên đọc. Tôi viết bài viết này cũng là nhờ lấy thông tin từ 2 cuốn sách trên. \n\nCách thứ 1: tôi gọi là “sửa chữa nhẹ”. Chúng ta sẽ điều chỉnh lại những ảnh hưởng của cái thang theo hướng tích cực.\n\nCách thứ 2: tôi gọi là “làm lại hoàn toàn”. Tôi sẽ trình bày về cách này ở phần sau.\n\nSửa chữa nhẹ có nghĩa là chúng ta tạm chấp nhận sự tồn tại của cái thang, nhưng sẽ “tùy biến” nó lại một chút. Quan điểm thông thường bảo rằng chúng ta chỉ được phép tiến lên trên cái thang (hoặc có thể rẽ trái hay phải tùy theo chúng ta có thiên hướng quản lý hay kỹ thuật, nhưng cuối cùng thì cũng phải đi lên). Vậy thì chúng ta sẽ thêm một lựa chọn nữa khi leo thang: nếu ai không thích leo lên trên thì có thể leo ngang!\n\nNghĩa là mỗi người sẽ được khuyến khích đi sâu vào lĩnh vực mà họ đang làm. Không nhất thiết phải giỏi mọi thứ trong thời gian ngắn mới được đánh giá cao, thay vì vậy mỗi người cần tìm cái mình thích nhất và có khả năng nhất, rồi tập trung phát triển để mình trở nên xuất sắc nhất trong lĩnh vực đó.\n\nSau đây tôi sẽ trình bày cụ thể chúng ta sẽ cần làm thế nào và hệ quả sẽ ra sao.\n\n**1) Trả lương theo đúng năng lực**\n\nChắc chắn những gì tôi trình bày ở trên sẽ khiến bạn phải nghi ngờ ngay: thực tế tuy phũ phàng nhưng nó phải là như vậy. Manager thì quan trọng hơn developer nên lương cũng cao hơn developer. Vì vậy ai cũng muốn thăng tiến để làm manager. Suy cho cùng thì ai lại chẳng muốn địa vị cao và lương cao!\n\nĐúng vậy, tìm một manager tốt thì khó hơn rất nhiều so với tìm được developer tốt. Để trở thành manager tốt thì cũng cần nhiều thời gian, nhiều kỹ năng hơn, nhiều kinh nghiệm hơn, cho nên lương trung bình của manager phải cao hơn lương trung bình của developer.\n\nNhưng sẽ thật sai lầm nếu cho rằng lương của mọi manager đều phải cao hơn lương của mọi developer. Nếu công ty trả lương dựa trên nấc thang mà nhân viên đang đứng, thì không sớm thì muộn mọi nhân viên sẽ cũng xô đẩy nhau vào cuộc đua leo thang không có kết thúc hậu.\n\nTrở lại câu chuyện bóng đá một chút. Thật ra ngay cả những đứa nhỏ cũng hiểu làm tiền đạo thì có giá hơn làm hậu vệ. Tiền đạo ít khi thi đấu đủ 90 phút, lại chạy ít hơn, nhưng lúc nào cũng nhận lương cao hơn, giá trị chuyển nhượng cũng cao hơn, và luôn được hâm mộ hơn so với hậu vệ. Vậy thì ai lại muốn làm hậu vệ?\n\nCâu trả lời là có. Đó là những hậu vệ xuất sắc. Thể thao, đặc biệt là bóng đá, có một hệ thống lương bổng tốt mà những ngành khác nên học tập. Nó khuyến khích những hậu vệ giỏi luôn nỗ lực để xuất sắc hơn, thay vì cắm cúi rèn luyện để trở thành những tiền đạo trung bình. Họ hiểu rằng làm hậu vệ xuất sắc thì lương cao hơn làm tiền đạo trung bình. Dĩ nhiên, họ cũng hiểu ở cùng trình độ cao như họ thì những đồng nghiệp trên hàng tiền đạo sẽ có lương cao hơn, hợp đồng quảng cáo nhiều hơn, khả năng đạt giải thưởng (như Quả bóng vàng chẳng hạn) cũng sẽ lớn hơn. Nhưng điều đó không làm họ quan tâm, bởi vì họ hiểu rằng mình sinh ra không phải để làm tiền đạo xuất sắc.\n\n\nTương tự như vậy, trong bóng đá thì lương trung bình của huấn luyện viên luôn cao hơn lương trung bình của cầu thủ. Mourinho có mức lương mà rất nhiều cầu thủ ở Chelsea phải thèm muốn. Các cầu thủ Việt Nam hẳn sẽ phải e dè trước mức lương của ông Riedl. Nghề huấn luyện viên cũng có tuổi thọ cao hơn nghề cầu thủ.\n\nNhưng chẳng có mấy cầu thủ muốn kết thúc sự nghiệp cho nhanh để trở thành huấn luyện viên. Bởi vì trở thành cầu thủ xuất sắc đối với họ thì khả thi hơn, và khi đó họ cũng có thu nhập cao hơn so với việc trở thành huấn luyện viên làng nhàng.\n\nChúng ta nên làm như vậy trong ngành phần mềm. Chúng ta vẫn giữ những nấc thang như vậy, nhưng sẽ trả lương sao cho những người xuất sắc ở nấc thang bên dưới sẽ có lương cao hơn so với những người bình thường ở nấc thang bên trên.\n\nLấy ví dụ ở công ty Merrill Lynch. Theo như tác giả Marcus Buckingham và Curt Coffman của cuốn sách “First Break All The Rules” thì lương cao nhất mà một người cố vấn tài chính có thể nhận được là 500 ngàn đô la một năm. Trong khi đó, lương thấp nhất của một giám đốc chi nhánh (vị trí cao hơn so với cố vấn tài chính) chỉ là 150 ngàn đô la. Vì vậy, nếu một cố vần tài chính giỏi muốn được thăng chức, anh/chị ấy phải chấp nhận rủi ro sẽ bị lương thấp hơn đi rất nhiều. Dĩ nhiên, ở khía cạnh còn lại, nếu trở thành giám đốc chi nhánh xuất sắc, lương của họ có thể lên đến hàng triệu đô la. Cuộc chơi rất công bằng.\n\nCác cầu thủ xuất sắc hoặc cầu thủ gạo cội cũng phải cân nhắc rất nhiều khi chuyển sang nghề huấn luyện viên. Bởi vì ngay lập tức họ sẽ bị giảm lương so với khi làm cầu thủ. Nguyên tắc này khuyến khích những người giỏi trở nên giỏi hơn, và loại bớt những người chỉ nhằm vào thu nhập cao mà không cần tài năng ra khỏi cuộc chơi.\n\nCũng có nhiều người phải đối cách làm này. Họ nghĩ rằng cách làm hiện tại đỡ tốn kém hơn. Trả nhiều cho manager (có số người ít) và trả ít cho developer (có số người nhiều hơn) thì sẽ tiết kiệm hơn so với làm ngược lại. Họ nghĩ rằng chỉ cần manager giỏi thì cũng có thể quản lý được một tập thể developer trung bình.\n\nMột tập thể developer trung bình thì kết quả cuối cùng sẽ là trung bình, cho dù manager có là ai. Người manager sẽ phải mất nhiều thời gian để “hốt” những hậu quả và sai sót mà những developer để lại. Họ sẽ giẫm lên chân nhau. Một số người, đặc biệt là manager, thậm chí phải dành thời gian để lao vào coding thay cho những người không có khả năng. Cơn ác mộng này hẳn ai trong chúng ta cũng từng một lần biết qua.\n\nNếu một manager xuất sắc mà tập thể thì kém cỏi, kết quả sẽ thế nào? Không khó phải đoán, vì kinh nghiệm cho thấy kết quả của tập thể đó cũng sẽ rất kém cỏi. Điều duy nhất mà manager xuất sắc làm tốt hơn manager kém cỏi trong trường hợp này là dù thất bại, các thành viên cũng vấn thấy vui vẻ vì đã làm việc chung với người manager xuất sắc, vì họ đã học được nhiều điều có ích. Ngược lại, họ sẽ vô cùng tức giận và ganh ghét vì thấy người kém cỏi mà cũng được làm manager.\n\nKhả năng duy nhất mà manager xuất sắc có thể làm là biến một tập thể có tiềm năng trở nên thực sự xuất sắc. Điều này thì manager trung bình hay kém cỏi không thể làm được.\n\nVì vậy, hãy trả lương cao cho những những developer xuất sắc, và trả lương cao hơn nữa cho những manager xuất sắc; đối với những người còn lại thì trả lương thấp hơn.\n\n**2) Mở rộng các nâng thang sang chiều ngang**\n\nPhần lớn các công ty phần mềm đều định ra bảng liệt kê các tiêu chí để đánh giá nhân viên. Trong đó, nó sẽ phân biệt rạch ròi đâu là sự khác biệt giữa developer với senior developer, với team leader, với manager, với senior manager. Chẳng hạn, senior developer thì hơn developer ở số năm kinh nghiệm và khả năng truyền đạt. Nhưng rất ít nơi nào có khả năng định nghĩa đâu là sự khác biệt giữa developer kém, đâu là developer trung bình, và đâu là developer xuất sắc.\n\nĐánh giá như vậy thì buồn cười quá. Nếu dựa vào cách làm đó, tôi có thể nói rằng Trần Tiến Anh, cựu thủ môn của đội Thể Công giỏi hơn Ronaldinho nhiều. Ronaldinho chỉ biết đá ở vị trí tiền về tấn công hoặc tiền đạo. Nhưng Trần Tiên Anh thì “tròn trịa” hơn, bắt gôn thì hay, thình thoảng cũng đá được hậu vệ, khi nào có dịp đẩy lên đá tiền đạo cũng ngon lành chẳng kém tiền đạo mấy đội bóng phong trào.\n\nCách làm hiện nay đang phá hủy nghề nghiệp của tester, developer, và cả team leader, những người ở nấc thang bên dưới. Rất nhiều người làm testing và lập trình hiện nay đang hoang mang và chán nản, vì cho rằng những công việc này chẳng có gì phức tạp cả, ai làm cũng như ai. Là một người say đặc biệt say mê phần mềm và làm phần mềm, tôi không khỏi xót xa vì chuyện này. Ngay cả những người dọn dẹp phòng trong các khách sạn cũng hiểu được thế nào là người làm giỏi, thế nào là người làm dở, vậy mà chúng ta không chịu phân biệt đâu là developer giỏi và đâu là developer dở. Mà thật ra ngay cả những vị trí ở trên cũng đang xảy ra tình trạng tương tự đấy thôi.\n\nChúng ta nên chấm dứt tình trạng so sánh táo và cam, so sánh chó và mèo, so sánh tàu thủy và máy bay. Thay vì vậy, hãy so sánh những con mèo với nhau, chỉ rõ ra được đâu là mèo đẹp, đâu là mèo xấu; nuôi dưỡng và thưởng cho mèo đẹp để nó đẹp hơn, và không bao giờ khuyến khích nó trở thành chó nếu điều đó là không khả thi.\n\n**3) Thay đổi công việc phát triển phần mềm**\n\nThực tình tôi cũng phải thừa nhận rằng với công việc phát triển phần mềm hiện nay, rất khó để khuyến khích mọi người phát triển theo chiều ngang được, dù đó là tester, developer, hay manager. Vâng, phần lớn chúng ta làm gia công phần mềm (outsourcing), và khi outsourcing, chúng ta không cần nhiều những developer xuất sắc như nước Mỹ, và về mức độ cũng không cần phải xuất sắc như những người hàng đầu ở Mỹ.\n\nTrong tình hình hiện nay, một số nhỏ những cá nhân xuất sắc ở Việt Nam sẽ không tìm được vị trí của nấc thang thích hợp cho mình. Họ đang hoang mang không biết làm gì. Phần lớn họ quyết định ra nước ngoài học lên cao. Tôi chưa có khả năng bình luận về điều này, bởi vì tôi không may mắn được sinh ra trong số đó. Tôi đã và đang phải vật lộn với từng nấc thang đấy thôi, bắt đầu từ nấc thang thấp nhất đấy thôi :P\n\nNhưng ngay cả trong gia công phần mềm, vẫn còn rất nhiều khoảng trống để nhiều người phát triển sang ngang. Vấn đề là chúng ta có biết cách làm hay không. Tôi sẽ trở lại với đề tài này trong thời gian sắp tới.\n\n4) Hiểu rõ bản chất của sự phát triển\n\nTuy vậy, cũng sẽ có nhiều người phản đối những gì tôi đã trình bày ở trên. Tôi đoán có lẽ họ xuất thân từ ngành nhân sự, vì cái thang sự nghiệp là sản phẩm của ngành đó, không phải là của ngành công nghiệp phần mềm. Tôi cũng đoán có lẽ họ nhiễm phim kiếm hiệp Hồng Kông nặng.\n\nTrong phim kiếm hiệp, nhân vật chính của chúng ta sẽ luyện võ công từ cơ bản đến thượng thừa bằng cách bước vào một tòa tháp nhiều tầng. Ở mỗi tầng sẽ có các đối thủ với những sở trường khác nhau. Chẳng hạn, ở tấng 1, anh ta phải đối đầu với một cao thủ về khinh công. Anh ta phải rèn luyện để khinh công của mình vượt qua được đối thủ đó. Chiến thắng ở tầng 1 sẽ cho phép anh ta bước lên tầng 2. Ở tầng này, anh ta sẽ phải luyện kiếm pháp để đánh bại một cao thủ chuyên về kiếm. Cứ như thế, tấng 3 sẽ là đao pháp, tầng 4 là quyền pháp, tầng 5 là khí công, tấng 6 là trí lực, tầng 7 là phi tiêu ám khí, vân vân và vân vân. Khi vượt qua được tất cả các tầng và lên đến đỉnh ngọn tháp, anh ta sẽ trở thành cao thủ đệ nhất thiên hạ.\n\nQuan niệm thông thường dạy chúng ta rằng đó là sự phát triển của con người. Chúng ta được khuyến khích chinh phục những cái chưa biết, những cái chưa làm, khắc phục những điểm yếu của mình. Chúng ta cần làm cho mình hoàn thiện hơn.\n\nSự thực thì chẳng ai có thể làm được như vậy. Mỗi người sinh ra đều có điểm mạnh và điểm yếu riêng. Rất khó để chúng ta tự rèn luyện nhằm có thêm được những điểm mạnh mới, và càng không thể nếu chúng ta cố gằng tự sửa chữa điểm yếu để nó trở thành điểm mạnh.\n\nTất cả các vĩ nhân đều có khiếm khuyết. Họ không mất thời gian đi sửa chữa khiếm khuyết của mình. Thay vào đó họ tìm ra đầu là điểm mạnh của họ, tìm môi trường để điểm mạnh phát huy hết, và tìm những người cộng sự xuất sắc ở lĩnh vực khác để bù đắp cho khiếm khuyết của mình.\n\nTôi hiểu ra điều này sau khi đọc 2 cuốn sách ở trên, và nhất là sau khi cuộc trao đổi với một nhân viên trong công ty. Tôi hỏi:\n\n- Định hướng nghề nghiệp trong tương lai của em như thế nào? Và rồi tôi thao thao về những cơ hội phía trước, nào là leader, manager, technical director,...\n\n- Em thấy mình phù hợp với công việc chỉnh sửa và hoàn thiện lại những phần mềm sẵn có, để nó trở nên tốt hơn. Em thích được làm việc, nhưng quan trọng nhất là em thích được chơi game!!! – Nhân viên đó trả lời.\n\nTôi bị bất ngờ và chợt bửng tỉnh. Tôi đã quá ngu muội, tưởng tượng mình là đạo diễn trong bộ phim kiếm hiệp, và dựng cho người nhân viên này vai chính trong đó. Tôi lại đi khuyến khích nhân viên này kinh qua tất cả các tầng để trở nên hoàn thiện hơn, nhưng lại không hiểu người này muốn gì và có khả năng gì.\n\nBây giờ thì tôi đã hiểu. Người nhân viên của tôi không cần phải trở thành nhân vật chính trong bộ phim. Ngược lại, anh ta nên trở thành một trong các nhân vật phụ. Anh ta sẽ đi tìm xem mình thích cao thủ ở tầng nào nhất, và nếu đủ khả năng, anh ta sẽ ở lại tầng đó, rèn luyện để có thể trở thành cao thủ đệ nhất trong lĩnh vực đó. Có thể anh ta sẽ trở thành đệ nhất cao thủ khinh công, và như vậy anh ta không cần thiết phải luyện phép mình đồng da sắt làm gì nữa. Đơn giản là không thể được như vậy.\n\nAnh ta sẽ ở lại tầng đó càng lâu càng tốt. Có lẽ anh ta sẽ không bao giờ đi lên những tầng phía trên của ngọn tháp. Điều đó là không cần thiết. Bởi vì anh ta là một người rất đặc biệt. Cuộc sống của anh ta không phải là ở ngọn tháp đó. Anh ta chỉ ở tầng 1 của ngọn tháp trong một phần nhỏ của cuộc đời, và trong phần lớn thời gian còn lại, anh sẽ ra ngoài ngọn tháp, chơi những thứ mình thích, làm những điều có ý nghĩa khác, rồi ở bên những người quan trọng nhất đối với anh ta. Đó là phần kết của bộ phim.\n\nChúng ta có rất nhiều chọn lựa\n\nCòn một cách khác, tôi cho rằng triệt để hơn, đó là chúng ta hãy dẹp bỏ cái thang đó. Rõ ràng là nó vô nghĩa và nó đang làm sự nghiệp của nhiều người trở nên vô nghĩa.\n\nBất kỳ công ty nào cũng cần có sơ đồ mô tả bộ máy quản lý của công ty. Từ người thấp nhất đến người cao nhất. Sơ đồ này là phải có ở bất kỳ tổ chức nào. Nội dung của nó hoàn toàn giồng “bản vẽ” cái thang sự nghiệp mà chúng ta đang dùng.\n\nNhưng chúng ta không nên sử dụng nó đễ định hướng cho nhân viên phát triển sự nghiệp theo đó. Chúng ta nên tìm cách khác tốt hơn.\n\n**Nguồn : Lê Đình Lĩnh Nam.(Nam Le's Blog)**\n\n  [1]: http://daynhauhoc.com/t/suy-nghi-cua-1-lap-trinh-vien-phan-1/7733\n","raw":"---json\n{\"id\":7734,\"layout\":\"Post\",\"route\":\"suy-nghi-cua-1-lap-trinh-vien-phan-2\",\"title\":\"Suy nghĩ của 1 lập trình viên ! ( Phần 2 )\",\"tags\":null,\"date\":\"2015-05-27T18:44:39.593Z\",\"author\":{\"username\":\"khiemnvd\",\"avatar\":\"/user_avatar/daynhauhoc.com/khiemnvd/{size}/9211_1.png\"}}\n---\n\ntiếp theo phần 1 [http://daynhauhoc.com/t/suy-nghi-cua-1-lap-trinh-vien-phan-1/7733][1]\n\nTrong bài viết trước, tôi đã cố gắng mô tả một số khía cạnh của nghề lập trình viên, nhưng quên nêu lên luận điểm quan trọng nhất: vì sao lại như vậy và chúng ta phải làm thế nào đây?\n\nTa sẽ đi đến đâu từ vị trí này?\n\nNào, trước hết chúng ta bắt đầu bằng câu hỏi:\n\nChúng ta sẽ được làm gì khi tham gia vào một công ty phần mềm?\n\nQuan niệm phổ biến hiện nay nói rằng bạn sẽ bắt đầu ở vị trí thấp nhất là một lập trình viên (programmer, hoặc là developer, hoặc coder, hoặc tester, hoặc technician). Ở đó bạn cần hoàn thành tốt các công việc được giao bằng nỗ lực cá nhân. Nếu làm tốt, bạn sẽ tiến lên làm lãnh đạo nhóm (team leader, hoặc senior developer), khi đó công việc chuyên môn được chia ra, bạn chỉ làm những thứ khó nhất và quan trọng nhất; còn đối với những việc dễ và thường lập đi lập lại, bạn sẽ chỉ dẫn những người lập trình viên ở bên dưới thực hiện. Lên một mức cao hơn, bạn sẽ được làm quản lý dự án (nếu bạn có thiên hướng về quản lý) hoặc sẽ làm trưởng phòng kỹ thuật (nếu bạn có thiên hướng về chuyên môn). Lúc này bạn sẽ dành phần lớn thời gian cho việc lập kế hoạch, giao việc, kiểm soát, sử dụng người, đào tạo,... Tiếp tục lên cao nữa, bạn sẽ được tham gia vào ban lãnh đạo, nơi bạn sẽ chịu trách nhiệm định hướng, phân tích cơ hội, thách thức,... Và cứ thế tiếp tục lên cao nữa.\n\nTôi nghe người ta mô tả về nấc thang nghề nghiệp trên ngay từ khi bước chân vào khoa Công nghệ thông tin trường Đại học Bách Khoa. Lúc tôi đi dự phỏng vấn ở các công ty phần mềm, người ta lại nói về nó. Khi tôi đã đi làm và trong các buổi đánh giá thành tích (performance appraisal), người ta cũng lại nói về nó. Đến khi tôi rời khỏi công ty, người ta vẫn lại nói về nó. Cho đến gần đây khi tôi có dịp trở lại trường đại học Bách Khoa, tôi lại vẫn thấy người ta tiếp tục nói về nó!\n\nTôi thấy quan niệm đó có gì đó mẫu thuẫn và hơi buồn cười. Vì sao vậy? Tôi xin nêu ra một số lý do sau.\n\n**1) Vị trí phía trên không phải là hình thức cao hơn của vị trí phía dưới**\n\nĐiều kỳ diệu nhất của con người so với những sinh vật khác là khả năng tiến hóa và phát triển. Chúng ta biết rằng các loài đều tiến hóa từ hình thức cấp thấp lên hình thức cấp cao. Người ta gọi đó là một phần của sự phát triển.\n\nNhưng nghề nghiệp của chúng ta thì lại không phát triển theo cách như vậy được. Thử lấy ví dụ về công việc của người kiểm thử phần mềm (tester) và lập trình viên. Rất nhiều người quản lý mắc phải sai lầm thô thiển khi cho rằng lập trình viên là hình thức cao hơn của tester. Điều đó có nghĩa là, nếu một nhân viên hơi yếu về kỹ năng lập trình, cách tốt nhất là đưa người đó vào vị trí tester. Đ���n khi nào người đó thể hiện tương đối tốt công việc của tester, ta sẽ thăng cấp cho người đó lên vị trí lập trình viên.\n\nThực sự thì tester và lập trình viên đòi hỏi hai loại người hoàn toàn khác nhau. Những người lập trình viên giỏi là những người đặc biệt yêu thích sự chặt chẽ, sự hiệu quả, và những vấn đề hóc búa (có thể đọc cuốn Làm thế nào để dịch chuyển núi Phú Sĩ? để biết rõ những người lập trìnn viên xuất sắc nhất thế giới thích giải quyết những câu đố hóc búa cỡ nào; tuy nhiên chú ý là bản dịch sang tiếng Việt hơi bị kém.) Khả năng đó giúp cho họ hiểu được một bài toán trừu tượng và cụ thể hóa nó bằng các dòng lệnh máy tính trong thời gian ngắn nhất, với độ chính xác cao nhất. \n\nNhưng nếu có dịp gặp gỡ những tester xuất sắc, bạn sẽ thấy họ hoàn toàn khác biệt. Họ đặc biệt giỏi trong các bài toán tổ hợp (vd: với những điều kiện này thì có bao nhiêu tình huống có thể xảy ra); họ rất ghét phải làm đúng theo một quy trình các bước đã định sẵn (họ luôn tò mò chuyện gì sẽ xảy ra nếu ta bỏ qua bước này, nếu ta đổi ngược thứ tự hai bước kế tiếp nhau); và họ có một niềm đam mê, có thể nói là đến mức bệnh hoạn, trong việc tìm ra chỗ sai sót của mọi việc (những tester xuất sắc luôn vui mừng vì chứng minh sản phẩn bị lỗi, và cảm thấy rất khó chịu khi phải chấp nhận rằng sản phẩm không còn lỗi, trong khi người bình thường thì ngược lại).\n\nĐiều đấy cho thấy rằng không có dấu hiệu gì để bảo đảm một tester xuất sắc sẽ có thể trở thành một lập trình viên xuất sắc. Cũng không có lý do gì để cho rằng lập trình là công việc đòi hỏi kỹ năng cao hơn so với kiểm thử.\n\nCũng cách nhìn nhận như vậy, ta sẽ thấy rằng system analysis không phải là hình thức cao hơn của developer, manager không phải là hình thức cao hơn của system analysis, và director không phải là hình thức cao hơn của manager,... Ở mỗi cặp so sánh như vậy, thành công ở vị trí đầu tiên không thể bảo đảm sẽ thành công ở vị trí tiếp theo.\n\nĐể dễ hình dung, chúng ta hãy nói đến bóng đá. Hồi còn nhỏ, tôi và các bạn vẫn có suy nghĩ ấu trĩ giống như trên khi chơi bóng đá. Những đứa giỏi nhất (hoặc có uy nhất) sẽ được đá ở trên hàng tiền đạo, kém hơn một ít thì đã ở giữa làm tiền vệ, ai không có chút khéo léo và khả năng thì cho làm hậu vệ, còn đứa nào tệ nhất thì đẩy xuống làm thủ môn.\n\nĐội bóng đó đã thi đấu thế nào? Hoàn toàn thất bại. Chúng tôi có thủ môn tầm thường, các hậu vệ tầm thường, tiền vệ cũng tầm thường, và tiền đạo cũng tầm thường nốt. Ai cũng không cảm thấy thoải mái ở vị trí của mình cả, nghĩ rằng mình không thể phát huy hết khả năng ở đây. Vì vậy chẳng ai thực sự thi đấu cả, nhất là những đứa phía dưới. Đứa nào cũng hau háu lao lên để ghi bàn hoặc thể hiện kỹ thuật cá nhân, mong có lúc nào đã sẽ được nhìn nhận lại để được xếp ở vị trí phía trên.\n\nRất nhiều công ty phần mềm đang ở vào tình trạng giống như đội bóng của chúng tôi trước kia. Hiện tượng là khác nhau, nhưng bản chất của vấn đề là một.\n\n**2) Một cuộc đua vô nghĩa**\n\nKhi thiết kế ra những nấc thang nghề nghiệp kia, người ta đã vô tình đẩy mọi nhân viên vào một cuộc đua vô nghĩa và rất thiếu tính nhân bản. Tất cả những người mới bắt đầu sẽ đứng ở nấc thang thấp nhất. Trong những người này, ai giỏi hơn sẽ được bước lên nấc thang cao hơn. Nấc thang càng ở trên cao thì chỗ cho những người ở đó cũng càng ít đi. Bạn nghĩ sao? Một sự canh tranh rất tốt cho sự phát triển?\n\nNhìn bề ngoài thì có vẻ như vậy. Nhưng thực sự bên trong thì không giống như vậy. Hãy nghe câu chuyện của hai người sau đây để có thể hiểu vì sao như vậy.\n\nAnh K. là một lập trình viên xuất sắc khi vào làm cho công ty phần mềm X. Anh có một niềm đam mê mãnh liệt với công việc lập trình, và chỉ trong nửa năm tài năng đặc biệt của K. đã được mọi người thừa nhận. Manager của K., lo lắng rằng có thể mất K. vào các công ty khác và cũng muốn giúp K. phát triển nghề nghiệp, liền đề nghị thăng chức cho K. lên vị trí trưởng nhóm lập trình. Vẫn với đà tiến triển như vậy, sau gần hai năm K. lại bước thêm lên được nấc thang cao hơn nữa: project manager. Mọi chuyện tồi tệ bắt đầu từ đây. Ở vị trí này, K. sớm nhận ra mình thiếu quá nhiều thứ để trở thành nhà lãnh đạo giỏi: kiến thức, kinh nghiệm, tài năng,... K. cảm thấy mọi thứ đều trì trệ. K. cảm thấy bị lạc lối. K. cảm thấy không còn nhiệt tình khi làm công việc hiện tại nữa. K. cảm thấy công việc thật bế tắc. Dù lãnh đạo công ty đã tạo điều kiện cho K. tham dự các khóa đào tạo về quản lý, K. vẫn không thấy tình hình khá hơn. Kiến thức có thể học được, kinh nghiệm có thể tích lũy theo thời gian, nhưng như vậy thì chưa đủ. K. hiểu rằng mình không có tài năng lãnh đạo: anh không có khả năng trình bày tốt, không có khả năng ra quyết định khi không có đầy đủ thông tin,...\n\nCấp trên động viên K. rằng nếu cố gắng thì K. sẽ sớm khắc phục được những khiếm khuyết đó. Nhưng K. thì không tin rằng như vậy. K. hiểu rằng mình thiếu yếu tố cơ bản nhất để làm được những điều đó: K. không hề có sự đam mê công việc quản lý. Không có đam mê, anh không thể thấy được mình muốn gì, sẽ đi về đâu, và không hề có đủ sức mạnh để vượt qua những khó khăn và cám dỗ xung quanh. Đào tạo hoặc kinh nghiệm thì không thể giúp gì để tạo ra niềm đam mê.\n\nK. cảm thấy thời gian đang kéo dài ra. K. cảm thấy chán nản với công việc. K. cảm thấy không hài lòng với nấc thang hiện nay mình đang đứng. K. muốn có sự mới mẻ, tiến bộ và phát triển. Ban lãnh đạo thấy điều đó và lại động viên: K. cần cố gắng hoàn thiện một số mặt nữa để có thể rời nấc thang hiện tại và bước lên nấc thang cao hơn nữa.\n\nVà K. thấy thất vọng tràn trề. Không, anh không còn muốn bước lên nấc thang kế tiếp nữa. Ngay cả nấc thang cao nhất ở trên cùng cũng không còn hấp dẫn đối với anh nữa. Anh đã bước qua nhiều nấc thang trong thời gian quá ngắn để rồi chợt nhận ra rằng mình đã bước đi quá xa. Càng lúc anh càng xa rời những việc anh yêu thích nhất, những việc mà anh có thể phát huy hết khả năng của mình, những việc luôn kích thích anh phát triển và học hỏi nhiều hơn. Đáng buồn thay, đó là những công việc ở nấc thang phía dưới nơi anh đứng.\n\nNhưng K. không thể bước xuống được. Không ai có thể từ vị trí project manager lại chuyển xuống làm developer được. Và K. cũng không muốn bước xuống nữa. Ở những nấc thang phía dưới giờ chỉ còn lại những người có khả năng lập trình tầm thường và khả năng lãnh đạo cũng tầm thường, những người không có chút đam mê với công việc, những người cũng mất phương hướng như anh. \n\nK. không biết đi đến đâu từ vị trí hiện tại của mình. Bi kịch của K. là rất phổ biến, và cũng chính vì vậy mà tôi lấy đó làm tiêu đề của bài viết.\n\nCái hệ thống phát triển nghề nghiệp trên đã tàn nhẫn đẩy K. và những người khác vào một cuộc đua hoàn toàn vô nghĩa cho chính bản thân họ. Nó luôn thúc mọi người tiến lên và tiến lên một cách mù quáng; càng bước lên cao, họ càng nhận ra nó thật vô nghĩa đối với bản thân. Cái gì vô nghĩa với từng nhân viên thì sớm muộn cũng sẽ hoàn toàn vô nghĩa với công ty.\n\nK. sẽ không bước lên nấc thang kế tiếp, dù công ty có làm mọi cách. Anh cũng sẽ không bước xuống nấc thang bên dưới. Và anh chỉ có một chọn lựa thực sự: nhảy ra khỏi cái thang đó.\n\nCâu chuyện thứ hai.\n\nT. đã từng là một sinh viên đầy năng động và có khả năng phân tích, đánh giá vấn đề cực kỳ xuất sắc. Cô yêu thích công việc phân tích thiết kế hệ thống và mong muốn theo đuổi nghề đó thật lâu dài. Nhưng khi vào công ty F., người ta đánh giá rằng vì kinh nghiệm lập trình của T. còn ít, nên tốt nhất cô nên bắt đầu từ vị trí tester. Sau một thời gian nếu có tiến bộ, cô sẽ được đưa lên làm lập trình viên, rồi nếu vẫn làm tốt, cô sẽ có đủ khả năng và kinh nghiệm để làm phân tích viên. T. vui vẻ chấp nhận đề nghị này.\n\nGần hai năm trôi qua và T. vẫn làm tester ở công ty đó. Dĩ nhiên là cô thất vọng. Cô thấy mình bị mắc kẹt ở phía dưới. Người ta vẫn nhắc nhở T. trong những buổi đánh giá nhân viên rằng T. cần vượt qua hai nấc thang trước khi đến được vị trí mình mong muốn. Nhưng T. không thể bước lên được. Chỉ có một số người được bước lên nấc thang kế tiếp từ vị trí hiện tại. Những người sớm phát huy khả năng trong công việc kiểm thử đã bước lên trước T. hết rồi. Cô không thể cạnh tranh với họ được, đơn giản bởi vì khả năng testing của cô không thể bằng họ. Người ta tiếp tục khuyến khích T. nâng cao các kỹ năng và kinh nghiệm testing, lập trình để được trở thành phần tích viên!!! T. thấy buồn cười và mất tự tin. T. không còn thấy kiên nhẫn với công việc và công ty nữa. Gia đình và bạn trai của của cũng không còn kiên nhẫn được nữa. Cũng như K. cô cũng nhảy ra khỏi cái thang đó.\n\nChúng ta đều biết cái thang và từng nấc thang của nó vô nghĩa như thế nào. Nhưng không ai nói điều đó với chúng ta cả. Chúng ta vẫn vẽ nó ra để động viên nhau, và động viên chính chúng ta. Nhưng không sớm thì muộn, chúng ta sẽ biết nó thật ngốc nghếch.\n\nNó vô nghĩa vì chẳng có ai có thể bước hết tất cả các bậc, từ bậc thấp nhất lên bậc cao nhất được. Nếu có ai đó có thể làm được điều đó, thì tôi không thể hình dung được một người hoàn hảo đến thế. Tôi đã thử tìm hiểu tiểu sử của rất nhiều những nhân vật kiệt xuất và thành đạt trong lĩnh vực của mình, và nhận ra rằng không có ai hoàn hảo đến vậy.\n\nNó vô nghĩa bởi vì nó ép chúng ta vào một cuộc đua mà cuối cùng tất cả những người tham gia đều là kẻ bỏ cuộc. Nó buộc chúng ta nếu muốn phát triển thì phải tiến lên. Khi tiến lên có nghĩa chúng ta phải rời bỏ vị trí mà chúng ta ưa thích và có thể tiến bộ, để bước vào một địa hạt mà chúng ta hoàn toàn lạ lẫm và không có dấu hiệu gì cho thấy sẽ tiến bộ.\n\nNhững người trong ngành đều đã được nghe về chuyện của K. và T., nhưng không biết kết thúc của câu chuyện là thế nào. Tôi cũng không biết bây giờ họ ra sao. Một số người nói rằng sau khi nhảy khỏi cái thang đó, K. trở thành một lập trình viên tự do. Người khác nói rằng K. đã đổi nghề. Có người thì thấy T. lập gia đình và theo chồng định cư ở nước ngoài rồi học lên cao. Lại có người cho rằng T. đã trở thành nữ chủ doanh nghiệp của riêng mình.\n\nNhưng tôi tin rằng, dù ở nơi nào đó, và dù đang làm nghề gì, nếu được hỏi về câu chuyện những nấc thang nghề nghiệp, cả hai sẽ đều cười và nói rằng không bao giờ muốn trở lại với nó nữa.\n\n**3) Triệt tiêu những cá nhân xuất sắc**\n\nDĩ nhiên cũng có một số người có thể trèo lên những nấc thang thật cao trong một thời gian rất ngắn. Hiện nay ở Việt Nam điều đó ngày càng xuất hiện nhiều. Chúng ta không còn thấy lạ nếu biết được có người chưa đầy 30 tuổi đã trở thành senior manager, thậm chí là director của những công ty lớn.\n\nTrở thành senior manager khi chưa đầy 30 tuổi có nghĩa là gì?\n\nCó nghĩa là người đó chỉ cần trải qua chừng 1-2 năm ở mỗi nấc thang: developer, team leader, manager,... (Dĩ nhiên có một số ít người đã đi làm từ trước khi tốt nghiệp đại học, nhưng đó không phải là đa số) trước khi bước được lên nấc thang kế tiếp.\n\nTôi thấy nghi ngờ về điều này. Có lẽ ở Việt Nam chúng ta đã quá dễ dãi trong việc đánh giá năng lực con người. Tôi may mắn có dịp biết được một số lập trình viên làm việc trong các công ty ở Mỹ (họ là công ty đối tác của công ty tôi), và đã từng bị sốc khi biết rằng họ đều ngoài 50 tuổi. Họ làm lập trình viên đã được hơn 20 năm, có nghĩa là tuổi nghề của họ còn lớn hơn tuổi đời của tôi! Ồ, đừng nghĩ rằng họ là những nhân viên kém cỏi nên mới ở mãi vị trí đó. Xét về năng lực, kinh nghiệm và kiến thức, có lẽ tôi chưa quen ai ở Việt Nam có thể sánh được với họ.\n\nNhân viên ở Nhật cũng cần 10 đến 15 năm làm công việc chuyên môn trước khi được xem xét để thăng chức. Ở Microsoft, lập trình viên cũng có 4-5 năm làm việc trở lên.\n\nTrong nghiên cứu mang tên Dự án Phát triển tài năng, tiến sĩ Benjamin Bloom của trường đại học NorthWestern đã tìm hiểu quá trình phát triển của những cá nhân xuất sắc trong nhiều lĩnh vực khác nhau. Kết luận được ông đưa ra là những người đó trung bình mất từ 10 đến 18 năm để đạt đến thành tựu cao nhất trong lĩnh vực của mình. Nghĩa là ngay cả những cá nhân kiệt xuất nhất trên thế giới (nghiên cứu đó đánh giá họ có trình độ world-class), cần không dưới 10 năm để đạt đến đỉnh cao trong lĩnh vực của họ. Chú ý rằng lập trình viên, quản lý, hoặc kinh doanh là những lĩnh vực hoàn toàn khác nhau. Nghiên cứu của tiến sĩ Benjamin không hề nói rằng cần mất trên 10 năm để con người vươn lên vị trí lãnh đạo cao nhất. \n\nĐây là một sự tai hại nữa của cái thang nghề nghiệp. Nó khiến cho chúng ta không thấy được đỉnh cao trong từng công việc, ngược lại nó làm cho chúng ta vội vã tìm cách thể hiện mình vừa đủ tốt trong nấc thang hiện tại để được bước lên cao. Và đến lúc nào đó, như anh K. chẳng hạn, chúng ta sẽ sớm nhận ra chúng ta đã bước đi quá xa, đến nỗi chúng ta không thể quay lại, đồng thời chúng ta đã không còn hứng thú gì nữa với những nấc thang phía trên nữa. Cái gì đến quá dễ thì ra đi cũng dễ dàng như vậy.\n\nCó thể đây là sản phẩm của những người làm công tác nhân sự chăng? Trong nỗ lực tìm ra cách giúp mọi nhân viên phát triển nghề nghiệp, họ đã vô tình bắt mọi người phải leo thang! Và sau quá trình leo thang mệt mọi như vậy, chúng ta sẽ thấy một số ít người ở trên cao có khả năng làm tốt được nhiều việc, nhưng chẳng có việc gì xuất sắc. Còn phần lớn mọi người thì ở bên dưới, bất mãn và buồn chán vì không thấy mình tiến bộ. Những người ở giữa thì hoang mang và mất phương hướng.\n\nBạn cần chú ý cách dùng từ ở đây, cần phải thấy được sự khác biệt giữa tốt (good) và xuất sắc (excellent, hoặc great). Tôi tin một số người chỉ cần mất 1-2 năm để làm tốt một số việc nào đó, nhưng để đạt được mức độ xuất sắc thì không thể.\n\nTôi sẽ không ngạc nhiên nếu càng về sau chúng ta càng có ít những người xuất sắc, những người giữ vị trí hàng đầu trong lĩnh vực của họ. Thiếu những người đó, chúng ta sẽ không thể phát triển xa được. Tôi cũng không ngạc nhiên nếu một ngày nào đó, mọi người lại tiếp tục xuýt xoa về loạt bài báo: những người leo thang số 1 Việt Nam. Có những người leo thang như vậy, chúng ta sẽ mãi ì ạch thua xa những nước khác.\n\nĐiều này sẽ rất khó thay đổi, vì càng ngày càng có nhiều người tham gia vào cuộc đua leo thang. Và những nấc thang thì càng lúc càng nhiều ra. Tôi được biết có công ty lúc mới thành lập thì chỉ có 3 nấc thang: developer, team leader, và boss. Nhưng sau đó thì họ có thêm nấc manager ở giữa team leader và boss. Rồi consultant ở giữa team leader và manager. Rồi senior developer ở giữa developer và team leader. Rồi thêm senior manager. Lần gần đây nhất khi xem trên website của công ty thì tôi thấy đã có thêm director. Tôi nghĩ số nấc thang sẽ không dừng lại ở đây.\n\nĐây là điều rất nguy hiểm. Với sự phát triển vô độ như vậy, chẳng mấy chốc các công ty sẽ giống như một anh chàng ốm nhách và cao kêu. Ai cũng được quản lý một số người phía dưới của mình. Tướng nhiều nhưng quân thì ít. Một số người bên dưới phải lao động vất vả cho số lượng rất nhiều người bên trên. Quá nhiều người tầm thường ở các cấp quản lý trung gian. Mọi người sẽ phí nhiều thời gian cho việc họp hành, báo cáo, kế hoạch, đánh giá, khen thưởng,... nên sẽ ít thời gian cho những công việc thực tế (viết code, kiểm tra, tạo quan hệ tốt với khách hàng,...)\n\nChúng ta nên làm gì?\nChúng ta có 2 cách tiếp cận để giải quyết những vấn đề trên. Cả 2 cách đều được lấy từ cuốn sách Peopleware mà tôi đã từng giới thiệu, cùng với cuốn sách “First Break All The Rules” – một cuốn sách mà những người làm quản lý và nhân sự nên đọc. Tôi viết bài viết này cũng là nhờ lấy thông tin từ 2 cuốn sách trên. \n\nCách thứ 1: tôi gọi là “sửa chữa nhẹ”. Chúng ta sẽ điều chỉnh lại những ảnh hưởng của cái thang theo hướng tích cực.\n\nCách thứ 2: tôi gọi là “làm lại hoàn toàn”. Tôi sẽ trình bày về cách này ở phần sau.\n\nSửa chữa nhẹ có nghĩa là chúng ta tạm chấp nhận sự tồn tại của cái thang, nhưng sẽ “tùy biến” nó lại một chút. Quan điểm thông thường bảo rằng chúng ta chỉ được phép tiến lên trên cái thang (hoặc có thể rẽ trái hay phải tùy theo chúng ta có thiên hướng quản lý hay kỹ thuật, nhưng cuối cùng thì cũng phải đi lên). Vậy thì chúng ta sẽ thêm một lựa chọn nữa khi leo thang: nếu ai không thích leo lên trên thì có thể leo ngang!\n\nNghĩa là mỗi người sẽ được khuyến khích đi sâu vào lĩnh vực mà họ đang làm. Không nhất thiết phải giỏi mọi thứ trong thời gian ngắn mới được đánh giá cao, thay vì vậy mỗi người cần tìm cái mình thích nhất và có khả năng nhất, rồi tập trung phát triển để mình trở nên xuất sắc nhất trong lĩnh vực đó.\n\nSau đây tôi sẽ trình bày cụ thể chúng ta sẽ cần làm thế nào và hệ quả sẽ ra sao.\n\n**1) Trả lương theo đúng năng lực**\n\nChắc chắn những gì tôi trình bày ở trên sẽ khiến bạn phải nghi ngờ ngay: thực tế tuy phũ phàng nhưng nó phải là như vậy. Manager thì quan trọng hơn developer nên lương cũng cao hơn developer. Vì vậy ai cũng muốn thăng tiến để làm manager. Suy cho cùng thì ai lại chẳng muốn địa vị cao và lương cao!\n\nĐúng vậy, tìm một manager tốt thì khó hơn rất nhiều so với tìm được developer tốt. Để trở thành manager tốt thì cũng cần nhiều thời gian, nhiều kỹ năng hơn, nhiều kinh nghiệm hơn, cho nên lương trung bình của manager phải cao hơn lương trung bình của developer.\n\nNhưng sẽ thật sai lầm nếu cho rằng lương của mọi manager đều phải cao hơn lương của mọi developer. Nếu công ty trả lương dựa trên nấc thang mà nhân viên đang đứng, thì không sớm thì muộn mọi nhân viên sẽ cũng xô đẩy nhau vào cuộc đua leo thang không có kết thúc hậu.\n\nTrở lại câu chuyện bóng đá một chút. Thật ra ngay cả những đứa nhỏ cũng hiểu làm tiền đạo thì có giá hơn làm hậu vệ. Tiền đạo ít khi thi đấu đủ 90 phút, lại chạy ít hơn, nhưng lúc nào cũng nhận lương cao hơn, giá trị chuyển nhượng cũng cao hơn, và luôn được hâm mộ hơn so với hậu vệ. Vậy thì ai lại muốn làm hậu vệ?\n\nCâu trả lời là có. Đó là những hậu vệ xuất sắc. Thể thao, đặc biệt là bóng đá, có một hệ thống lương bổng tốt mà những ngành khác nên học tập. Nó khuyến khích những hậu vệ giỏi luôn nỗ lực để xuất sắc hơn, thay vì cắm cúi rèn luyện để trở thành những tiền đạo trung bình. Họ hiểu rằng làm hậu vệ xuất sắc thì lương cao hơn làm tiền đạo trung bình. Dĩ nhiên, họ cũng hiểu ở cùng trình độ cao như họ thì những đồng nghiệp trên hàng tiền đạo sẽ có lương cao hơn, hợp đồng quảng cáo nhiều hơn, khả năng đạt giải thưởng (như Quả bóng vàng chẳng hạn) cũng sẽ lớn hơn. Nhưng điều đó không làm họ quan tâm, bởi vì họ hiểu rằng mình sinh ra không phải để làm tiền đạo xuất sắc.\n\n\nTương tự như vậy, trong bóng đá thì lương trung bình của huấn luyện viên luôn cao hơn lương trung bình của cầu thủ. Mourinho có mức lương mà rất nhiều cầu thủ ở Chelsea phải thèm muốn. Các cầu thủ Việt Nam hẳn sẽ phải e dè trước mức lương của ông Riedl. Nghề huấn luyện viên cũng có tuổi thọ cao hơn nghề cầu thủ.\n\nNhưng chẳng có mấy cầu thủ muốn kết thúc sự nghiệp cho nhanh để trở thành huấn luyện viên. Bởi vì trở thành cầu thủ xuất sắc đối với họ thì khả thi hơn, và khi đó họ cũng có thu nhập cao hơn so với việc trở thành huấn luyện viên làng nhàng.\n\nChúng ta nên làm như vậy trong ngành phần mềm. Chúng ta vẫn giữ những nấc thang như vậy, nhưng sẽ trả lương sao cho những người xuất sắc ở nấc thang bên dưới sẽ có lương cao hơn so với những người bình thường ở nấc thang bên trên.\n\nLấy ví dụ ở công ty Merrill Lynch. Theo như tác giả Marcus Buckingham và Curt Coffman của cuốn sách “First Break All The Rules” thì lương cao nhất mà một người cố vấn tài chính có thể nhận được là 500 ngàn đô la một năm. Trong khi đó, lương thấp nhất của một giám đốc chi nhánh (vị trí cao hơn so với cố vấn tài chính) chỉ là 150 ngàn đô la. Vì vậy, nếu một cố vần tài chính giỏi muốn được thăng chức, anh/chị ấy phải chấp nhận rủi ro sẽ bị lương thấp hơn đi rất nhiều. Dĩ nhiên, ở khía cạnh còn lại, nếu trở thành giám đốc chi nhánh xuất sắc, lương của họ có thể lên đến hàng triệu đô la. Cuộc chơi rất công bằng.\n\nCác cầu thủ xuất sắc hoặc cầu thủ gạo cội cũng phải cân nhắc rất nhiều khi chuyển sang nghề huấn luyện viên. Bởi vì ngay lập tức họ sẽ bị giảm lương so với khi làm cầu thủ. Nguyên tắc này khuyến khích những người giỏi trở nên giỏi hơn, và loại bớt những người chỉ nhằm vào thu nhập cao mà không cần tài năng ra khỏi cuộc chơi.\n\nCũng có nhiều người phải đối cách làm này. Họ nghĩ rằng cách làm hiện tại đỡ tốn kém hơn. Trả nhiều cho manager (có số người ít) và trả ít cho developer (có số người nhiều hơn) thì sẽ tiết kiệm hơn so với làm ngược lại. Họ nghĩ rằng chỉ cần manager giỏi thì cũng có thể quản lý được một tập thể developer trung bình.\n\nMột tập thể developer trung bình thì kết quả cuối cùng sẽ là trung bình, cho dù manager có là ai. Người manager sẽ phải mất nhiều thời gian để “hốt” những hậu quả và sai sót mà những developer để lại. Họ sẽ giẫm lên chân nhau. Một số người, đặc biệt là manager, thậm chí phải dành thời gian để lao vào coding thay cho những người không có khả năng. Cơn ác mộng này hẳn ai trong chúng ta cũng từng một lần biết qua.\n\nNếu một manager xuất sắc mà tập thể thì kém cỏi, kết quả sẽ thế nào? Không khó phải đoán, vì kinh nghiệm cho thấy kết quả của tập thể đó cũng sẽ rất kém cỏi. Điều duy nhất mà manager xuất sắc làm tốt hơn manager kém cỏi trong trường hợp này là dù thất bại, các thành viên cũng vấn thấy vui vẻ vì đã làm việc chung với người manager xuất sắc, vì họ đã học được nhiều điều có ích. Ngược lại, họ sẽ vô cùng tức giận và ganh ghét vì thấy người kém cỏi mà cũng được làm manager.\n\nKhả năng duy nhất mà manager xuất sắc có thể làm là biến một tập thể có tiềm năng trở nên thực sự xuất sắc. Điều này thì manager trung bình hay kém cỏi không thể làm được.\n\nVì vậy, hãy trả lương cao cho những những developer xuất sắc, và trả lương cao hơn nữa cho những manager xuất sắc; đối với những người còn lại thì trả lương thấp hơn.\n\n**2) Mở rộng các nâng thang sang chiều ngang**\n\nPhần lớn các công ty phần mềm đều định ra bảng liệt kê các tiêu chí để đánh giá nhân viên. Trong đó, nó sẽ phân biệt rạch ròi đâu là sự khác biệt giữa developer với senior developer, với team leader, với manager, với senior manager. Chẳng hạn, senior developer thì hơn developer ở số năm kinh nghiệm và khả năng truyền đạt. Nhưng rất ít nơi nào có khả năng định nghĩa đâu là sự khác biệt giữa developer kém, đâu là developer trung bình, và đâu là developer xuất sắc.\n\nĐánh giá như vậy thì buồn cười quá. Nếu dựa vào cách làm đó, tôi có thể nói rằng Trần Tiến Anh, cựu thủ môn của đội Thể Công giỏi hơn Ronaldinho nhiều. Ronaldinho chỉ biết đá ở vị trí tiền về tấn công hoặc tiền đạo. Nhưng Trần Tiên Anh thì “tròn trịa” hơn, bắt gôn thì hay, thình thoảng cũng đá được hậu vệ, khi nào có dịp đẩy lên đá tiền đạo cũng ngon lành chẳng kém tiền đạo mấy đội bóng phong trào.\n\nCách làm hiện nay đang phá hủy nghề nghiệp của tester, developer, và cả team leader, những người ở nấc thang bên dưới. Rất nhiều người làm testing và lập trình hiện nay đang hoang mang và chán nản, vì cho rằng những công việc này chẳng có gì phức tạp cả, ai làm cũng như ai. Là một người say đặc biệt say mê phần mềm và làm phần mềm, tôi không khỏi xót xa vì chuyện này. Ngay cả những người dọn dẹp phòng trong các khách sạn cũng hiểu được thế nào là người làm giỏi, thế nào là người làm dở, vậy mà chúng ta không chịu phân biệt đâu là developer giỏi và đâu là developer dở. Mà thật ra ngay cả những vị trí ở trên cũng đang xảy ra tình trạng tương tự đấy thôi.\n\nChúng ta nên chấm dứt tình trạng so sánh táo và cam, so sánh chó và mèo, so sánh tàu thủy và máy bay. Thay vì vậy, hãy so sánh những con mèo với nhau, chỉ rõ ra được đâu là mèo đẹp, đâu là mèo xấu; nuôi dưỡng và thưởng cho mèo đẹp để nó đẹp hơn, và không bao giờ khuyến khích nó trở thành chó nếu điều đó là không khả thi.\n\n**3) Thay đổi công việc phát triển phần mềm**\n\nThực tình tôi cũng phải thừa nhận rằng với công việc phát triển phần mềm hiện nay, rất khó để khuyến khích mọi người phát triển theo chiều ngang được, dù đó là tester, developer, hay manager. Vâng, phần lớn chúng ta làm gia công phần mềm (outsourcing), và khi outsourcing, chúng ta không cần nhiều những developer xuất sắc như nước Mỹ, và về mức độ cũng không cần phải xuất sắc như những người hàng đầu ở Mỹ.\n\nTrong tình hình hiện nay, một số nhỏ những cá nhân xuất sắc ở Việt Nam sẽ không tìm được vị trí của nấc thang thích hợp cho mình. Họ đang hoang mang không biết làm gì. Phần lớn họ quyết định ra nước ngoài học lên cao. Tôi chưa có khả năng bình luận về điều này, bởi vì tôi không may mắn được sinh ra trong số đó. Tôi đã và đang phải vật lộn với từng nấc thang đấy thôi, bắt đầu từ nấc thang thấp nhất đấy thôi :P\n\nNhưng ngay cả trong gia công phần mềm, vẫn còn rất nhiều khoảng trống để nhiều người phát triển sang ngang. Vấn đề là chúng ta có biết cách làm hay không. Tôi sẽ trở lại với đề tài này trong thời gian sắp tới.\n\n4) Hiểu rõ bản chất của sự phát triển\n\nTuy vậy, cũng sẽ có nhiều người phản đối những gì tôi đã trình bày ở trên. Tôi đoán có lẽ họ xuất thân từ ngành nhân sự, vì cái thang sự nghiệp là sản phẩm của ngành đó, không phải là của ngành công nghiệp phần mềm. Tôi cũng đoán có lẽ họ nhiễm phim kiếm hiệp Hồng Kông nặng.\n\nTrong phim kiếm hiệp, nhân vật chính của chúng ta sẽ luyện võ công từ cơ bản đến thượng thừa bằng cách bước vào một tòa tháp nhiều tầng. Ở mỗi tầng sẽ có các đối thủ với những sở trường khác nhau. Chẳng hạn, ở tấng 1, anh ta phải đối đầu với một cao thủ về khinh công. Anh ta phải rèn luyện để khinh công của mình vượt qua được đối thủ đó. Chiến thắng ở tầng 1 sẽ cho phép anh ta bước lên tầng 2. Ở tầng này, anh ta sẽ phải luyện kiếm pháp để đánh bại một cao thủ chuyên về kiếm. Cứ như thế, tấng 3 sẽ là đao pháp, tầng 4 là quyền pháp, tầng 5 là khí công, tấng 6 là trí lực, tầng 7 là phi tiêu ám khí, vân vân và vân vân. Khi vượt qua được tất cả các tầng và lên đến đỉnh ngọn tháp, anh ta sẽ trở thành cao thủ đệ nhất thiên hạ.\n\nQuan niệm thông thường dạy chúng ta rằng đó là sự phát triển của con người. Chúng ta được khuyến khích chinh phục những cái chưa biết, những cái chưa làm, khắc phục những điểm yếu của mình. Chúng ta cần làm cho mình hoàn thiện hơn.\n\nSự thực thì chẳng ai có thể làm được như vậy. Mỗi người sinh ra đều có điểm mạnh và điểm yếu riêng. Rất khó để chúng ta tự rèn luyện nhằm có thêm được những điểm mạnh mới, và càng không thể nếu chúng ta cố gằng tự sửa chữa điểm yếu để nó trở thành điểm mạnh.\n\nTất cả các vĩ nhân đều có khiếm khuyết. Họ không mất thời gian đi sửa chữa khiếm khuyết của mình. Thay vào đó họ tìm ra đầu là điểm mạnh của họ, tìm môi trường để điểm mạnh phát huy hết, và tìm những người cộng sự xuất sắc ở lĩnh vực khác để bù đắp cho khiếm khuyết của mình.\n\nTôi hiểu ra điều này sau khi đọc 2 cuốn sách ở trên, và nhất là sau khi cuộc trao đổi với một nhân viên trong công ty. Tôi hỏi:\n\n- Định hướng nghề nghiệp trong tương lai của em như thế nào? Và rồi tôi thao thao về những cơ hội phía trước, nào là leader, manager, technical director,...\n\n- Em thấy mình phù hợp với công việc chỉnh sửa và hoàn thiện lại những phần mềm sẵn có, để nó trở nên tốt hơn. Em thích được làm việc, nhưng quan trọng nhất là em thích được chơi game!!! – Nhân viên đó trả lời.\n\nTôi bị bất ngờ và chợt bửng tỉnh. Tôi đã quá ngu muội, tưởng tượng mình là đạo diễn trong bộ phim kiếm hiệp, và dựng cho người nhân viên này vai chính trong đó. Tôi lại đi khuyến khích nhân viên này kinh qua tất cả các tầng để trở nên hoàn thiện hơn, nhưng lại không hiểu người này muốn gì và có khả năng gì.\n\nBây giờ thì tôi đã hiểu. Người nhân viên của tôi không cần phải trở thành nhân vật chính trong bộ phim. Ngược lại, anh ta nên trở thành một trong các nhân vật phụ. Anh ta sẽ đi tìm xem mình thích cao thủ ở tầng nào nhất, và nếu đủ khả năng, anh ta sẽ ở lại tầng đó, rèn luyện để có thể trở thành cao thủ đệ nhất trong lĩnh vực đó. Có thể anh ta sẽ trở thành đệ nhất cao thủ khinh công, và như vậy anh ta không cần thiết phải luyện phép mình đồng da sắt làm gì nữa. Đơn giản là không thể được như vậy.\n\nAnh ta sẽ ở lại tầng đó càng lâu càng tốt. Có lẽ anh ta sẽ không bao giờ đi lên những tầng phía trên của ngọn tháp. Điều đó là không cần thiết. Bởi vì anh ta là một người rất đặc biệt. Cuộc sống của anh ta không phải là ở ngọn tháp đó. Anh ta chỉ ở tầng 1 của ngọn tháp trong một phần nhỏ của cuộc đời, và trong phần lớn thời gian còn lại, anh sẽ ra ngoài ngọn tháp, chơi những thứ mình thích, làm những điều có ý nghĩa khác, rồi ở bên những người quan trọng nhất đối với anh ta. Đó là phần kết của bộ phim.\n\nChúng ta có rất nhiều chọn lựa\n\nCòn một cách khác, tôi cho rằng triệt để hơn, đó là chúng ta hãy dẹp bỏ cái thang đó. Rõ ràng là nó vô nghĩa và nó đang làm sự nghiệp của nhiều người trở nên vô nghĩa.\n\nBất kỳ công ty nào cũng cần có sơ đồ mô tả bộ máy quản lý của công ty. Từ người thấp nhất đến người cao nhất. Sơ đồ này là phải có ở bất kỳ tổ chức nào. Nội dung của nó hoàn toàn giồng “bản vẽ” cái thang sự nghiệp mà chúng ta đang dùng.\n\nNhưng chúng ta không nên sử dụng nó đễ định hướng cho nhân viên phát triển sự nghiệp theo đó. Chúng ta nên tìm cách khác tốt hơn.\n\n**Nguồn : Lê Đình Lĩnh Nam.(Nam Le's Blog)**\n\n  [1]: http://daynhauhoc.com/t/suy-nghi-cua-1-lap-trinh-vien-phan-1/7733\n","__filename":"posts/7734.md","__url":"/suy-nghi-cua-1-lap-trinh-vien-phan-2/","__resourceUrl":"/suy-nghi-cua-1-lap-trinh-vien-phan-2/index.html","__dataUrl":"/suy-nghi-cua-1-lap-trinh-vien-phan-2/index.html.faf3d437404a8a0d854aae6fb1eb3ea1.json"}