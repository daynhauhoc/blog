{"head":{"id":6731,"layout":"Post","route":"mot-so-cach-define-dac-biet-trong-c-c","title":"Một số cách “#define” đặc biệt trong C/C++","tags":["tutorial","c++","c"],"date":"2015-04-30T16:23:43.111Z","author":{"username":"david15894","avatar":"/user_avatar/daynhauhoc.com/david15894/{size}/9742_1.png"},"description":"Đây là từ khóa tiền xử lý, dùng để định nghĩa tên một hằng hoặc kiểu gì đó…. Đối với mình thì nó giúp code \"nhanh gọn\" hơn  :joy:  nhưng…"},"body":"<p>Đây là từ khóa <strong>tiền xử lý, dùng để định nghĩa tên một hằng hoặc kiểu</strong> gì đó…. Đối với mình thì nó giúp code &quot;nhanh gọn&quot; hơn  :joy:  nhưng những <strong>beginner</strong> cũng đừng quá lạm dụng nhé!\nChắc mình cũng không cần giải thích nhiều về <strong>“#define”</strong> nữa :D nên vào thẳng luôn.\nCó lẽ đã quen kiểu <strong>“#define PI 3.14…..</strong>” hoặc #define một giá trị nào đấy. Và hôm nay nghỉ lễ rảnh rỗi nên viết ra bài này, sắp tới thi cử nữa nên dạo này không có nhiều thời gian. Bài này nhằm giới thiệu một số kiểu #define (define macro) khác mình hay dùng mà có thể bạn chưa gặp bao giờ =))</p>\n<pre><code>#define FOR(i,a,b) for (int i = a; i &lt; b; i++)\n</code></pre>\n<p>Đây là một vòng lặp for và bạn có thể sử dụng nó đơn giản về sau bằng cú pháp: <strong>FOR(i,3,5);</strong> (chạy từ 3 -&gt; 5) ….. hoặc <strong>FOR(i, 1, 100);</strong> (chạy từ 1-&gt;100)</p>\n<pre><code>#define for(i,n) for(int i=0;i&lt;n; i++)  \n</code></pre>\n<p>chạy từ 0 đến bé hơn n. dùng <strong>for(i, 5);</strong> tức sẽ cho chạy từ 0 đến &lt;5. thay vì cứ phải code lại dài dòng, như vậy ngắn hơn phải không?</p>\n<pre><code>#define R1 return 1   \n</code></pre>\n<p>thậm chí define cho cả giá trị trả về luôn.</p>\n<pre><code>#define CL(a,x) memset(x, a, sizeof(x));  \n</code></pre>\n<p>nhìn hàm <strong>memset</strong> chắc cũng biết rồi nhỉ. (cần có thư viện string).</p>\n<pre><code>#define filein freopen(&quot;in.txt&quot;,&quot;r&quot;,stdin) \n</code></pre>\n<p>Có thể dùng cho cả thao tác mở file.(tất nhiên là đóng cũng được).</p>\n<pre><code>#define pr(x) printf(&quot;Case %d: &quot;,x) in một số nguyên x bằng cú pháp pr(x);\n#define sc(n) scanf(&quot;%d&quot;,&amp;n) nhập một số nguyên n bằng cú pháp sc(n);\n#define C1(x) cin &gt;&gt; x // gõ C1(x); có vẻ nhanh hơn cin &gt;&gt; x;\n#define C2(x, y) cin &gt;&gt; x &gt;&gt; y // tương tự nhưng nhập 2 số\n#define C3(x, y, z) cin &gt;&gt; x &gt;&gt; y &gt;&gt; z // nhập 3 số\n</code></pre>\n<p>nhập xuất thông thường..</p>\n<pre><code>#define pb push_back \n</code></pre>\n<p><strong>push_back</strong> cũng ngắn hơn nhiều rồi.(cần có thư viện vector)</p>\n<pre><code>#define max(a, b) ((a) &gt; (b) ? (a) : (b))\n</code></pre>\n<p>tìm max 2 số a và b bằng cú pháp <strong>max(a, b);</strong>\nVà còn nhiều nữa……………….Nhưng để tìm max cho bất kỳ kiểu nào (int, float, double..) thì sao?\nBạn có nhớ <strong>template</strong> là gì? là một từ khóa của C++ đặc trưng cho việc tổng quát hóa việc xử lý với các kiểu dữ liệu khác nhau.(thôi tự tìm hiểu thêm nha) =))</p>\n<pre><code>template &lt;class T&gt; inline T max(T a, T b){ return a &gt; b ? a : b;}\n</code></pre>\n<p>tìm max 2 số a và b thì chỉ cần dùng cú pháp <strong>max(a, b);</strong> là xong\n<code>template&lt;class T&gt;T sq(T a){ return (a*a); }</code>\n// tính a^2 bằng cú pháp <strong>sq(a);</strong>\n<code>template&lt;class T&gt;T gcd(T a,T b){ return (b==0) ? a : gcd(b,a%b); }</code>\n// ước số chung lớn nhất của 2 số a, b bằng cú pháp <strong>gcd(a, b);</strong>\n<code>template&lt;class T&gt;T lcm(T a,T b){ return (a/gcd(a,b))*b; }</code>\n// ……….nhỏ nhất\n<code>template&lt;class T&gt;T Pow(T n,T p) { T res=n; for(T i=1;i&lt;p; i++){ res *= n; } return res; }</code>\n// chỉ là một hàm Pow thôi.\n<code>template&lt;class T&gt;bool isPrime(T n){ for(T i=2; i*i&lt;=n; i++){ if(n%i==0) return false; } return true; }</code>\n// kiểm tra số nguyên tố.\n…………….. còn rất nhiều nữa và bạn có thể tự nghĩ ra. tham khảo thêm <strong>typedef</strong>\n<strong>có thể một số không cần thiết lắm nhưng mục đích của bài này là giới thiệu cho bạn biết những “khả năng” của #define và template có thể làm được mà bạn chưa biết. HẾT</strong></p>\n","rawBody":"\nĐây là từ khóa **tiền xử lý, dùng để định nghĩa tên một hằng hoặc kiểu** gì đó…. Đối với mình thì nó giúp code \"nhanh gọn\" hơn  :joy:  nhưng những **beginner** cũng đừng quá lạm dụng nhé!\nChắc mình cũng không cần giải thích nhiều về **“#define”** nữa :D nên vào thẳng luôn.\nCó lẽ đã quen kiểu **“#define PI 3.14…..**” hoặc #define một giá trị nào đấy. Và hôm nay nghỉ lễ rảnh rỗi nên viết ra bài này, sắp tới thi cử nữa nên dạo này không có nhiều thời gian. Bài này nhằm giới thiệu một số kiểu #define (define macro) khác mình hay dùng mà có thể bạn chưa gặp bao giờ =))\n\n    #define FOR(i,a,b) for (int i = a; i < b; i++)\nĐây là một vòng lặp for và bạn có thể sử dụng nó đơn giản về sau bằng cú pháp: **FOR(i,3,5);** (chạy từ 3 -> 5) ….. hoặc **FOR(i, 1, 100);** (chạy từ 1->100)\n\n    #define for(i,n) for(int i=0;i<n; i++)  \nchạy từ 0 đến bé hơn n. dùng **for(i, 5);** tức sẽ cho chạy từ 0 đến <5. thay vì cứ phải code lại dài dòng, như vậy ngắn hơn phải không?\n\n    #define R1 return 1   \n thậm chí define cho cả giá trị trả về luôn.\n\n    #define CL(a,x) memset(x, a, sizeof(x));  \nnhìn hàm **memset** chắc cũng biết rồi nhỉ. (cần có thư viện string).\n\n    #define filein freopen(\"in.txt\",\"r\",stdin) \nCó thể dùng cho cả thao tác mở file.(tất nhiên là đóng cũng được).\n\n    #define pr(x) printf(\"Case %d: \",x) in một số nguyên x bằng cú pháp pr(x);\n    #define sc(n) scanf(\"%d\",&n) nhập một số nguyên n bằng cú pháp sc(n);\n    #define C1(x) cin >> x // gõ C1(x); có vẻ nhanh hơn cin >> x;\n    #define C2(x, y) cin >> x >> y // tương tự nhưng nhập 2 số\n    #define C3(x, y, z) cin >> x >> y >> z // nhập 3 số\nnhập xuất thông thường..\n\n    #define pb push_back \n**push_back** cũng ngắn hơn nhiều rồi.(cần có thư viện vector)\n\n    #define max(a, b) ((a) > (b) ? (a) : (b))\ntìm max 2 số a và b bằng cú pháp **max(a, b);**\nVà còn nhiều nữa……………….Nhưng để tìm max cho bất kỳ kiểu nào (int, float, double..) thì sao?\nBạn có nhớ **template** là gì? là một từ khóa của C++ đặc trưng cho việc tổng quát hóa việc xử lý với các kiểu dữ liệu khác nhau.(thôi tự tìm hiểu thêm nha) =))\n\n    template <class T> inline T max(T a, T b){ return a > b ? a : b;}\n\ntìm max 2 số a và b thì chỉ cần dùng cú pháp **max(a, b);** là xong\n`template<class T>T sq(T a){ return (a*a); }` \n// tính a^2 bằng cú pháp **sq(a);**\n`template<class T>T gcd(T a,T b){ return (b==0) ? a : gcd(b,a%b); }` \n// ước số chung lớn nhất của 2 số a, b bằng cú pháp **gcd(a, b);**\n`template<class T>T lcm(T a,T b){ return (a/gcd(a,b))*b; }` \n// ……….nhỏ nhất\n`template<class T>T Pow(T n,T p) { T res=n; for(T i=1;i<p; i++){ res *= n; } return res; }` \n// chỉ là một hàm Pow thôi.\n`template<class T>bool isPrime(T n){ for(T i=2; i*i<=n; i++){ if(n%i==0) return false; } return true; }` \n// kiểm tra số nguyên tố.\n…………….. còn rất nhiều nữa và bạn có thể tự nghĩ ra. tham khảo thêm **typedef**\n**có thể một số không cần thiết lắm nhưng mục đích của bài này là giới thiệu cho bạn biết những “khả năng” của #define và template có thể làm được mà bạn chưa biết. HẾT**\n","raw":"---json\n{\"id\":6731,\"layout\":\"Post\",\"route\":\"mot-so-cach-define-dac-biet-trong-c-c\",\"title\":\"Một số cách “#define” đặc biệt trong C/C++\",\"tags\":[\"tutorial\",\"c++\",\"c\"],\"date\":\"2015-04-30T16:23:43.111Z\",\"author\":{\"username\":\"david15894\",\"avatar\":\"/user_avatar/daynhauhoc.com/david15894/{size}/9742_1.png\"}}\n---\n\nĐây là từ khóa **tiền xử lý, dùng để định nghĩa tên một hằng hoặc kiểu** gì đó…. Đối với mình thì nó giúp code \"nhanh gọn\" hơn  :joy:  nhưng những **beginner** cũng đừng quá lạm dụng nhé!\nChắc mình cũng không cần giải thích nhiều về **“#define”** nữa :D nên vào thẳng luôn.\nCó lẽ đã quen kiểu **“#define PI 3.14…..**” hoặc #define một giá trị nào đấy. Và hôm nay nghỉ lễ rảnh rỗi nên viết ra bài này, sắp tới thi cử nữa nên dạo này không có nhiều thời gian. Bài này nhằm giới thiệu một số kiểu #define (define macro) khác mình hay dùng mà có thể bạn chưa gặp bao giờ =))\n\n    #define FOR(i,a,b) for (int i = a; i < b; i++)\nĐây là một vòng lặp for và bạn có thể sử dụng nó đơn giản về sau bằng cú pháp: **FOR(i,3,5);** (chạy từ 3 -> 5) ….. hoặc **FOR(i, 1, 100);** (chạy từ 1->100)\n\n    #define for(i,n) for(int i=0;i<n; i++)  \nchạy từ 0 đến bé hơn n. dùng **for(i, 5);** tức sẽ cho chạy từ 0 đến <5. thay vì cứ phải code lại dài dòng, như vậy ngắn hơn phải không?\n\n    #define R1 return 1   \n thậm chí define cho cả giá trị trả về luôn.\n\n    #define CL(a,x) memset(x, a, sizeof(x));  \nnhìn hàm **memset** chắc cũng biết rồi nhỉ. (cần có thư viện string).\n\n    #define filein freopen(\"in.txt\",\"r\",stdin) \nCó thể dùng cho cả thao tác mở file.(tất nhiên là đóng cũng được).\n\n    #define pr(x) printf(\"Case %d: \",x) in một số nguyên x bằng cú pháp pr(x);\n    #define sc(n) scanf(\"%d\",&n) nhập một số nguyên n bằng cú pháp sc(n);\n    #define C1(x) cin >> x // gõ C1(x); có vẻ nhanh hơn cin >> x;\n    #define C2(x, y) cin >> x >> y // tương tự nhưng nhập 2 số\n    #define C3(x, y, z) cin >> x >> y >> z // nhập 3 số\nnhập xuất thông thường..\n\n    #define pb push_back \n**push_back** cũng ngắn hơn nhiều rồi.(cần có thư viện vector)\n\n    #define max(a, b) ((a) > (b) ? (a) : (b))\ntìm max 2 số a và b bằng cú pháp **max(a, b);**\nVà còn nhiều nữa……………….Nhưng để tìm max cho bất kỳ kiểu nào (int, float, double..) thì sao?\nBạn có nhớ **template** là gì? là một từ khóa của C++ đặc trưng cho việc tổng quát hóa việc xử lý với các kiểu dữ liệu khác nhau.(thôi tự tìm hiểu thêm nha) =))\n\n    template <class T> inline T max(T a, T b){ return a > b ? a : b;}\n\ntìm max 2 số a và b thì chỉ cần dùng cú pháp **max(a, b);** là xong\n`template<class T>T sq(T a){ return (a*a); }` \n// tính a^2 bằng cú pháp **sq(a);**\n`template<class T>T gcd(T a,T b){ return (b==0) ? a : gcd(b,a%b); }` \n// ước số chung lớn nhất của 2 số a, b bằng cú pháp **gcd(a, b);**\n`template<class T>T lcm(T a,T b){ return (a/gcd(a,b))*b; }` \n// ……….nhỏ nhất\n`template<class T>T Pow(T n,T p) { T res=n; for(T i=1;i<p; i++){ res *= n; } return res; }` \n// chỉ là một hàm Pow thôi.\n`template<class T>bool isPrime(T n){ for(T i=2; i*i<=n; i++){ if(n%i==0) return false; } return true; }` \n// kiểm tra số nguyên tố.\n…………….. còn rất nhiều nữa và bạn có thể tự nghĩ ra. tham khảo thêm **typedef**\n**có thể một số không cần thiết lắm nhưng mục đích của bài này là giới thiệu cho bạn biết những “khả năng” của #define và template có thể làm được mà bạn chưa biết. HẾT**\n","__filename":"posts/6731.md","__url":"/mot-so-cach-define-dac-biet-trong-c-c/","__resourceUrl":"/mot-so-cach-define-dac-biet-trong-c-c/index.html","__dataUrl":"/mot-so-cach-define-dac-biet-trong-c-c/index.html.0d12cac149154f8df5d90af06876c2e6.json"}