{"head":{"id":2079,"layout":"Post","route":"wiki-mot-so-ham-toan-hoc-c","title":"[Wiki] Một số hàm toán học C++","tags":["wiki","c++"],"date":"2014-11-28T16:18:18.658Z","description":"Các hàm trong chương trinh\nUCLN2\n\nHàm này sẽ tính Ước chung lớn nhất cuả 2 số a,b\n\n* * *\n\nđây là toàn bộ code\n\n\\##Edited:\n\nMình vừa viết…"},"body":"<p><em>Các hàm trong chương trinh</em><br>\n<strong>UCLN2</strong></p>\n<pre><code class=\"hljs language-C++\"><span class=\"hljs-keyword\">template</span>&lt; <span class=\"hljs-keyword\">class</span> T&gt; UCLN2(T a, T b);</code></pre>\n<p><em>Hàm này sẽ tính Ước chung lớn nhất cuả 2 số a,b</em></p>\n<hr>\n<p><em>đây là toàn bộ code</em></p>\n<pre><code class=\"hljs language-C++\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;cstdio&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;cstdlib&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;cstdarg&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> CONCAT(name,type) name##_##type</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> CREATE(name,type) \\\ntype CONCAT(name,type)(){\\\n    type tmp;\\\n    cin&gt;&gt;tmp;\\\n    return tmp;\\\n}</span>\nCREATE(get,<span class=\"hljs-keyword\">int</span>)\nCREATE(get,<span class=\"hljs-keyword\">long</span>)\nCREATE(get,<span class=\"hljs-keyword\">char</span>)\nCREATE(get,<span class=\"hljs-keyword\">double</span>)\nCREATE(get,<span class=\"hljs-keyword\">float</span>)\n\n<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">class</span> T&gt;\n<span class=\"hljs-function\">T <span class=\"hljs-title\">UCLN2</span><span class=\"hljs-params\">(T a,T b)</span></span>{\n    <span class=\"hljs-keyword\">if</span>(a==<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> b;\n    <span class=\"hljs-keyword\">return</span> UCLN2(b%a,a);\n}\n<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">class</span> T&gt;\n<span class=\"hljs-function\">T <span class=\"hljs-title\">BCNN2</span><span class=\"hljs-params\">(T a,T b)</span></span>{\n    <span class=\"hljs-keyword\">return</span> a*b/UCLN2(a,b);\n}\n<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">class</span> T&gt;\n<span class=\"hljs-function\">T <span class=\"hljs-title\">UCLN</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> n,...)</span></span>{\n    T a,b;\n    va_list vl;\n    va_start(vl,n);\n    a=va_arg(vl,T);\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>;i&lt;n;++i){\n        b=va_arg(vl,T);\n        a=UCLN2&lt;T&gt;(a,b);\n    }\n    <span class=\"hljs-keyword\">return</span> a;\n}\n<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">class</span> T&gt;\n<span class=\"hljs-function\">T <span class=\"hljs-title\">BCNN</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> n,...)</span></span>{\n    T a,b;\n    va_list vl;\n    va_start(vl,n);\n    a=va_arg(vl,T);\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">1</span>;i&lt;n;++i){\n        b=va_arg(vl,T);\n        a=BCNN2&lt;T&gt;(a,b);\n    }\n    <span class=\"hljs-keyword\">return</span> a;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span>{\n    <span class=\"hljs-keyword\">long</span> a=BCNN&lt;<span class=\"hljs-keyword\">long</span>&gt;(<span class=\"hljs-number\">3</span>,get_long(),get_long(),get_long());\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">\"%ld\"</span>,a);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<h2 id=\"edited\"><a href=\"http://daynhauhoc.com/#edited\" class=\"statinamic-HeadingAnchor\">#</a>Edited:</h2>\n<ul>\n<li>\n<p>Mình vừa viết thêm đoạn macro để tiện cho input nó sẽ tạo ra các hàm get<em>int(),get</em>long(),get_float()...</p>\n<pre><code class=\"hljs language-C\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> CONCAT(name,type) name##_##type</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">define</span> CREATE(name,type) \\\ntype CONCAT(name,type)(){\\\ntype tmp;\\\ncin&gt;&gt;tmp;\\\nreturn tmp;\\\n}</span>\nCREATE(get,<span class=\"hljs-keyword\">int</span>)\nCREATE(get,<span class=\"hljs-keyword\">long</span>)\nCREATE(get,<span class=\"hljs-keyword\">char</span>)\nCREATE(get,<span class=\"hljs-keyword\">double</span>)\nCREATE(get,<span class=\"hljs-keyword\">float</span>)</code></pre>\n</li>\n</ul>\n","rawBody":"\n*Các hàm trong chương trinh*\n**UCLN2**\n```C++\ntemplate< class T> UCLN2(T a, T b);\n```\n*Hàm này sẽ tính Ước chung lớn nhất cuả 2 số a,b*\n\n*****************************************\n\n\n*đây là toàn bộ code*\n```C++\n#include <cstdio>\n#include <cstdlib>\n#include <cstdarg>\n#include <iostream>\nusing namespace std;\n\n#define CONCAT(name,type) name##_##type\n#define CREATE(name,type) \\\ntype CONCAT(name,type)(){\\\n    type tmp;\\\n    cin>>tmp;\\\n    return tmp;\\\n}\nCREATE(get,int)\nCREATE(get,long)\nCREATE(get,char)\nCREATE(get,double)\nCREATE(get,float)\n\ntemplate <class T>\nT UCLN2(T a,T b){\n    if(a==0) return b;\n    return UCLN2(b%a,a);\n}\ntemplate <class T>\nT BCNN2(T a,T b){\n    return a*b/UCLN2(a,b);\n}\ntemplate <class T>\nT UCLN(int n,...){\n    T a,b;\n    va_list vl;\n    va_start(vl,n);\n    a=va_arg(vl,T);\n    for(int i=1;i<n;++i){\n        b=va_arg(vl,T);\n        a=UCLN2<T>(a,b);\n    }\n    return a;\n}\ntemplate <class T>\nT BCNN(int n,...){\n    T a,b;\n    va_list vl;\n    va_start(vl,n);\n    a=va_arg(vl,T);\n    for(int i=1;i<n;++i){\n        b=va_arg(vl,T);\n        a=BCNN2<T>(a,b);\n    }\n    return a;\n}\n\nint main(){\n    long a=BCNN<long>(3,get_long(),get_long(),get_long());\n    printf(\"%ld\",a);\n    return 0;\n}\n\n```\n\n\n\n##Edited:\n - Mình vừa viết thêm đoạn macro để tiện cho input nó sẽ tạo ra các hàm get_int(),get_long(),get_float()...\n```C\n#define CONCAT(name,type) name##_##type\n#define CREATE(name,type) \\\ntype CONCAT(name,type)(){\\\n    type tmp;\\\n    cin>>tmp;\\\n    return tmp;\\\n}\nCREATE(get,int)\nCREATE(get,long)\nCREATE(get,char)\nCREATE(get,double)\nCREATE(get,float)\n```\n","raw":"---json\n{\"id\":2079,\"layout\":\"Post\",\"route\":\"wiki-mot-so-ham-toan-hoc-c\",\"title\":\"[Wiki] Một số hàm toán học C++\",\"tags\":[\"wiki\",\"c++\"],\"date\":\"2014-11-28T16:18:18.658Z\"}\n---\n\n*Các hàm trong chương trinh*\n**UCLN2**\n```C++\ntemplate< class T> UCLN2(T a, T b);\n```\n*Hàm này sẽ tính Ước chung lớn nhất cuả 2 số a,b*\n\n*****************************************\n\n\n*đây là toàn bộ code*\n```C++\n#include <cstdio>\n#include <cstdlib>\n#include <cstdarg>\n#include <iostream>\nusing namespace std;\n\n#define CONCAT(name,type) name##_##type\n#define CREATE(name,type) \\\ntype CONCAT(name,type)(){\\\n    type tmp;\\\n    cin>>tmp;\\\n    return tmp;\\\n}\nCREATE(get,int)\nCREATE(get,long)\nCREATE(get,char)\nCREATE(get,double)\nCREATE(get,float)\n\ntemplate <class T>\nT UCLN2(T a,T b){\n    if(a==0) return b;\n    return UCLN2(b%a,a);\n}\ntemplate <class T>\nT BCNN2(T a,T b){\n    return a*b/UCLN2(a,b);\n}\ntemplate <class T>\nT UCLN(int n,...){\n    T a,b;\n    va_list vl;\n    va_start(vl,n);\n    a=va_arg(vl,T);\n    for(int i=1;i<n;++i){\n        b=va_arg(vl,T);\n        a=UCLN2<T>(a,b);\n    }\n    return a;\n}\ntemplate <class T>\nT BCNN(int n,...){\n    T a,b;\n    va_list vl;\n    va_start(vl,n);\n    a=va_arg(vl,T);\n    for(int i=1;i<n;++i){\n        b=va_arg(vl,T);\n        a=BCNN2<T>(a,b);\n    }\n    return a;\n}\n\nint main(){\n    long a=BCNN<long>(3,get_long(),get_long(),get_long());\n    printf(\"%ld\",a);\n    return 0;\n}\n\n```\n\n\n\n##Edited:\n - Mình vừa viết thêm đoạn macro để tiện cho input nó sẽ tạo ra các hàm get_int(),get_long(),get_float()...\n```C\n#define CONCAT(name,type) name##_##type\n#define CREATE(name,type) \\\ntype CONCAT(name,type)(){\\\n    type tmp;\\\n    cin>>tmp;\\\n    return tmp;\\\n}\nCREATE(get,int)\nCREATE(get,long)\nCREATE(get,char)\nCREATE(get,double)\nCREATE(get,float)\n```\n","__filename":"posts/2079.md","__url":"/wiki-mot-so-ham-toan-hoc-c/","__resourceUrl":"/wiki-mot-so-ham-toan-hoc-c/index.html","__dataUrl":"/wiki-mot-so-ham-toan-hoc-c/index.html.e18d88bd881ea4aabb56da60d801c505.json"}