{"head":{"id":2193,"layout":"Post","route":"wiki-toan-tu-trong-c","title":"[Wiki] Toán tử trong C++","tags":["wiki","c++"],"date":"2014-12-01T03:21:00.773Z","description":"Toán tử - Operators /'ɔpəreitə/\nOnce introduced to variables and constants, we can begin to operate with them by using operators. //đoạn này…"},"body":"<p><strong>Toán tử - Operators /&#x27;ɔpəreitə/</strong>\nOnce introduced to variables and constants, we can begin to operate with them by using operators. //đoạn này a @ltd dịch hộ e phát :trollface:</p>\n<ul>\n<li><strong>Toán tử gán (=)</strong>\nĐịnh nghĩa: - toán tử này cho phép gán một giá trị cho biến</li>\n</ul>\n<pre><code>x=69;   // gán giá trị 69 cho biến x.\ny=5;\nx=y; // lúc này giá trị của x được thay thế bởi giả trị của y ( =5).\nx=y=z=10; // gán giá trị 10 cho cả ba biến x,y,z.\n</code></pre>\n<ul>\n<li>phép gán luôn được viết theo chiều từ phải sang trái, không được viết ngược lại.</li>\n</ul>\n<pre><code>69=x;   // cách viết như này là sai.\n</code></pre>\n<p>Ví dụ:</p>\n<pre><code>x = 5;\ny = 2 + x;\n// cách viết trên tương đương với cách viết như sau:\ny = 2 + (x = 5);\n</code></pre>\n<ul>\n<li><strong>Toán tử toán học (+, -, *, /, %)</strong>\n<strong>+</strong>: phép cộng - addition /ə&#x27;diʃn/\n<strong>-</strong>: phép trừ -   subtraction /səb&#x27;trækʃn/\n*: phép nhân - multiplication /,mʌltipli&#x27;keiʃn/\n<strong>/</strong>: phép chia   - division  /di&#x27;viʤn/\n<strong>%</strong>: chia lấy phần dư - modulo /ˈmɒdʒ əˌloʊ/\nVí dụ:</li>\n</ul>\n<pre><code>a=5+2; // kq = 7.\nb=5-3; // kq = 2.\nc=2*2; // kq = 4.\nd=6/2; // kq = 3.\ne=6%5; // kq = 1.\n</code></pre>\n<ul>\n<li><strong>Toán tử gán kết hợp (+=, -=, *=, /=, %=, &gt;&gt;=, &lt;&lt;=, &amp;=, ^=, |=)</strong></li>\n</ul>\n<pre><code>x+=5; // tương đương với x=x+5;\ny%=3; // tương đương với y=y%3;\ngia *= dv + 1; // tương đương với gia=gia*(dv+1);\n</code></pre>\n<ul>\n<li><strong>Toán tử tự tăng, tự giảm (++, --)</strong></li>\n<li>toán tử ++ : tăng thêm một đơn vị.</li>\n<li>toán tử --: giảm đi một đơn vị.</li>\n<li>hai toán tử trên có thể sử dụng như một tiền tố hoặc hậu tố.\nVí dụ:</li>\n</ul>\n<pre><code>//VD1:\nx = 3;\ny = ++x; //tiền tố\n// kết quả x = 4, y =4\n\n//VD2:\nx = 3;\ny = x++; //hậu tố\n// kết quả x = 4, y =3\n</code></pre>\n<p>Ở VD1, giá trị được gán cho y là giá trị của x sau khi được tăng. Trong khi đó ở VD2 lại là giá trị của x trước khi được tăng.</p>\n<ul>\n<li><strong>Toán tử so sánh ( ==, !=, &gt;, &lt;, &gt;=, &lt;= )</strong></li>\n</ul>\n<pre><code>== - so sánh bằng.\n!= - so sánh khác.\n&gt; - so sánh lớn hơn.\n&lt; - so sánh nhỏ hơn.\n&gt;= - so sánh lớn hơn hoặc bằng.\n&lt;= - so sánh nhỏ hơn hoặc bằng.\n</code></pre>\n<p>Ví dụ:</p>\n<pre><code>(7 == 5)     // false\n(5 &gt; 4)      // true\n(3 != 2)     // true\n(6 &gt;= 6)     // true\n(5 &lt; 5)      // false\n</code></pre>\n<ul>\n<li><strong>Toán tử logic ( !, &amp;&amp;, || )</strong>\n! - phép phủ định.\n&amp;&amp; - phép và.\n|| - phép hoặc.</li>\n</ul>\n<pre><code>!(6==9) \n// 6==9 là false, nhưng phủ định nên kết quả biểu thức là true.\n\n(&lt;biểu thức 1&gt; &amp;&amp; &lt;biểu thức 2&gt;) \n// cả hai biểu thức cùng true thì kết quả là true. trường hợp một trong hai biểu thức là false thì kết quả là false.\n\n(&lt;biểu thức 1&gt; || &lt;biểu thức 2&gt;) \n// một trong hai biểu thức là true thì kết quả là true. trường hợp cả hai biểu thức cùng false thì kết quả là false.\n</code></pre>\n<p>...\nP/s: còn nhiều quá, ai rảnh vào <a href=\"http://www.cplusplus.com/doc/tutorial/operators/\">http://www.cplusplus.com/doc/tutorial/operators/</a> làm tiếp nhé :wink:</p>\n","rawBody":"\n**Toán tử - Operators /'ɔpəreitə/**\nOnce introduced to variables and constants, we can begin to operate with them by using operators. //đoạn này a @ltd dịch hộ e phát :trollface:  \n\n - **Toán tử gán (=)**\nĐịnh nghĩa: - toán tử này cho phép gán một giá trị cho biến\n```\nx=69;   // gán giá trị 69 cho biến x.\ny=5;\nx=y; // lúc này giá trị của x được thay thế bởi giả trị của y ( =5).\nx=y=z=10; // gán giá trị 10 cho cả ba biến x,y,z.\n```\n- phép gán luôn được viết theo chiều từ phải sang trái, không được viết ngược lại.\n```\n69=x;   // cách viết như này là sai.\n```\nVí dụ:\n```\nx = 5;\ny = 2 + x;\n// cách viết trên tương đương với cách viết như sau:\ny = 2 + (x = 5);\n```\n - **Toán tử toán học (+, -, *, /, %)**\n**+**: phép cộng - addition /ə'diʃn/\n**-**: phép trừ -   subtraction /səb'trækʃn/\n*: phép nhân - multiplication /,mʌltipli'keiʃn/\n**/**: phép chia   - division  /di'viʤn/\n**%**: chia lấy phần dư - modulo /ˈmɒdʒ əˌloʊ/\nVí dụ:\n```\na=5+2; // kq = 7.\nb=5-3; // kq = 2.\nc=2*2; // kq = 4.\nd=6/2; // kq = 3.\ne=6%5; // kq = 1.\n```\n - **Toán tử gán kết hợp (+=, -=, *=, /=, %=, >>=, <<=, &=, ^=, |=)**\n```\nx+=5; // tương đương với x=x+5;\ny%=3; // tương đương với y=y%3;\ngia *= dv + 1; // tương đương với gia=gia*(dv+1);\n```\n - **Toán tử tự tăng, tự giảm (++, --)**\n- toán tử ++ : tăng thêm một đơn vị.\n- toán tử --: giảm đi một đơn vị.\n- hai toán tử trên có thể sử dụng như một tiền tố hoặc hậu tố.\nVí dụ:\n```\n//VD1:\nx = 3;\ny = ++x; //tiền tố\n// kết quả x = 4, y =4\n\n//VD2:\nx = 3;\ny = x++; //hậu tố\n// kết quả x = 4, y =3\n\n```\nỞ VD1, giá trị được gán cho y là giá trị của x sau khi được tăng. Trong khi đó ở VD2 lại là giá trị của x trước khi được tăng.\n\n - **Toán tử so sánh ( ==, !=, >, <, >=, <= )**\n```\n== - so sánh bằng.\n!= - so sánh khác.\n> - so sánh lớn hơn.\n< - so sánh nhỏ hơn.\n>= - so sánh lớn hơn hoặc bằng.\n<= - so sánh nhỏ hơn hoặc bằng.\n```\nVí dụ:\n```\n(7 == 5)     // false\n(5 > 4)      // true\n(3 != 2)     // true\n(6 >= 6)     // true\n(5 < 5)      // false\n```\n\n - **Toán tử logic ( !, &&, || )**\n! - phép phủ định.\n&& - phép và.\n|| - phép hoặc.\n```\n!(6==9) \n// 6==9 là false, nhưng phủ định nên kết quả biểu thức là true.\n\n(<biểu thức 1> && <biểu thức 2>) \n// cả hai biểu thức cùng true thì kết quả là true. trường hợp một trong hai biểu thức là false thì kết quả là false.\n\n(<biểu thức 1> || <biểu thức 2>) \n// một trong hai biểu thức là true thì kết quả là true. trường hợp cả hai biểu thức cùng false thì kết quả là false.\n```\n\n\n\n...\nP/s: còn nhiều quá, ai rảnh vào http://www.cplusplus.com/doc/tutorial/operators/ làm tiếp nhé :wink:\n","raw":"---json\n{\"id\":2193,\"layout\":\"Post\",\"route\":\"wiki-toan-tu-trong-c\",\"title\":\"[Wiki] Toán tử trong C++\",\"tags\":[\"wiki\",\"c++\"],\"date\":\"2014-12-01T03:21:00.773Z\"}\n---\n\n**Toán tử - Operators /'ɔpəreitə/**\nOnce introduced to variables and constants, we can begin to operate with them by using operators. //đoạn này a @ltd dịch hộ e phát :trollface:  \n\n - **Toán tử gán (=)**\nĐịnh nghĩa: - toán tử này cho phép gán một giá trị cho biến\n```\nx=69;   // gán giá trị 69 cho biến x.\ny=5;\nx=y; // lúc này giá trị của x được thay thế bởi giả trị của y ( =5).\nx=y=z=10; // gán giá trị 10 cho cả ba biến x,y,z.\n```\n- phép gán luôn được viết theo chiều từ phải sang trái, không được viết ngược lại.\n```\n69=x;   // cách viết như này là sai.\n```\nVí dụ:\n```\nx = 5;\ny = 2 + x;\n// cách viết trên tương đương với cách viết như sau:\ny = 2 + (x = 5);\n```\n - **Toán tử toán học (+, -, *, /, %)**\n**+**: phép cộng - addition /ə'diʃn/\n**-**: phép trừ -   subtraction /səb'trækʃn/\n*: phép nhân - multiplication /,mʌltipli'keiʃn/\n**/**: phép chia   - division  /di'viʤn/\n**%**: chia lấy phần dư - modulo /ˈmɒdʒ əˌloʊ/\nVí dụ:\n```\na=5+2; // kq = 7.\nb=5-3; // kq = 2.\nc=2*2; // kq = 4.\nd=6/2; // kq = 3.\ne=6%5; // kq = 1.\n```\n - **Toán tử gán kết hợp (+=, -=, *=, /=, %=, >>=, <<=, &=, ^=, |=)**\n```\nx+=5; // tương đương với x=x+5;\ny%=3; // tương đương với y=y%3;\ngia *= dv + 1; // tương đương với gia=gia*(dv+1);\n```\n - **Toán tử tự tăng, tự giảm (++, --)**\n- toán tử ++ : tăng thêm một đơn vị.\n- toán tử --: giảm đi một đơn vị.\n- hai toán tử trên có thể sử dụng như một tiền tố hoặc hậu tố.\nVí dụ:\n```\n//VD1:\nx = 3;\ny = ++x; //tiền tố\n// kết quả x = 4, y =4\n\n//VD2:\nx = 3;\ny = x++; //hậu tố\n// kết quả x = 4, y =3\n\n```\nỞ VD1, giá trị được gán cho y là giá trị của x sau khi được tăng. Trong khi đó ở VD2 lại là giá trị của x trước khi được tăng.\n\n - **Toán tử so sánh ( ==, !=, >, <, >=, <= )**\n```\n== - so sánh bằng.\n!= - so sánh khác.\n> - so sánh lớn hơn.\n< - so sánh nhỏ hơn.\n>= - so sánh lớn hơn hoặc bằng.\n<= - so sánh nhỏ hơn hoặc bằng.\n```\nVí dụ:\n```\n(7 == 5)     // false\n(5 > 4)      // true\n(3 != 2)     // true\n(6 >= 6)     // true\n(5 < 5)      // false\n```\n\n - **Toán tử logic ( !, &&, || )**\n! - phép phủ định.\n&& - phép và.\n|| - phép hoặc.\n```\n!(6==9) \n// 6==9 là false, nhưng phủ định nên kết quả biểu thức là true.\n\n(<biểu thức 1> && <biểu thức 2>) \n// cả hai biểu thức cùng true thì kết quả là true. trường hợp một trong hai biểu thức là false thì kết quả là false.\n\n(<biểu thức 1> || <biểu thức 2>) \n// một trong hai biểu thức là true thì kết quả là true. trường hợp cả hai biểu thức cùng false thì kết quả là false.\n```\n\n\n\n...\nP/s: còn nhiều quá, ai rảnh vào http://www.cplusplus.com/doc/tutorial/operators/ làm tiếp nhé :wink:\n","__filename":"posts/2193.md","__url":"/wiki-toan-tu-trong-c/","__resourceUrl":"/wiki-toan-tu-trong-c/index.html","__dataUrl":"/wiki-toan-tu-trong-c/index.html.0d41868a8ff93aac72ba1e7e0c889dce.json"}