{"head":{"id":22178,"layout":"Post","route":"fastest-way-to-learn-basic-of-programming-p2","title":"Fastest way to learn basic of Programming [P2]","tags":["basic"],"date":"2016-03-15T10:42:50.131Z","views":384,"likes":21,"description":"Chào cả nhà, sau khi làm xong Part 1 của Fastest way to learn basic of Programming, em thấy có rất nhiều bạn newbie và cả không newbie đánh…","author":{"name":"Steve Alan (Quốc Hùng)","avatar":"/user_avatar/daynhauhoc.com/conan4582/{size}/8110_1.png","username":"conan4582"}},"body":"\n<p>Chào cả nhà, sau khi làm xong Part 1 của Fastest way to learn basic of Programming, em thấy có rất nhiều bạn newbie và cả không newbie đánh giá tốt bài viết XD, và nhiều lượt hóng (nhưng lượt xem hơi ít, mới có 230 lượt <img src=\"http://daynhauhoc.com/images/emoji/twitter/cry.png?v=2\" title=\":cry:\" class=\"emoji\" alt=\":cry:\"> ) Nhưng không vì thế mà làm chậm trễ việc post bài cho các bạn. ^^</p>\n\n<p>Xem phần 1 tại: <a href=\"http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p1/22117\">http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p1/22117</a></p>\n\n<p>Trong phần 1, chúng ta đã biết \"sơ sơ\" qua các khái niệm cơ bản như biến, kiểu,... nhưng ngắn và dễ hiểu hơn trong sách, giáo trình (mọi người đánh giá, em không bum đâu <img src=\"http://daynhauhoc.com/images/emoji/twitter/joy.png?v=2\" title=\":joy:\" class=\"emoji\" alt=\":joy:\"> ) và trong phần 2, ta sẽ đi tìm hiểu hết các phần còn lại.</p>\n\n<h1>NHẬP MÔN LẬP TRÌNH</h1>\n\n<br>\n\n<h2>Những thứ ban đầu -tt</h2>\n\n<br>\n\n<b>Khai Báo (Declaration)</b>: là yêu cầu máy tính cung cấp cho mình những thứ mình cần. Không yêu cầu là nó không cho đâu. :smiley:\n\n<br>\n\nVD nhé: int a = 5; -&gt; \"Cưng eh, cho anh mượn cái hộp (int) nhãn a chứa kẹo (5) ^^ đi.\"\n\n<br>\n\nclass Explore -&gt; \"Mấy chú xây cho anh cái phòng đặt tên là Explore nha\"\n\n<p><b>Các loại kiểu</b>: như trong phần 1, mình đã nói về kiểu là gồm 4 loại cơ bản, nhưng bây giờ mình sẽ phân tích về các kiểu này (mình theo ngôn ngữ Java nhé). Mỗi kiểu sẽ có loại khác nhau và phạm vi (nói chung là độ rộng của cái hộp để nhét vừa đồ thôi ^^) được đo bằng bit<br></p>\n\n<p></p><pre><code class=\"lang-auto\">--Kiểu Số Nguyên--\nbyte   =  8  bit\nshort  =  16 bit\nint    =  32 bit\nlong   =  64 bit\n--Kiểu số thực--\nfloat  =  32 bit\ndouble =  64 bit\n--Kiểu Logic--\nboolean=  1  bit\n--Kiểu Kí tự-chuỗi--\nString = (mình không rõ vì trong Java nó là 1 lớp)\nchar   =  16 bit\n--Kiểu đặc biệt--\nvoid  -&gt; không trả về</code></pre>\n\n<p><b>Chuỗi (String)</b>: giống như 1 câu trong văn viết vậy thôi, còn kí tự là 1 chữ cái <img src=\"http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> .<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Fact: Ngôn ngữ lập trình thường đặt chuỗi trong \" \", một số thì ' ',...</code></pre>\n\n<p><b>Lệnh rẽ nhánh (Condition)</b>: khó hiểu nhể, đơn giản là giống như bạn đăng nhập facebook, đúng mật khẩu (true) thì nó cho bạn vào, không thì đá bạn ra (false) vậy thôi<br>Lệnh rẽ nhánh chia làm 2 loại phổ biến<br></p>\n\n<p></p><pre><code class=\"lang-auto\">if ( condition ) { activities } else { activities }\nnếu ( mật khẩu đúng ) thì { đăng nhập } còn không thì { đá ra }\n\nswitch ( expression ) { case &lt;value&gt; : {activities} break; } \nxét (tên tài khoản) { là \"ltd\" thì { tên = \"Lê Trần Đạt\" } break; } //break dùng để thoát ra. Làm xong rồi ở lại làm gì? về hoy</code></pre>\n\n<p><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/b/b871f5cf79ff62fd4d80d93cadcea0f6a23f244e.png\" width=\"198\" height=\"254\"></p>\n\n<p><b>Lệnh lặp (loop)</b>: là thực đi thực hiện lại một việc gì đấy, giống như bạn đi học là lặp đi lặp lại việc đi đến trường và đi vê nhà.<br>Lệnh lặp sẽ luôn có điều kiện để dừng và thuộc loại đếm limit hay unlimited.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Limit - giới hạn số lần\nfor ( counter ; condition ; step ) { activities }\nlặp ( số năm học ; số năm học &lt; 12; số năm học + 1) { đi học }\n\nUnlimited - không giới hạn\nwhile ( condition ) { activities }\nkhi ( tuổi &lt; 19 ) { đi học; tuổi++ }\ndo { activities } while ( condition ) cũng tương tự.</code></pre>\n\n<p><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/5/54e90ab74d5e60e6590df16b96be96d5fb9d8002.png\" width=\"194\" height=\"260\"></p>\n\n<p><b>Hàm (Function)</b>: là một khối lệnh có tên, có tham số truyền vào và có kiểu trả về -&gt; Nó giống máy bán kem, chỉ cần đưa tiền (tham số) vào là sẽ cho ra lượng kem tương ứng (trả về)<br> +Tham số (Argument): là những gì bạn đưa vào.<br> +Trả về (Return) : là những gì nó đưa ra.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">khai báo hàm &lt;kiểu trả về&gt; &lt;tên&gt; ( các tham số ) { công việc }\nvd:\nIceCream IceCreamSeller (int Money) {  //hàm &lt;tên chữ màu đỏ&gt; trả về là Kem và tham số là tiền ^^\n    int IceCreamOut = 0;\n    if ( Money == 0 ) {\n      Nói(\"Định ăn chịu ak\");\n    } else {\n      IceCreamOut = 4 * Money;\n    }\n    return IceCreamOut;  //trả vể (xuất ra) kem\n}</code></pre>\n\n<p><b>Thủ Tục</b>: đơn giản là hàm mà không có trả về thôi (trả về void) thôi mà. Làm khó nhau hoài.</p>\n\n<p><b>Con trỏ (Pointer)</b>: dự là đây sẽ là thứ hack não ai dùng C++ hay C. Nói nôm na đây là một biến mà nó nằm trong chương trình, chỉ trỏ lung tung. Dễ hiểu hơn đây là cái mặt nạ, bạn muốn nó thể hiện gì, giống cái gì là nó sẽ làm y hệt như vậy<br>VD: Bạn có 2 cuốn sách, bạn ra ngoài và chỉ đem theo 1 cuốn sách ảo. Thì bạn muốn đọc cuốn nào nó hóa thành cuốn ấy cho bạn -&gt; Cuốn sách ảo là con trỏ.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Fact: Một số ngôn ngữ lập trình hiện đại thường không cho phép sử dụng con\ntrỏ vì nó không bảo mật, nhưng nhờ có con trỏ nên chúng ta mới có OOP ngày nay</code></pre>\n\n<p><b>Một số định nghĩa liên quan: (sẽ giúp ích)</b><br></p>\n\n<p></p><pre><code class=\"lang-auto\">Desktop Development - Lập trình ứng dụng (cho máy tính)\nMobile Development - Lập trình ứng dụng (cho điện thoại)\nSystem Development - Lập trình hệ thống\nEmbedded Development - Lập trình Nhúng\nIDE -  Integrated Development Environment - Môi trường phát triển tích hợp: \n   Đây là thứ giúp ích bạn rất nhiều hơn là ngồi code notepad.\nGUI - Graphical User Interface - Giao diện đồ họa\nConsole - Giao diện dòng lệnh \nPL - Programming Language - Ngôn ngữ lập trình\nFunctional Programming - Lập trình hướng hàm\nObject-Oriented Programming - Lập trình hướng đối tượng</code></pre>\n\n<p>Hôm nay tới đây thôi, nhiều quá loãng mất ^^. Mọi người cho em xin ý kiến nhá. <br><strike>Nếu thấy hay thì đừng quên bấm Like ủng hộ tác giả. Thấy đở thì góp ý.</strike><br>Cảm ơn các bạn.</p>\n","rawBody":"\n<p>Chào cả nhà, sau khi làm xong Part 1 của Fastest way to learn basic of Programming, em thấy có rất nhiều bạn newbie và cả không newbie đánh giá tốt bài viết XD, và nhiều lượt hóng (nhưng lượt xem hơi ít, mới có 230 lượt <img src=\"http://daynhauhoc.com/images/emoji/twitter/cry.png?v=2\" title=\":cry:\" class=\"emoji\" alt=\":cry:\"> ) Nhưng không vì thế mà làm chậm trễ việc post bài cho các bạn. ^^</p>\n\n<p>Xem phần 1 tại: <a href=\"http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p1/22117\">http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p1/22117</a></p>\n\n<p>Trong phần 1, chúng ta đã biết \"sơ sơ\" qua các khái niệm cơ bản như biến, kiểu,... nhưng ngắn và dễ hiểu hơn trong sách, giáo trình (mọi người đánh giá, em không bum đâu <img src=\"http://daynhauhoc.com/images/emoji/twitter/joy.png?v=2\" title=\":joy:\" class=\"emoji\" alt=\":joy:\"> ) và trong phần 2, ta sẽ đi tìm hiểu hết các phần còn lại.</p>\n\n<h1>NHẬP MÔN LẬP TRÌNH</h1>\n\n<br>\n\n<h2>Những thứ ban đầu -tt</h2>\n\n<br>\n\n<b>Khai Báo (Declaration)</b>: là yêu cầu máy tính cung cấp cho mình những thứ mình cần. Không yêu cầu là nó không cho đâu. :smiley:\n\n<br>\n\nVD nhé: int a = 5; -&gt; \"Cưng eh, cho anh mượn cái hộp (int) nhãn a chứa kẹo (5) ^^ đi.\"\n\n<br>\n\nclass Explore -&gt; \"Mấy chú xây cho anh cái phòng đặt tên là Explore nha\"\n\n<p><b>Các loại kiểu</b>: như trong phần 1, mình đã nói về kiểu là gồm 4 loại cơ bản, nhưng bây giờ mình sẽ phân tích về các kiểu này (mình theo ngôn ngữ Java nhé). Mỗi kiểu sẽ có loại khác nhau và phạm vi (nói chung là độ rộng của cái hộp để nhét vừa đồ thôi ^^) được đo bằng bit<br></p>\n\n<p></p><pre><code class=\"lang-auto\">--Kiểu Số Nguyên--\nbyte   =  8  bit\nshort  =  16 bit\nint    =  32 bit\nlong   =  64 bit\n--Kiểu số thực--\nfloat  =  32 bit\ndouble =  64 bit\n--Kiểu Logic--\nboolean=  1  bit\n--Kiểu Kí tự-chuỗi--\nString = (mình không rõ vì trong Java nó là 1 lớp)\nchar   =  16 bit\n--Kiểu đặc biệt--\nvoid  -&gt; không trả về</code></pre>\n\n<p><b>Chuỗi (String)</b>: giống như 1 câu trong văn viết vậy thôi, còn kí tự là 1 chữ cái <img src=\"http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> .<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Fact: Ngôn ngữ lập trình thường đặt chuỗi trong \" \", một số thì ' ',...</code></pre>\n\n<p><b>Lệnh rẽ nhánh (Condition)</b>: khó hiểu nhể, đơn giản là giống như bạn đăng nhập facebook, đúng mật khẩu (true) thì nó cho bạn vào, không thì đá bạn ra (false) vậy thôi<br>Lệnh rẽ nhánh chia làm 2 loại phổ biến<br></p>\n\n<p></p><pre><code class=\"lang-auto\">if ( condition ) { activities } else { activities }\nnếu ( mật khẩu đúng ) thì { đăng nhập } còn không thì { đá ra }\n\nswitch ( expression ) { case &lt;value&gt; : {activities} break; } \nxét (tên tài khoản) { là \"ltd\" thì { tên = \"Lê Trần Đạt\" } break; } //break dùng để thoát ra. Làm xong rồi ở lại làm gì? về hoy</code></pre>\n\n<p><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/b/b871f5cf79ff62fd4d80d93cadcea0f6a23f244e.png\" width=\"198\" height=\"254\"></p>\n\n<p><b>Lệnh lặp (loop)</b>: là thực đi thực hiện lại một việc gì đấy, giống như bạn đi học là lặp đi lặp lại việc đi đến trường và đi vê nhà.<br>Lệnh lặp sẽ luôn có điều kiện để dừng và thuộc loại đếm limit hay unlimited.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Limit - giới hạn số lần\nfor ( counter ; condition ; step ) { activities }\nlặp ( số năm học ; số năm học &lt; 12; số năm học + 1) { đi học }\n\nUnlimited - không giới hạn\nwhile ( condition ) { activities }\nkhi ( tuổi &lt; 19 ) { đi học; tuổi++ }\ndo { activities } while ( condition ) cũng tương tự.</code></pre>\n\n<p><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/5/54e90ab74d5e60e6590df16b96be96d5fb9d8002.png\" width=\"194\" height=\"260\"></p>\n\n<p><b>Hàm (Function)</b>: là một khối lệnh có tên, có tham số truyền vào và có kiểu trả về -&gt; Nó giống máy bán kem, chỉ cần đưa tiền (tham số) vào là sẽ cho ra lượng kem tương ứng (trả về)<br> +Tham số (Argument): là những gì bạn đưa vào.<br> +Trả về (Return) : là những gì nó đưa ra.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">khai báo hàm &lt;kiểu trả về&gt; &lt;tên&gt; ( các tham số ) { công việc }\nvd:\nIceCream IceCreamSeller (int Money) {  //hàm &lt;tên chữ màu đỏ&gt; trả về là Kem và tham số là tiền ^^\n    int IceCreamOut = 0;\n    if ( Money == 0 ) {\n      Nói(\"Định ăn chịu ak\");\n    } else {\n      IceCreamOut = 4 * Money;\n    }\n    return IceCreamOut;  //trả vể (xuất ra) kem\n}</code></pre>\n\n<p><b>Thủ Tục</b>: đơn giản là hàm mà không có trả về thôi (trả về void) thôi mà. Làm khó nhau hoài.</p>\n\n<p><b>Con trỏ (Pointer)</b>: dự là đây sẽ là thứ hack não ai dùng C++ hay C. Nói nôm na đây là một biến mà nó nằm trong chương trình, chỉ trỏ lung tung. Dễ hiểu hơn đây là cái mặt nạ, bạn muốn nó thể hiện gì, giống cái gì là nó sẽ làm y hệt như vậy<br>VD: Bạn có 2 cuốn sách, bạn ra ngoài và chỉ đem theo 1 cuốn sách ảo. Thì bạn muốn đọc cuốn nào nó hóa thành cuốn ấy cho bạn -&gt; Cuốn sách ảo là con trỏ.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Fact: Một số ngôn ngữ lập trình hiện đại thường không cho phép sử dụng con\ntrỏ vì nó không bảo mật, nhưng nhờ có con trỏ nên chúng ta mới có OOP ngày nay</code></pre>\n\n<p><b>Một số định nghĩa liên quan: (sẽ giúp ích)</b><br></p>\n\n<p></p><pre><code class=\"lang-auto\">Desktop Development - Lập trình ứng dụng (cho máy tính)\nMobile Development - Lập trình ứng dụng (cho điện thoại)\nSystem Development - Lập trình hệ thống\nEmbedded Development - Lập trình Nhúng\nIDE -  Integrated Development Environment - Môi trường phát triển tích hợp: \n   Đây là thứ giúp ích bạn rất nhiều hơn là ngồi code notepad.\nGUI - Graphical User Interface - Giao diện đồ họa\nConsole - Giao diện dòng lệnh \nPL - Programming Language - Ngôn ngữ lập trình\nFunctional Programming - Lập trình hướng hàm\nObject-Oriented Programming - Lập trình hướng đối tượng</code></pre>\n\n<p>Hôm nay tới đây thôi, nhiều quá loãng mất ^^. Mọi người cho em xin ý kiến nhá. <br><strike>Nếu thấy hay thì đừng quên bấm Like ủng hộ tác giả. Thấy đở thì góp ý.</strike><br>Cảm ơn các bạn.</p>\n","raw":"---json\n{\"id\":22178,\"layout\":\"Post\",\"route\":\"fastest-way-to-learn-basic-of-programming-p2\",\"title\":\"Fastest way to learn basic of Programming [P2]\",\"tags\":[\"basic\"],\"date\":\"2016-03-15T10:42:50.131Z\",\"views\":384,\"likes\":21,\"description\":\"Chào cả nhà, sau khi làm xong Part 1 của Fastest way to learn basic of Programming, em thấy có rất nhiều bạn newbie và cả không newbie đánh…\",\"author\":{\"name\":\"Steve Alan (Quốc Hùng)\",\"avatar\":\"/user_avatar/daynhauhoc.com/conan4582/{size}/8110_1.png\",\"username\":\"conan4582\"}}\n---\n\n<p>Chào cả nhà, sau khi làm xong Part 1 của Fastest way to learn basic of Programming, em thấy có rất nhiều bạn newbie và cả không newbie đánh giá tốt bài viết XD, và nhiều lượt hóng (nhưng lượt xem hơi ít, mới có 230 lượt <img src=\"http://daynhauhoc.com/images/emoji/twitter/cry.png?v=2\" title=\":cry:\" class=\"emoji\" alt=\":cry:\"> ) Nhưng không vì thế mà làm chậm trễ việc post bài cho các bạn. ^^</p>\n\n<p>Xem phần 1 tại: <a href=\"http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p1/22117\">http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p1/22117</a></p>\n\n<p>Trong phần 1, chúng ta đã biết \"sơ sơ\" qua các khái niệm cơ bản như biến, kiểu,... nhưng ngắn và dễ hiểu hơn trong sách, giáo trình (mọi người đánh giá, em không bum đâu <img src=\"http://daynhauhoc.com/images/emoji/twitter/joy.png?v=2\" title=\":joy:\" class=\"emoji\" alt=\":joy:\"> ) và trong phần 2, ta sẽ đi tìm hiểu hết các phần còn lại.</p>\n\n<h1>NHẬP MÔN LẬP TRÌNH</h1>\n\n<br>\n\n<h2>Những thứ ban đầu -tt</h2>\n\n<br>\n\n<b>Khai Báo (Declaration)</b>: là yêu cầu máy tính cung cấp cho mình những thứ mình cần. Không yêu cầu là nó không cho đâu. :smiley:\n\n<br>\n\nVD nhé: int a = 5; -&gt; \"Cưng eh, cho anh mượn cái hộp (int) nhãn a chứa kẹo (5) ^^ đi.\"\n\n<br>\n\nclass Explore -&gt; \"Mấy chú xây cho anh cái phòng đặt tên là Explore nha\"\n\n<p><b>Các loại kiểu</b>: như trong phần 1, mình đã nói về kiểu là gồm 4 loại cơ bản, nhưng bây giờ mình sẽ phân tích về các kiểu này (mình theo ngôn ngữ Java nhé). Mỗi kiểu sẽ có loại khác nhau và phạm vi (nói chung là độ rộng của cái hộp để nhét vừa đồ thôi ^^) được đo bằng bit<br></p>\n\n<p></p><pre><code class=\"lang-auto\">--Kiểu Số Nguyên--\nbyte   =  8  bit\nshort  =  16 bit\nint    =  32 bit\nlong   =  64 bit\n--Kiểu số thực--\nfloat  =  32 bit\ndouble =  64 bit\n--Kiểu Logic--\nboolean=  1  bit\n--Kiểu Kí tự-chuỗi--\nString = (mình không rõ vì trong Java nó là 1 lớp)\nchar   =  16 bit\n--Kiểu đặc biệt--\nvoid  -&gt; không trả về</code></pre>\n\n<p><b>Chuỗi (String)</b>: giống như 1 câu trong văn viết vậy thôi, còn kí tự là 1 chữ cái <img src=\"http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"> .<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Fact: Ngôn ngữ lập trình thường đặt chuỗi trong \" \", một số thì ' ',...</code></pre>\n\n<p><b>Lệnh rẽ nhánh (Condition)</b>: khó hiểu nhể, đơn giản là giống như bạn đăng nhập facebook, đúng mật khẩu (true) thì nó cho bạn vào, không thì đá bạn ra (false) vậy thôi<br>Lệnh rẽ nhánh chia làm 2 loại phổ biến<br></p>\n\n<p></p><pre><code class=\"lang-auto\">if ( condition ) { activities } else { activities }\nnếu ( mật khẩu đúng ) thì { đăng nhập } còn không thì { đá ra }\n\nswitch ( expression ) { case &lt;value&gt; : {activities} break; } \nxét (tên tài khoản) { là \"ltd\" thì { tên = \"Lê Trần Đạt\" } break; } //break dùng để thoát ra. Làm xong rồi ở lại làm gì? về hoy</code></pre>\n\n<p><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/b/b871f5cf79ff62fd4d80d93cadcea0f6a23f244e.png\" width=\"198\" height=\"254\"></p>\n\n<p><b>Lệnh lặp (loop)</b>: là thực đi thực hiện lại một việc gì đấy, giống như bạn đi học là lặp đi lặp lại việc đi đến trường và đi vê nhà.<br>Lệnh lặp sẽ luôn có điều kiện để dừng và thuộc loại đếm limit hay unlimited.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Limit - giới hạn số lần\nfor ( counter ; condition ; step ) { activities }\nlặp ( số năm học ; số năm học &lt; 12; số năm học + 1) { đi học }\n\nUnlimited - không giới hạn\nwhile ( condition ) { activities }\nkhi ( tuổi &lt; 19 ) { đi học; tuổi++ }\ndo { activities } while ( condition ) cũng tương tự.</code></pre>\n\n<p><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/5/54e90ab74d5e60e6590df16b96be96d5fb9d8002.png\" width=\"194\" height=\"260\"></p>\n\n<p><b>Hàm (Function)</b>: là một khối lệnh có tên, có tham số truyền vào và có kiểu trả về -&gt; Nó giống máy bán kem, chỉ cần đưa tiền (tham số) vào là sẽ cho ra lượng kem tương ứng (trả về)<br> +Tham số (Argument): là những gì bạn đưa vào.<br> +Trả về (Return) : là những gì nó đưa ra.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">khai báo hàm &lt;kiểu trả về&gt; &lt;tên&gt; ( các tham số ) { công việc }\nvd:\nIceCream IceCreamSeller (int Money) {  //hàm &lt;tên chữ màu đỏ&gt; trả về là Kem và tham số là tiền ^^\n    int IceCreamOut = 0;\n    if ( Money == 0 ) {\n      Nói(\"Định ăn chịu ak\");\n    } else {\n      IceCreamOut = 4 * Money;\n    }\n    return IceCreamOut;  //trả vể (xuất ra) kem\n}</code></pre>\n\n<p><b>Thủ Tục</b>: đơn giản là hàm mà không có trả về thôi (trả về void) thôi mà. Làm khó nhau hoài.</p>\n\n<p><b>Con trỏ (Pointer)</b>: dự là đây sẽ là thứ hack não ai dùng C++ hay C. Nói nôm na đây là một biến mà nó nằm trong chương trình, chỉ trỏ lung tung. Dễ hiểu hơn đây là cái mặt nạ, bạn muốn nó thể hiện gì, giống cái gì là nó sẽ làm y hệt như vậy<br>VD: Bạn có 2 cuốn sách, bạn ra ngoài và chỉ đem theo 1 cuốn sách ảo. Thì bạn muốn đọc cuốn nào nó hóa thành cuốn ấy cho bạn -&gt; Cuốn sách ảo là con trỏ.<br></p>\n\n<p></p><pre><code class=\"lang-auto\">Fact: Một số ngôn ngữ lập trình hiện đại thường không cho phép sử dụng con\ntrỏ vì nó không bảo mật, nhưng nhờ có con trỏ nên chúng ta mới có OOP ngày nay</code></pre>\n\n<p><b>Một số định nghĩa liên quan: (sẽ giúp ích)</b><br></p>\n\n<p></p><pre><code class=\"lang-auto\">Desktop Development - Lập trình ứng dụng (cho máy tính)\nMobile Development - Lập trình ứng dụng (cho điện thoại)\nSystem Development - Lập trình hệ thống\nEmbedded Development - Lập trình Nhúng\nIDE -  Integrated Development Environment - Môi trường phát triển tích hợp: \n   Đây là thứ giúp ích bạn rất nhiều hơn là ngồi code notepad.\nGUI - Graphical User Interface - Giao diện đồ họa\nConsole - Giao diện dòng lệnh \nPL - Programming Language - Ngôn ngữ lập trình\nFunctional Programming - Lập trình hướng hàm\nObject-Oriented Programming - Lập trình hướng đối tượng</code></pre>\n\n<p>Hôm nay tới đây thôi, nhiều quá loãng mất ^^. Mọi người cho em xin ý kiến nhá. <br><strike>Nếu thấy hay thì đừng quên bấm Like ủng hộ tác giả. Thấy đở thì góp ý.</strike><br>Cảm ơn các bạn.</p>\n","__filename":"posts/22178.md","__url":"/fastest-way-to-learn-basic-of-programming-p2/","__resourceUrl":"/fastest-way-to-learn-basic-of-programming-p2/index.html","__dataUrl":"/fastest-way-to-learn-basic-of-programming-p2/index.html.fd84bf75a78afe4dee42a88324c55ecc.json"}