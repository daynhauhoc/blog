{"head":{"id":2162,"layout":"Post","route":"wiki-sort-co-ban-3-quick-sort-sap-xep-nhanh","title":"[Wiki] Sort cơ bản 3 - Quick Sort - Sắp xếp nhanh","tags":["wiki","algorithm","c++"],"date":"2014-11-30T06:40:14.346Z","author":{"username":"minh_vu_03","avatar":"/user_avatar/daynhauhoc.com/minh_vu_03/{size}/899_1.png"},"description":"http&#x3A;//vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_nhanh\n\nXem video về Quick Sort ở đây\n\nhttps&#x3A;//www.youtube.com/watch?v=COk…"},"body":"<p><a href=\"http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_nhanh\">http://vi.wikipedia.org/wiki/S%E1%BA%AFp<em>x%E1%BA%BFp</em>nhanh</a></p>\n<p>Xem video về Quick Sort ở đây</p>\n<p><a href=\"https://www.youtube.com/watch?v=COk73cpQbFQ\">https://www.youtube.com/watch?v=COk73cpQbFQ</a></p>\n<p>Đây là code</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nvoid swap(int* a,int* b)    {\n    \n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint partition(int* array,int left,int right)    {\n    \n    int node = array[right];\n    int L = left;\n    \n    for(int i = left; i &lt; right; i++)   {\n        \n        if(array[i] &lt;= node)    {\n            \n            swap(&amp;array[i],&amp;array[L]);\n            L++;\n        }\n    }\n    swap(&amp;array[L],&amp;array[right]);\n    \n    return L;\n}\n\nvoid quick_sort(int* array,int left,int right)  {\n    \n    if(left &lt; right)    {\n        \n        int P = partition(array,left,right);\n        quick_sort(array,left,P-1);\n        quick_sort(array,P+1,right);\n    }\n    \n}\n\nint main() {\n    int array[] = { 9,8,7,6,5,4,3,2,1 };\n    int n = sizeof(array)/sizeof(array[0]);\n    \n    quick_sort(array,0,n-1);\n    \n    cout &lt;&lt; n &lt;&lt; endl;\n    \n    for(int i = 0; i &lt; n; i++)  \n        cout &lt;&lt; array[i] &lt;&lt; &quot; &quot;;\n    \n    return 0;\n}\n</code></pre>\n<p>Độ phức tạp:</p>\n<ul>\n<li>Best case: O(n log n)</li>\n<li>Worst case: O(n^2)</li>\n<li>Average: O(n log n)</li>\n</ul>\n","rawBody":"\nhttp://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_nhanh\n\n\nXem video về Quick Sort ở đây\n\nhttps://www.youtube.com/watch?v=COk73cpQbFQ\n\nĐây là code\n```\n#include <iostream>\nusing namespace std;\n\nvoid swap(int* a,int* b)\t{\n\t\n\tint temp = *a;\n\t*a = *b;\n\t*b = temp;\n}\n\nint partition(int* array,int left,int right)\t{\n\t\n\tint node = array[right];\n\tint L = left;\n\t\n\tfor(int i = left; i < right; i++)\t{\n\t\t\n\t\tif(array[i] <= node)\t{\n\t\t\t\n\t\t\tswap(&array[i],&array[L]);\n\t\t\tL++;\n\t\t}\n\t}\n\tswap(&array[L],&array[right]);\n\t\n\treturn L;\n}\n\nvoid quick_sort(int* array,int left,int right)\t{\n\t\n\tif(left < right)\t{\n\t\t\n\t\tint P = partition(array,left,right);\n\t\tquick_sort(array,left,P-1);\n\t\tquick_sort(array,P+1,right);\n\t}\n\t\n}\n\nint main() {\n\tint array[] = { 9,8,7,6,5,4,3,2,1 };\n\tint n = sizeof(array)/sizeof(array[0]);\n\t\n\tquick_sort(array,0,n-1);\n\t\n\tcout << n << endl;\n\t\n\tfor(int i = 0; i < n; i++)\t\n\t\tcout << array[i] << \" \";\n\t\n\treturn 0;\n}\n```\n\nĐộ phức tạp: \n- Best case: O(n log n)\n- Worst case: O(n^2)\n- Average: O(n log n)\n","raw":"---json\n{\"id\":2162,\"layout\":\"Post\",\"route\":\"wiki-sort-co-ban-3-quick-sort-sap-xep-nhanh\",\"title\":\"[Wiki] Sort cơ bản 3 - Quick Sort - Sắp xếp nhanh\",\"tags\":[\"wiki\",\"algorithm\",\"c++\"],\"date\":\"2014-11-30T06:40:14.346Z\",\"author\":{\"username\":\"minh_vu_03\",\"avatar\":\"/user_avatar/daynhauhoc.com/minh_vu_03/{size}/899_1.png\"}}\n---\n\nhttp://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_nhanh\n\n\nXem video về Quick Sort ở đây\n\nhttps://www.youtube.com/watch?v=COk73cpQbFQ\n\nĐây là code\n```\n#include <iostream>\nusing namespace std;\n\nvoid swap(int* a,int* b)\t{\n\t\n\tint temp = *a;\n\t*a = *b;\n\t*b = temp;\n}\n\nint partition(int* array,int left,int right)\t{\n\t\n\tint node = array[right];\n\tint L = left;\n\t\n\tfor(int i = left; i < right; i++)\t{\n\t\t\n\t\tif(array[i] <= node)\t{\n\t\t\t\n\t\t\tswap(&array[i],&array[L]);\n\t\t\tL++;\n\t\t}\n\t}\n\tswap(&array[L],&array[right]);\n\t\n\treturn L;\n}\n\nvoid quick_sort(int* array,int left,int right)\t{\n\t\n\tif(left < right)\t{\n\t\t\n\t\tint P = partition(array,left,right);\n\t\tquick_sort(array,left,P-1);\n\t\tquick_sort(array,P+1,right);\n\t}\n\t\n}\n\nint main() {\n\tint array[] = { 9,8,7,6,5,4,3,2,1 };\n\tint n = sizeof(array)/sizeof(array[0]);\n\t\n\tquick_sort(array,0,n-1);\n\t\n\tcout << n << endl;\n\t\n\tfor(int i = 0; i < n; i++)\t\n\t\tcout << array[i] << \" \";\n\t\n\treturn 0;\n}\n```\n\nĐộ phức tạp: \n- Best case: O(n log n)\n- Worst case: O(n^2)\n- Average: O(n log n)\n","__filename":"posts/2162.md","__url":"/wiki-sort-co-ban-3-quick-sort-sap-xep-nhanh/","__resourceUrl":"/wiki-sort-co-ban-3-quick-sort-sap-xep-nhanh/index.html","__dataUrl":"/wiki-sort-co-ban-3-quick-sort-sap-xep-nhanh/index.html.67a15066ee945a632861ab106df59ede.json"}