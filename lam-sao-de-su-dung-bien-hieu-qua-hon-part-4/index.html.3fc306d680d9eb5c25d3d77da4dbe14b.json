{"head":{"id":7063,"layout":"Post","route":"lam-sao-de-su-dung-bien-hieu-qua-hon-part-4","title":"Làm sao để sử dụng biến hiệu quả hơn (part 4)","tags":["coding-style"],"date":"2015-05-09T09:00:57.925Z","author":{"username":"thanhmssl10","avatar":"/user_avatar/daynhauhoc.com/thanhmssl10/{size}/2345_1.png"},"description":"\\#Làm sao để sử dụng biến hiệu quả hơn  (part 4)\n\nSử dụng một biến với nhiều mục đích đôi khi làm chúng ta có  cảm giác như tiết kiệm được…"},"body":"<p>#Làm sao để sử dụng biến hiệu quả hơn  (part 4)</p>\n<p>Sử dụng một biến với nhiều mục đích đôi khi làm chúng ta có  cảm giác như tiết kiệm được cái gì đó :blush: (mà cũng có thể do lười khai báo thêm biến), ý tưởng đó thì thường vô hại lúc bạn viết code vì bạn biết rõ mình đang làm gì, nhưng nó sẽ rất nguy hiểm  cho bạn khi đọc code sau này, đặc biệt nguy hiểm hơn nữa khi người đọc code là sếp của bạn :smile:</p>\n<p>Đôi khi các biến tạm thời thường được sử dụng ở hai nơi mà lại ở hai hành động khác nhau. Chúng thường được đặt tên kiểu chẳng gợi được điều gì có ích cả ví dụ như <code>x</code>, <code>temp</code>. Và đây là một ví dụ về việc sử dụng biến tạm thời với 2 mục đích:</p>\n<pre><code class=\"hljs language-c\"><span class=\"hljs-comment\">// Compute roots of a quadratic equation.</span>\n<span class=\"hljs-comment\">// This code assumes that (b*b-4*a*c) is positive.</span>\ntemp = Sqrt( b*b - <span class=\"hljs-number\">4</span>*a*c );\nroot[O] = ( -b + temp ) / ( <span class=\"hljs-number\">2</span> * a );\nroot[<span class=\"hljs-number\">1</span>] = ( -b - temp ) / ( <span class=\"hljs-number\">2</span> * a );\n...\n\n<span class=\"hljs-comment\">// swap the roots</span>\ntemp = root[<span class=\"hljs-number\">0</span>];\nroot[<span class=\"hljs-number\">0</span>] = root[<span class=\"hljs-number\">1</span>];\nroot[<span class=\"hljs-number\">1</span>] = temp;</code></pre>\n<p>Hỏi: Có sự liên hệ nào giữa <code>temp</code> ở trên và <code>temp</code> ở dưới hay không? Và câu trả lời là không có sự liên hệ nào cả, sử dụng một biến với hai chức năng làm nó trở nên có vẻ liên quan đến nhau mặc dù không phải vậy. Hãy tạo sự độc nhất cho các biến với mỗi mục đích cụ thể, điều đó sẽ giúp code của bạn dễ đọc hiểu hơn. Đây là cách cải thiện:</p>\n<pre><code class=\"hljs language-c\"><span class=\"hljs-comment\">// Compute roots of a quadratic equation.</span>\n<span class=\"hljs-comment\">// This code assumes that (b*b-4*a*c) is positive.</span>\ndiscriminant = Sqrt( b*b - <span class=\"hljs-number\">4</span>*a*c );\nroot[<span class=\"hljs-number\">0</span>] = ( -b + discriminant ) / ( <span class=\"hljs-number\">2</span> * a );\nroot[<span class=\"hljs-number\">1</span>] = ( -b - discriminant ) / ( <span class=\"hljs-number\">2</span> * a );\n...\n\n<span class=\"hljs-comment\">// swap the roots</span>\noldRoot = root[<span class=\"hljs-number\">0</span>];\nroot[<span class=\"hljs-number\">0</span>] = root[<span class=\"hljs-number\">1</span>];\nroot[<span class=\"hljs-number\">1</span>] = oldRoot;</code></pre>\n<p>Tránh dùng những biến có &quot;tác dụng phụ&quot; kiểu như sử dụng các giá trị khác nhau của 1 biến để đảm nhận các chức năng khác nhau. Ví dụ:</p>\n<ul>\n<li>\n<p>Giá trị trong biến pageCount nói về số trang đã in xong, trừ khi nó = -1, trong trường hợp này thì quá trình in có lỗi.</p>\n</li>\n<li>\n<p>Giá trị của biến customerId có thể nói về số khách hàng, trừ khi giá trị của nó lớn hơn 500,000, trong trường hợp này bạn trừ 500,00 để tìm ra số tài khoản có vấn đề.</p>\n</li>\n<li>\n<p>Giá trị của bytesWritte là số byte đã xuất ra file, trừ khi con số đó âm, trong trường hợp này thì nó cho biết cả số đĩa đã được sử dụng trong việc xuất ra.</p>\n</li>\n</ul>\n<p><strong>Nên là:</strong></p>\n<div align=center><img src=\"/uploads/default/3040/a391f5a3fdf7ec64.png\" width=\"460\" height=\"500\"> </div>\n<hr>\n<p>Bài viết có tham khảo một số nội dung trong cuốn Code Complete và các tài liệu khác :blush:</p>\n<hr>\n<p>Part 1: <a href=\"http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part1/6921\">http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part1/6921</a>\nPart 2: <a href=\"http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part2/6936\">http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part2/6936</a>\nPart 3: <a href=\"http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part3/6992\">http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part3/6992</a></p>\n","rawBody":"\n#Làm sao để sử dụng biến hiệu quả hơn  (part 4)\n\nSử dụng một biến với nhiều mục đích đôi khi làm chúng ta có  cảm giác như tiết kiệm được cái gì đó :blush: (mà cũng có thể do lười khai báo thêm biến), ý tưởng đó thì thường vô hại lúc bạn viết code vì bạn biết rõ mình đang làm gì, nhưng nó sẽ rất nguy hiểm  cho bạn khi đọc code sau này, đặc biệt nguy hiểm hơn nữa khi người đọc code là sếp của bạn :smile: \n\nĐôi khi các biến tạm thời thường được sử dụng ở hai nơi mà lại ở hai hành động khác nhau. Chúng thường được đặt tên kiểu chẳng gợi được điều gì có ích cả ví dụ như `x`, `temp`. Và đây là một ví dụ về việc sử dụng biến tạm thời với 2 mục đích:\n\n```c\n// Compute roots of a quadratic equation.\n// This code assumes that (b*b-4*a*c) is positive.\ntemp = Sqrt( b*b - 4*a*c );\nroot[O] = ( -b + temp ) / ( 2 * a );\nroot[1] = ( -b - temp ) / ( 2 * a );\n...\n\n// swap the roots\ntemp = root[0];\nroot[0] = root[1];\nroot[1] = temp;\n```\n\nHỏi: Có sự liên hệ nào giữa `temp` ở trên và `temp` ở dưới hay không? Và câu trả lời là không có sự liên hệ nào cả, sử dụng một biến với hai chức năng làm nó trở nên có vẻ liên quan đến nhau mặc dù không phải vậy. Hãy tạo sự độc nhất cho các biến với mỗi mục đích cụ thể, điều đó sẽ giúp code của bạn dễ đọc hiểu hơn. Đây là cách cải thiện:\n\n\n```c\n\n// Compute roots of a quadratic equation.\n// This code assumes that (b*b-4*a*c) is positive.\ndiscriminant = Sqrt( b*b - 4*a*c );\nroot[0] = ( -b + discriminant ) / ( 2 * a );\nroot[1] = ( -b - discriminant ) / ( 2 * a );\n...\n\n// swap the roots\noldRoot = root[0];\nroot[0] = root[1];\nroot[1] = oldRoot;\n```\nTránh dùng những biến có \"tác dụng phụ\" kiểu như sử dụng các giá trị khác nhau của 1 biến để đảm nhận các chức năng khác nhau. Ví dụ:\n\n- Giá trị trong biến pageCount nói về số trang đã in xong, trừ khi nó = -1, trong trường hợp này thì quá trình in có lỗi.\n\n-  Giá trị của biến customerId có thể nói về số khách hàng, trừ khi giá trị của nó lớn hơn 500,000, trong trường hợp này bạn trừ 500,00 để tìm ra số tài khoản có vấn đề.\n\n- Giá trị của bytesWritte là số byte đã xuất ra file, trừ khi con số đó âm, trong trường hợp này thì nó cho biết cả số đĩa đã được sử dụng trong việc xuất ra.\n\n**Nên là:**\n<div align=center><img src=\"/uploads/default/3040/a391f5a3fdf7ec64.png\" width=\"460\" height=\"500\"> </div>\n\n----------\nBài viết có tham khảo một số nội dung trong cuốn Code Complete và các tài liệu khác :blush:\n\n------------\nPart 1: http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part1/6921\nPart 2: http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part2/6936\nPart 3: http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part3/6992\n","raw":"---json\n{\"id\":7063,\"layout\":\"Post\",\"route\":\"lam-sao-de-su-dung-bien-hieu-qua-hon-part-4\",\"title\":\"Làm sao để sử dụng biến hiệu quả hơn (part 4)\",\"tags\":[\"coding-style\"],\"date\":\"2015-05-09T09:00:57.925Z\",\"author\":{\"username\":\"thanhmssl10\",\"avatar\":\"/user_avatar/daynhauhoc.com/thanhmssl10/{size}/2345_1.png\"}}\n---\n\n#Làm sao để sử dụng biến hiệu quả hơn  (part 4)\n\nSử dụng một biến với nhiều mục đích đôi khi làm chúng ta có  cảm giác như tiết kiệm được cái gì đó :blush: (mà cũng có thể do lười khai báo thêm biến), ý tưởng đó thì thường vô hại lúc bạn viết code vì bạn biết rõ mình đang làm gì, nhưng nó sẽ rất nguy hiểm  cho bạn khi đọc code sau này, đặc biệt nguy hiểm hơn nữa khi người đọc code là sếp của bạn :smile: \n\nĐôi khi các biến tạm thời thường được sử dụng ở hai nơi mà lại ở hai hành động khác nhau. Chúng thường được đặt tên kiểu chẳng gợi được điều gì có ích cả ví dụ như `x`, `temp`. Và đây là một ví dụ về việc sử dụng biến tạm thời với 2 mục đích:\n\n```c\n// Compute roots of a quadratic equation.\n// This code assumes that (b*b-4*a*c) is positive.\ntemp = Sqrt( b*b - 4*a*c );\nroot[O] = ( -b + temp ) / ( 2 * a );\nroot[1] = ( -b - temp ) / ( 2 * a );\n...\n\n// swap the roots\ntemp = root[0];\nroot[0] = root[1];\nroot[1] = temp;\n```\n\nHỏi: Có sự liên hệ nào giữa `temp` ở trên và `temp` ở dưới hay không? Và câu trả lời là không có sự liên hệ nào cả, sử dụng một biến với hai chức năng làm nó trở nên có vẻ liên quan đến nhau mặc dù không phải vậy. Hãy tạo sự độc nhất cho các biến với mỗi mục đích cụ thể, điều đó sẽ giúp code của bạn dễ đọc hiểu hơn. Đây là cách cải thiện:\n\n\n```c\n\n// Compute roots of a quadratic equation.\n// This code assumes that (b*b-4*a*c) is positive.\ndiscriminant = Sqrt( b*b - 4*a*c );\nroot[0] = ( -b + discriminant ) / ( 2 * a );\nroot[1] = ( -b - discriminant ) / ( 2 * a );\n...\n\n// swap the roots\noldRoot = root[0];\nroot[0] = root[1];\nroot[1] = oldRoot;\n```\nTránh dùng những biến có \"tác dụng phụ\" kiểu như sử dụng các giá trị khác nhau của 1 biến để đảm nhận các chức năng khác nhau. Ví dụ:\n\n- Giá trị trong biến pageCount nói về số trang đã in xong, trừ khi nó = -1, trong trường hợp này thì quá trình in có lỗi.\n\n-  Giá trị của biến customerId có thể nói về số khách hàng, trừ khi giá trị của nó lớn hơn 500,000, trong trường hợp này bạn trừ 500,00 để tìm ra số tài khoản có vấn đề.\n\n- Giá trị của bytesWritte là số byte đã xuất ra file, trừ khi con số đó âm, trong trường hợp này thì nó cho biết cả số đĩa đã được sử dụng trong việc xuất ra.\n\n**Nên là:**\n<div align=center><img src=\"/uploads/default/3040/a391f5a3fdf7ec64.png\" width=\"460\" height=\"500\"> </div>\n\n----------\nBài viết có tham khảo một số nội dung trong cuốn Code Complete và các tài liệu khác :blush:\n\n------------\nPart 1: http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part1/6921\nPart 2: http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part2/6936\nPart 3: http://daynhauhoc.com/t/lam-sao-de-su-dung-bien-hieu-qua-hon-part3/6992\n","__filename":"posts/7063.md","__url":"/lam-sao-de-su-dung-bien-hieu-qua-hon-part-4/","__resourceUrl":"/lam-sao-de-su-dung-bien-hieu-qua-hon-part-4/index.html","__dataUrl":"/lam-sao-de-su-dung-bien-hieu-qua-hon-part-4/index.html.3fc306d680d9eb5c25d3d77da4dbe14b.json"}