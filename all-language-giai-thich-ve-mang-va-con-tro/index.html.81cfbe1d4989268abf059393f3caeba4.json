{"head":{"id":19430,"layout":"Post","route":"all-language-giai-thich-ve-mang-va-con-tro","title":"[All Language] Giải thích về mảng và con trỏ","tags":null,"date":"2016-01-10T09:25:05.175Z","views":812,"likes":18,"description":"Chào các bạn !Mình thấy có nhiều bạn đang không rõ về vấn đề này. Là một tay ngang, mình sẽ giải thích những gì mình biết về nó. Hy vọng…","author":{"name":"Văn Dương","avatar":"/letter_avatar_proxy/v2/letter/d/41988e/{size}.png","username":"Duong_Act"}},"body":"\n<p>Chào các bạn !<br>Mình thấy có nhiều bạn đang không rõ về vấn đề này. Là một tay ngang, mình sẽ giải thích những gì mình biết về nó. Hy vọng giúp ích các bạn. Nếu có thiếu sót hay sai, các bạn chia sẻ thêm.<br>Lets go !</p>\n\n<ol>\n<li><p>Việc đầu tiên các bạn nên hiểu về cách máy tính lưu dữ liệu trên RAM. <br>Bộ nhớ RAM của máy tính được cấu tạo từ rất nhiều ô nhớ. Mỗi ô nhớ này lưu được 8bit dữ liệu, tức là 1 byte. bộ nhớ RAM 1G sẽ có 1 tỷ ô nhớ này. Vị trí các ô nhớ hoàn toàn xác định và cố định và được phân biệt, truy xuất thông qua <strong>địa chỉ</strong> của nó.</p></li>\n<li>\n<p>Mảng.<br>Mảng là một số biến cùng loại được sắp xếp cạnh nhau liên tục trên bộ nhớ RAM. Các phần tử trong mảng sẽ được phân biệt với nhau bởi chỉ số của phần tử đó.<br>Khi ta khai báo 1 mảng : <br></p>\n<p></p>\n<pre><code>unsigned int arr[n];</code></pre>\n</li>\n<li>\n<p>Con trỏ.<br>Khi nói về con trỏ thường chúng ta cảm thấy nó hư hư thực thực. Vậy nó là gì ?<br>Nó là biến lưu địa chỉ của ô nhớ trên RAM. Khi chúng ta có được địa chỉ của một ô nhớ chúng ta sẽ làm việc được với dữ liệu của ô nhớ đó.<br>Khi chúng ta khai báo : <br></p>\n<p></p>\n<pre><code>unsigned int *ptr = new unsigned int[n];</code></pre>\n</li>\n<li>\n<p>Điểm khác biệt của con trỏ và mảng.<br>Mảng : Được cấp phát trên vùng RAM chưa sử dụng, số phần tử cố định, địa chỉ trên RAM cố định (trừ khi khai báo mảng mới), không được phép truy xuất ngoài phạm vi mảng.<br>Khi chúng ta khai báo mảng 10 phần tử, chúng ta chỉ truy xuất được trong phạm vi đó, tức là từ phần tử 0 đến 9. Ngoài khoảng này, chương trình báo lỗi out of index. <br>Con trỏ : Có thể trỏ tới bất kì vị trí nào trên RAM, không có phần tử, địa chỉ trên RAM cố định, địa chỉ trỏ tới có thể thay đổi sau khi khai báo.<br>Chúng ta có thể thay đổi địa chỉ mà con trỏ đang trỏ tới một cách dễ dàng như sau :<br></p>\n<p></p>\n<pre><code>unsigned int Arr1[n];\nunsigned char Arr[m];\nunsigned int *ptr = &amp;Arr1[0]; // con trỏ đang trỏ tới Arr1[0]\nptr=(unsigned char*)&amp;Arr2[0]; // lúc này nó lại trỏ tới Arr2[0];\nptr=1234; // lúc này nó lại trỏ tới ô nhớ có địa chỉ 1234 trên RAM.</code></pre>\n</li>\n<li><p>Chú ý khi dùng con trỏ. <br>Mặc dù con trỏ có nhiều ưu điểm như ta có thể trỏ tới địa chỉ bất kì trên RAM và làm việc với dữ liệu có địa chỉ được trỏ tới (khi hack game chẳng hạn là ta phải dùng con trỏ để trỏ tới vùng dữ liệu của game) hoặc trong một số trường hợp chúng ta sẽ có được tốc độ cao hơn trong xử lý nhưng bạn sẽ thấy một số ngôn ngữ không cho dùng con trỏ và sẽ báo unsafe - không an toàn. Vậy tại sao ?<br>Do con trỏ có thể trỏ tới bất kì chỗ nào trên RAM nên nó có thể thay đổi dữ liệu của chương trình khác và gây cho máy tính làm việc không bình thường.<br>-&gt; Con trỏ là nguy hiểm nếu không kiểm soát được.</p></li>\n</ol>\n\n<p>____ End ____</p>\n","rawBody":"\n<p>Chào các bạn !<br>Mình thấy có nhiều bạn đang không rõ về vấn đề này. Là một tay ngang, mình sẽ giải thích những gì mình biết về nó. Hy vọng giúp ích các bạn. Nếu có thiếu sót hay sai, các bạn chia sẻ thêm.<br>Lets go !</p>\n\n<ol>\n<li><p>Việc đầu tiên các bạn nên hiểu về cách máy tính lưu dữ liệu trên RAM. <br>Bộ nhớ RAM của máy tính được cấu tạo từ rất nhiều ô nhớ. Mỗi ô nhớ này lưu được 8bit dữ liệu, tức là 1 byte. bộ nhớ RAM 1G sẽ có 1 tỷ ô nhớ này. Vị trí các ô nhớ hoàn toàn xác định và cố định và được phân biệt, truy xuất thông qua <strong>địa chỉ</strong> của nó.</p></li>\n<li>\n<p>Mảng.<br>Mảng là một số biến cùng loại được sắp xếp cạnh nhau liên tục trên bộ nhớ RAM. Các phần tử trong mảng sẽ được phân biệt với nhau bởi chỉ số của phần tử đó.<br>Khi ta khai báo 1 mảng : <br></p>\n<p></p>\n<pre><code>unsigned int arr[n];</code></pre>\n</li>\n<li>\n<p>Con trỏ.<br>Khi nói về con trỏ thường chúng ta cảm thấy nó hư hư thực thực. Vậy nó là gì ?<br>Nó là biến lưu địa chỉ của ô nhớ trên RAM. Khi chúng ta có được địa chỉ của một ô nhớ chúng ta sẽ làm việc được với dữ liệu của ô nhớ đó.<br>Khi chúng ta khai báo : <br></p>\n<p></p>\n<pre><code>unsigned int *ptr = new unsigned int[n];</code></pre>\n</li>\n<li>\n<p>Điểm khác biệt của con trỏ và mảng.<br>Mảng : Được cấp phát trên vùng RAM chưa sử dụng, số phần tử cố định, địa chỉ trên RAM cố định (trừ khi khai báo mảng mới), không được phép truy xuất ngoài phạm vi mảng.<br>Khi chúng ta khai báo mảng 10 phần tử, chúng ta chỉ truy xuất được trong phạm vi đó, tức là từ phần tử 0 đến 9. Ngoài khoảng này, chương trình báo lỗi out of index. <br>Con trỏ : Có thể trỏ tới bất kì vị trí nào trên RAM, không có phần tử, địa chỉ trên RAM cố định, địa chỉ trỏ tới có thể thay đổi sau khi khai báo.<br>Chúng ta có thể thay đổi địa chỉ mà con trỏ đang trỏ tới một cách dễ dàng như sau :<br></p>\n<p></p>\n<pre><code>unsigned int Arr1[n];\nunsigned char Arr[m];\nunsigned int *ptr = &amp;Arr1[0]; // con trỏ đang trỏ tới Arr1[0]\nptr=(unsigned char*)&amp;Arr2[0]; // lúc này nó lại trỏ tới Arr2[0];\nptr=1234; // lúc này nó lại trỏ tới ô nhớ có địa chỉ 1234 trên RAM.</code></pre>\n</li>\n<li><p>Chú ý khi dùng con trỏ. <br>Mặc dù con trỏ có nhiều ưu điểm như ta có thể trỏ tới địa chỉ bất kì trên RAM và làm việc với dữ liệu có địa chỉ được trỏ tới (khi hack game chẳng hạn là ta phải dùng con trỏ để trỏ tới vùng dữ liệu của game) hoặc trong một số trường hợp chúng ta sẽ có được tốc độ cao hơn trong xử lý nhưng bạn sẽ thấy một số ngôn ngữ không cho dùng con trỏ và sẽ báo unsafe - không an toàn. Vậy tại sao ?<br>Do con trỏ có thể trỏ tới bất kì chỗ nào trên RAM nên nó có thể thay đổi dữ liệu của chương trình khác và gây cho máy tính làm việc không bình thường.<br>-&gt; Con trỏ là nguy hiểm nếu không kiểm soát được.</p></li>\n</ol>\n\n<p>____ End ____</p>\n","raw":"---json\n{\"id\":19430,\"layout\":\"Post\",\"route\":\"all-language-giai-thich-ve-mang-va-con-tro\",\"title\":\"[All Language] Giải thích về mảng và con trỏ\",\"tags\":null,\"date\":\"2016-01-10T09:25:05.175Z\",\"views\":812,\"likes\":18,\"description\":\"Chào các bạn !Mình thấy có nhiều bạn đang không rõ về vấn đề này. Là một tay ngang, mình sẽ giải thích những gì mình biết về nó. Hy vọng…\",\"author\":{\"name\":\"Văn Dương\",\"avatar\":\"/letter_avatar_proxy/v2/letter/d/41988e/{size}.png\",\"username\":\"Duong_Act\"}}\n---\n\n<p>Chào các bạn !<br>Mình thấy có nhiều bạn đang không rõ về vấn đề này. Là một tay ngang, mình sẽ giải thích những gì mình biết về nó. Hy vọng giúp ích các bạn. Nếu có thiếu sót hay sai, các bạn chia sẻ thêm.<br>Lets go !</p>\n\n<ol>\n<li><p>Việc đầu tiên các bạn nên hiểu về cách máy tính lưu dữ liệu trên RAM. <br>Bộ nhớ RAM của máy tính được cấu tạo từ rất nhiều ô nhớ. Mỗi ô nhớ này lưu được 8bit dữ liệu, tức là 1 byte. bộ nhớ RAM 1G sẽ có 1 tỷ ô nhớ này. Vị trí các ô nhớ hoàn toàn xác định và cố định và được phân biệt, truy xuất thông qua <strong>địa chỉ</strong> của nó.</p></li>\n<li>\n<p>Mảng.<br>Mảng là một số biến cùng loại được sắp xếp cạnh nhau liên tục trên bộ nhớ RAM. Các phần tử trong mảng sẽ được phân biệt với nhau bởi chỉ số của phần tử đó.<br>Khi ta khai báo 1 mảng : <br></p>\n<p></p>\n<pre><code>unsigned int arr[n];</code></pre>\n</li>\n<li>\n<p>Con trỏ.<br>Khi nói về con trỏ thường chúng ta cảm thấy nó hư hư thực thực. Vậy nó là gì ?<br>Nó là biến lưu địa chỉ của ô nhớ trên RAM. Khi chúng ta có được địa chỉ của một ô nhớ chúng ta sẽ làm việc được với dữ liệu của ô nhớ đó.<br>Khi chúng ta khai báo : <br></p>\n<p></p>\n<pre><code>unsigned int *ptr = new unsigned int[n];</code></pre>\n</li>\n<li>\n<p>Điểm khác biệt của con trỏ và mảng.<br>Mảng : Được cấp phát trên vùng RAM chưa sử dụng, số phần tử cố định, địa chỉ trên RAM cố định (trừ khi khai báo mảng mới), không được phép truy xuất ngoài phạm vi mảng.<br>Khi chúng ta khai báo mảng 10 phần tử, chúng ta chỉ truy xuất được trong phạm vi đó, tức là từ phần tử 0 đến 9. Ngoài khoảng này, chương trình báo lỗi out of index. <br>Con trỏ : Có thể trỏ tới bất kì vị trí nào trên RAM, không có phần tử, địa chỉ trên RAM cố định, địa chỉ trỏ tới có thể thay đổi sau khi khai báo.<br>Chúng ta có thể thay đổi địa chỉ mà con trỏ đang trỏ tới một cách dễ dàng như sau :<br></p>\n<p></p>\n<pre><code>unsigned int Arr1[n];\nunsigned char Arr[m];\nunsigned int *ptr = &amp;Arr1[0]; // con trỏ đang trỏ tới Arr1[0]\nptr=(unsigned char*)&amp;Arr2[0]; // lúc này nó lại trỏ tới Arr2[0];\nptr=1234; // lúc này nó lại trỏ tới ô nhớ có địa chỉ 1234 trên RAM.</code></pre>\n</li>\n<li><p>Chú ý khi dùng con trỏ. <br>Mặc dù con trỏ có nhiều ưu điểm như ta có thể trỏ tới địa chỉ bất kì trên RAM và làm việc với dữ liệu có địa chỉ được trỏ tới (khi hack game chẳng hạn là ta phải dùng con trỏ để trỏ tới vùng dữ liệu của game) hoặc trong một số trường hợp chúng ta sẽ có được tốc độ cao hơn trong xử lý nhưng bạn sẽ thấy một số ngôn ngữ không cho dùng con trỏ và sẽ báo unsafe - không an toàn. Vậy tại sao ?<br>Do con trỏ có thể trỏ tới bất kì chỗ nào trên RAM nên nó có thể thay đổi dữ liệu của chương trình khác và gây cho máy tính làm việc không bình thường.<br>-&gt; Con trỏ là nguy hiểm nếu không kiểm soát được.</p></li>\n</ol>\n\n<p>____ End ____</p>\n","__filename":"posts/19430.md","__url":"/all-language-giai-thich-ve-mang-va-con-tro/","__resourceUrl":"/all-language-giai-thich-ve-mang-va-con-tro/index.html","__dataUrl":"/all-language-giai-thich-ve-mang-va-con-tro/index.html.81cfbe1d4989268abf059393f3caeba4.json"}