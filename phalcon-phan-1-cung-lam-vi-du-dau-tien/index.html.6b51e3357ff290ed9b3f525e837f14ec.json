{"head":{"id":9220,"layout":"Post","route":"phalcon-phan-1-cung-lam-vi-du-dau-tien","title":"[Phalcon] Phần 1: Cùng làm ví dụ đầu tiên","tags":["phalcon"],"date":"2015-07-08T12:07:13.766Z","views":623,"likes":10,"description":"Phalcon không bắt buộc phải tạo cấu trúc theo quy định, nhưng để đơn giản ta  hãy tạo theo cấu trúc sau.\n\ntutorial/\n  app/\n    controllers…","author":{"name":"Hoa Hoa","avatar":"/letter_avatar_proxy/v2/letter/h/6bbea6/{size}.png","username":"Hoa_Hoa"}},"body":"\n<p>Phalcon không bắt buộc phải tạo cấu trúc theo quy định, nhưng để đơn giản ta  hãy tạo theo cấu trúc sau.</p>\n\n<pre><code>tutorial/\n  app/\n    controllers/\n    models/\n    views/\n  public/\n    css/\n    img/\n    js/</code></pre>\n\n<p><strong>Beautiful URLs</strong><br>Nghĩa là các url đẹp. VD: <a href=\"https://www.thegioididong.com/\" rel=\"nofollow\">https://www.thegioididong.com/</a>, ......Khi chúng ta chạy project thì chỉ cần chạy tên project là nó sẽ hiện ra trang web. Cụ thể trong ví dụ này là tutorial. Điều này rất có lợi trong việc SEO.</p>\n\n<p>Chúng ta sẽ tạo file <code>.htaccess</code> theo thư mục <code>/tutorial/.htaccess</code></p>\n\n<pre><code>#/tutorial/.htaccess\n&lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine on\n    RewriteRule  ^$ public/    [L]\n    RewriteRule  (.*) public/$1 [L]\n&lt;/IfModule&gt;</code></pre>\n\n<p>và <code>/tutorial/public/.htaccess</code></p>\n\n<pre><code>#/tutorial/public/.htaccess\n&lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine On\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^(.*)$ index.php?_url=/$1 [QSA,L]\n&lt;/IfModule&gt;</code></pre>\n\n<p>Để hiểu file <code>.htaccess</code> là gì thì tham khảo thêm tại: <a href=\"http://freetuts.net/file-htaccess-la-gi-76.html\" rel=\"nofollow\">http://freetuts.net/file-htaccess-la-gi-76.html</a></p>\n\n<p><strong>Chú ý:</strong> Vì trong windows không cho phép ta tạo file mà không có tên phía trước. Vì thế có 1 cách đó là tạo 1 file <code>.php</code>, sau đó viết đoạn code:</p>\n\n<pre><code>&lt;?php fopen(\".htaccess\", \"w\"); ?&gt;</code></pre>\n\n<p>Cuối cùng chạy file này lên thì nó sẽ tạo ra file <code>.htaccess</code>, sau đó ta edit nó và gõ đoạn code như trên.</p>\n\n<p><strong>Bootstrap</strong><br>Đây không phải là thư viện bootstrap để tạo giao diện, mà ở đây là file khi trang web chạy, nó sẽ chạy file này đầu tiên. Nó rất quan trọng. Tạo file theo đường dẫn <code>tutorial/public/index.php</code> </p>\n\n<pre><code>&lt;?php\n    use Phalcon\\Loader;\n    use Phalcon\\Mvc\\View;\n    use Phalcon\\Mvc\\Application;\n    use Phalcon\\DI\\FactoryDefault;\n    use Phalcon\\Mvc\\Url as UrlProvider;\n    use Phalcon\\Db\\Adapter\\Pdo\\Mysql as DbAdapter;\n    \n    try {\n    \n        // Register an autoloader\n        $loader = new Loader();\n        $loader-&gt;registerDirs(array(\n            '../app/controllers/',\n            '../app/models/'\n        ))-&gt;register();\n    \n        // Create a DI\n        $di = new FactoryDefault();\n    \n        // Setup the view component\n        $di-&gt;set('view', function(){\n            $view = new View();\n            $view-&gt;setViewsDir('../app/views/');\n            return $view;\n        });\n    \n        // Setup a base URI so that all generated URIs include the \"tutorial\" folder\n        $di-&gt;set('url', function(){\n            $url = new UrlProvider();\n            $url-&gt;setBaseUri('/tutorial/');\n            return $url;\n        });\n    \n        // Handle the request\n        $application = new Application($di);\n    \n        echo $application-&gt;handle()-&gt;getContent();\n    \n    } catch (\\Exception $e) {\n         echo \"PhalconException: \", $e-&gt;getMessage();\n    }\n?&gt;</code></pre>\n\n<p>Chúng ta sẽ phân tích đoạn code này:</p>\n\n<p><strong>Autoloaders</strong><br>Khi chạy đoạn code này, nó sẽ load class controllers và models trong project. Ngoài ra có thể đăng ký load nhiều hơn. Để dùng chúng ta dùng <code>Phalcon\\Loader</code></p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Loader;\n\n// ...\n\n$loader = new Loader();\n$loader-&gt;registerDirs(\n    array(\n        '../app/controllers/',\n        '../app/models/'\n    )\n)-&gt;register();</code></pre>\n\n<p><strong>Dependency Management</strong><br>Đây là một khái niệm rất quan trọng khi sử dụng Phalcon. Nó giống như một cái túi lớn chứa những service khác mà chương trình sẽ sử dụng. Phalcon là một framework có tính phân chia cao, nhưng nó sẽ gộp chúng lại để sử dụng.</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\DI\\FactoryDefault;\n\n// ...\n\n// Create a DI\n$di = new FactoryDefault();</code></pre>\n\n<p>Ở đây chúng ta đăng ký service View. View khác với Model và Controller, nó không phải là class nên không thể đăng ký autoloader. Vì thế ta đăng ký trong DI.</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\View;\n\n// ...\n\n// Setup the view component\n$di-&gt;set('view', function() {\n    $view = new View();\n    $view-&gt;setViewsDir('../app/views/');\n    return $view;\n});</code></pre>\n\n<p>Tiếp theo là URI</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Url as UrlProvider;\n\n// ...\n\n// Setup a base URI so that all generated URIs include the \"tutorial\" folder\n$di-&gt;set('url', function(){\n    $url = new UrlProvider();\n    $url-&gt;setBaseUri('/tutorial/');\n    return $url;\n});</code></pre>\n\n<p>Cuối cùng là:</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Application;\n\n// ...\n\n$application = new Application($di);\n\necho $application-&gt;handle()-&gt;getContent();</code></pre>\n\n<p>ta có thể hiểu đây là dòng để buid chạy chương trình.</p>\n\n<p><strong>Creating a Controller</strong><br>Controller khi được đặt tên là Index thì nó sẽ là file đầu tiên khi không có controller hoặc action nào được yêu cầu. Tạo file controller theo <code>app/controllers/IndexController.php</code></p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Controller;\n\nclass IndexController extends Controller\n{\n\n    public function indexAction()\n    {\n        echo \"&lt;h1&gt;Hello!&lt;/h1&gt;\";\n    }\n}</code></pre>\n\n<p>Bây giờ bạn mở XAMPP lên và chạy thử project xem thế nào. Đường dẫn là <a href=\"http://localhost/tutorial/\" rel=\"nofollow\">http://localhost/tutorial/</a> .<br>Kết quả:<br><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/8/80fbd01045ec66ac9b970152bc9173fc9495c772.png\" width=\"577\" height=\"319\"> </p>\n\n<p>Vậy là bạn đã làm xong một ví dụ nhỏ bằng Phalcon. <br>(<em>còn tiếp</em>)</p>\n","rawBody":"\n<p>Phalcon không bắt buộc phải tạo cấu trúc theo quy định, nhưng để đơn giản ta  hãy tạo theo cấu trúc sau.</p>\n\n<pre><code>tutorial/\n  app/\n    controllers/\n    models/\n    views/\n  public/\n    css/\n    img/\n    js/</code></pre>\n\n<p><strong>Beautiful URLs</strong><br>Nghĩa là các url đẹp. VD: <a href=\"https://www.thegioididong.com/\" rel=\"nofollow\">https://www.thegioididong.com/</a>, ......Khi chúng ta chạy project thì chỉ cần chạy tên project là nó sẽ hiện ra trang web. Cụ thể trong ví dụ này là tutorial. Điều này rất có lợi trong việc SEO.</p>\n\n<p>Chúng ta sẽ tạo file <code>.htaccess</code> theo thư mục <code>/tutorial/.htaccess</code></p>\n\n<pre><code>#/tutorial/.htaccess\n&lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine on\n    RewriteRule  ^$ public/    [L]\n    RewriteRule  (.*) public/$1 [L]\n&lt;/IfModule&gt;</code></pre>\n\n<p>và <code>/tutorial/public/.htaccess</code></p>\n\n<pre><code>#/tutorial/public/.htaccess\n&lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine On\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^(.*)$ index.php?_url=/$1 [QSA,L]\n&lt;/IfModule&gt;</code></pre>\n\n<p>Để hiểu file <code>.htaccess</code> là gì thì tham khảo thêm tại: <a href=\"http://freetuts.net/file-htaccess-la-gi-76.html\" rel=\"nofollow\">http://freetuts.net/file-htaccess-la-gi-76.html</a></p>\n\n<p><strong>Chú ý:</strong> Vì trong windows không cho phép ta tạo file mà không có tên phía trước. Vì thế có 1 cách đó là tạo 1 file <code>.php</code>, sau đó viết đoạn code:</p>\n\n<pre><code>&lt;?php fopen(\".htaccess\", \"w\"); ?&gt;</code></pre>\n\n<p>Cuối cùng chạy file này lên thì nó sẽ tạo ra file <code>.htaccess</code>, sau đó ta edit nó và gõ đoạn code như trên.</p>\n\n<p><strong>Bootstrap</strong><br>Đây không phải là thư viện bootstrap để tạo giao diện, mà ở đây là file khi trang web chạy, nó sẽ chạy file này đầu tiên. Nó rất quan trọng. Tạo file theo đường dẫn <code>tutorial/public/index.php</code> </p>\n\n<pre><code>&lt;?php\n    use Phalcon\\Loader;\n    use Phalcon\\Mvc\\View;\n    use Phalcon\\Mvc\\Application;\n    use Phalcon\\DI\\FactoryDefault;\n    use Phalcon\\Mvc\\Url as UrlProvider;\n    use Phalcon\\Db\\Adapter\\Pdo\\Mysql as DbAdapter;\n    \n    try {\n    \n        // Register an autoloader\n        $loader = new Loader();\n        $loader-&gt;registerDirs(array(\n            '../app/controllers/',\n            '../app/models/'\n        ))-&gt;register();\n    \n        // Create a DI\n        $di = new FactoryDefault();\n    \n        // Setup the view component\n        $di-&gt;set('view', function(){\n            $view = new View();\n            $view-&gt;setViewsDir('../app/views/');\n            return $view;\n        });\n    \n        // Setup a base URI so that all generated URIs include the \"tutorial\" folder\n        $di-&gt;set('url', function(){\n            $url = new UrlProvider();\n            $url-&gt;setBaseUri('/tutorial/');\n            return $url;\n        });\n    \n        // Handle the request\n        $application = new Application($di);\n    \n        echo $application-&gt;handle()-&gt;getContent();\n    \n    } catch (\\Exception $e) {\n         echo \"PhalconException: \", $e-&gt;getMessage();\n    }\n?&gt;</code></pre>\n\n<p>Chúng ta sẽ phân tích đoạn code này:</p>\n\n<p><strong>Autoloaders</strong><br>Khi chạy đoạn code này, nó sẽ load class controllers và models trong project. Ngoài ra có thể đăng ký load nhiều hơn. Để dùng chúng ta dùng <code>Phalcon\\Loader</code></p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Loader;\n\n// ...\n\n$loader = new Loader();\n$loader-&gt;registerDirs(\n    array(\n        '../app/controllers/',\n        '../app/models/'\n    )\n)-&gt;register();</code></pre>\n\n<p><strong>Dependency Management</strong><br>Đây là một khái niệm rất quan trọng khi sử dụng Phalcon. Nó giống như một cái túi lớn chứa những service khác mà chương trình sẽ sử dụng. Phalcon là một framework có tính phân chia cao, nhưng nó sẽ gộp chúng lại để sử dụng.</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\DI\\FactoryDefault;\n\n// ...\n\n// Create a DI\n$di = new FactoryDefault();</code></pre>\n\n<p>Ở đây chúng ta đăng ký service View. View khác với Model và Controller, nó không phải là class nên không thể đăng ký autoloader. Vì thế ta đăng ký trong DI.</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\View;\n\n// ...\n\n// Setup the view component\n$di-&gt;set('view', function() {\n    $view = new View();\n    $view-&gt;setViewsDir('../app/views/');\n    return $view;\n});</code></pre>\n\n<p>Tiếp theo là URI</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Url as UrlProvider;\n\n// ...\n\n// Setup a base URI so that all generated URIs include the \"tutorial\" folder\n$di-&gt;set('url', function(){\n    $url = new UrlProvider();\n    $url-&gt;setBaseUri('/tutorial/');\n    return $url;\n});</code></pre>\n\n<p>Cuối cùng là:</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Application;\n\n// ...\n\n$application = new Application($di);\n\necho $application-&gt;handle()-&gt;getContent();</code></pre>\n\n<p>ta có thể hiểu đây là dòng để buid chạy chương trình.</p>\n\n<p><strong>Creating a Controller</strong><br>Controller khi được đặt tên là Index thì nó sẽ là file đầu tiên khi không có controller hoặc action nào được yêu cầu. Tạo file controller theo <code>app/controllers/IndexController.php</code></p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Controller;\n\nclass IndexController extends Controller\n{\n\n    public function indexAction()\n    {\n        echo \"&lt;h1&gt;Hello!&lt;/h1&gt;\";\n    }\n}</code></pre>\n\n<p>Bây giờ bạn mở XAMPP lên và chạy thử project xem thế nào. Đường dẫn là <a href=\"http://localhost/tutorial/\" rel=\"nofollow\">http://localhost/tutorial/</a> .<br>Kết quả:<br><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/8/80fbd01045ec66ac9b970152bc9173fc9495c772.png\" width=\"577\" height=\"319\"> </p>\n\n<p>Vậy là bạn đã làm xong một ví dụ nhỏ bằng Phalcon. <br>(<em>còn tiếp</em>)</p>\n","raw":"---json\n{\"id\":9220,\"layout\":\"Post\",\"route\":\"phalcon-phan-1-cung-lam-vi-du-dau-tien\",\"title\":\"[Phalcon] Phần 1: Cùng làm ví dụ đầu tiên\",\"tags\":[\"phalcon\"],\"date\":\"2015-07-08T12:07:13.766Z\",\"views\":623,\"likes\":10,\"description\":\"Phalcon không bắt buộc phải tạo cấu trúc theo quy định, nhưng để đơn giản ta  hãy tạo theo cấu trúc sau.\\n\\ntutorial/\\n  app/\\n    controllers…\",\"author\":{\"name\":\"Hoa Hoa\",\"avatar\":\"/letter_avatar_proxy/v2/letter/h/6bbea6/{size}.png\",\"username\":\"Hoa_Hoa\"}}\n---\n\n<p>Phalcon không bắt buộc phải tạo cấu trúc theo quy định, nhưng để đơn giản ta  hãy tạo theo cấu trúc sau.</p>\n\n<pre><code>tutorial/\n  app/\n    controllers/\n    models/\n    views/\n  public/\n    css/\n    img/\n    js/</code></pre>\n\n<p><strong>Beautiful URLs</strong><br>Nghĩa là các url đẹp. VD: <a href=\"https://www.thegioididong.com/\" rel=\"nofollow\">https://www.thegioididong.com/</a>, ......Khi chúng ta chạy project thì chỉ cần chạy tên project là nó sẽ hiện ra trang web. Cụ thể trong ví dụ này là tutorial. Điều này rất có lợi trong việc SEO.</p>\n\n<p>Chúng ta sẽ tạo file <code>.htaccess</code> theo thư mục <code>/tutorial/.htaccess</code></p>\n\n<pre><code>#/tutorial/.htaccess\n&lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine on\n    RewriteRule  ^$ public/    [L]\n    RewriteRule  (.*) public/$1 [L]\n&lt;/IfModule&gt;</code></pre>\n\n<p>và <code>/tutorial/public/.htaccess</code></p>\n\n<pre><code>#/tutorial/public/.htaccess\n&lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine On\n    RewriteCond %{REQUEST_FILENAME} !-d\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^(.*)$ index.php?_url=/$1 [QSA,L]\n&lt;/IfModule&gt;</code></pre>\n\n<p>Để hiểu file <code>.htaccess</code> là gì thì tham khảo thêm tại: <a href=\"http://freetuts.net/file-htaccess-la-gi-76.html\" rel=\"nofollow\">http://freetuts.net/file-htaccess-la-gi-76.html</a></p>\n\n<p><strong>Chú ý:</strong> Vì trong windows không cho phép ta tạo file mà không có tên phía trước. Vì thế có 1 cách đó là tạo 1 file <code>.php</code>, sau đó viết đoạn code:</p>\n\n<pre><code>&lt;?php fopen(\".htaccess\", \"w\"); ?&gt;</code></pre>\n\n<p>Cuối cùng chạy file này lên thì nó sẽ tạo ra file <code>.htaccess</code>, sau đó ta edit nó và gõ đoạn code như trên.</p>\n\n<p><strong>Bootstrap</strong><br>Đây không phải là thư viện bootstrap để tạo giao diện, mà ở đây là file khi trang web chạy, nó sẽ chạy file này đầu tiên. Nó rất quan trọng. Tạo file theo đường dẫn <code>tutorial/public/index.php</code> </p>\n\n<pre><code>&lt;?php\n    use Phalcon\\Loader;\n    use Phalcon\\Mvc\\View;\n    use Phalcon\\Mvc\\Application;\n    use Phalcon\\DI\\FactoryDefault;\n    use Phalcon\\Mvc\\Url as UrlProvider;\n    use Phalcon\\Db\\Adapter\\Pdo\\Mysql as DbAdapter;\n    \n    try {\n    \n        // Register an autoloader\n        $loader = new Loader();\n        $loader-&gt;registerDirs(array(\n            '../app/controllers/',\n            '../app/models/'\n        ))-&gt;register();\n    \n        // Create a DI\n        $di = new FactoryDefault();\n    \n        // Setup the view component\n        $di-&gt;set('view', function(){\n            $view = new View();\n            $view-&gt;setViewsDir('../app/views/');\n            return $view;\n        });\n    \n        // Setup a base URI so that all generated URIs include the \"tutorial\" folder\n        $di-&gt;set('url', function(){\n            $url = new UrlProvider();\n            $url-&gt;setBaseUri('/tutorial/');\n            return $url;\n        });\n    \n        // Handle the request\n        $application = new Application($di);\n    \n        echo $application-&gt;handle()-&gt;getContent();\n    \n    } catch (\\Exception $e) {\n         echo \"PhalconException: \", $e-&gt;getMessage();\n    }\n?&gt;</code></pre>\n\n<p>Chúng ta sẽ phân tích đoạn code này:</p>\n\n<p><strong>Autoloaders</strong><br>Khi chạy đoạn code này, nó sẽ load class controllers và models trong project. Ngoài ra có thể đăng ký load nhiều hơn. Để dùng chúng ta dùng <code>Phalcon\\Loader</code></p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Loader;\n\n// ...\n\n$loader = new Loader();\n$loader-&gt;registerDirs(\n    array(\n        '../app/controllers/',\n        '../app/models/'\n    )\n)-&gt;register();</code></pre>\n\n<p><strong>Dependency Management</strong><br>Đây là một khái niệm rất quan trọng khi sử dụng Phalcon. Nó giống như một cái túi lớn chứa những service khác mà chương trình sẽ sử dụng. Phalcon là một framework có tính phân chia cao, nhưng nó sẽ gộp chúng lại để sử dụng.</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\DI\\FactoryDefault;\n\n// ...\n\n// Create a DI\n$di = new FactoryDefault();</code></pre>\n\n<p>Ở đây chúng ta đăng ký service View. View khác với Model và Controller, nó không phải là class nên không thể đăng ký autoloader. Vì thế ta đăng ký trong DI.</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\View;\n\n// ...\n\n// Setup the view component\n$di-&gt;set('view', function() {\n    $view = new View();\n    $view-&gt;setViewsDir('../app/views/');\n    return $view;\n});</code></pre>\n\n<p>Tiếp theo là URI</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Url as UrlProvider;\n\n// ...\n\n// Setup a base URI so that all generated URIs include the \"tutorial\" folder\n$di-&gt;set('url', function(){\n    $url = new UrlProvider();\n    $url-&gt;setBaseUri('/tutorial/');\n    return $url;\n});</code></pre>\n\n<p>Cuối cùng là:</p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Application;\n\n// ...\n\n$application = new Application($di);\n\necho $application-&gt;handle()-&gt;getContent();</code></pre>\n\n<p>ta có thể hiểu đây là dòng để buid chạy chương trình.</p>\n\n<p><strong>Creating a Controller</strong><br>Controller khi được đặt tên là Index thì nó sẽ là file đầu tiên khi không có controller hoặc action nào được yêu cầu. Tạo file controller theo <code>app/controllers/IndexController.php</code></p>\n\n<pre><code>&lt;?php\n\nuse Phalcon\\Mvc\\Controller;\n\nclass IndexController extends Controller\n{\n\n    public function indexAction()\n    {\n        echo \"&lt;h1&gt;Hello!&lt;/h1&gt;\";\n    }\n}</code></pre>\n\n<p>Bây giờ bạn mở XAMPP lên và chạy thử project xem thế nào. Đường dẫn là <a href=\"http://localhost/tutorial/\" rel=\"nofollow\">http://localhost/tutorial/</a> .<br>Kết quả:<br><img src=\"http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/8/80fbd01045ec66ac9b970152bc9173fc9495c772.png\" width=\"577\" height=\"319\"> </p>\n\n<p>Vậy là bạn đã làm xong một ví dụ nhỏ bằng Phalcon. <br>(<em>còn tiếp</em>)</p>\n","__filename":"posts/9220.md","__url":"/phalcon-phan-1-cung-lam-vi-du-dau-tien/","__resourceUrl":"/phalcon-phan-1-cung-lam-vi-du-dau-tien/index.html","__dataUrl":"/phalcon-phan-1-cung-lam-vi-du-dau-tien/index.html.6b51e3357ff290ed9b3f525e837f14ec.json"}