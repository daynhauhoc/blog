{"head":{"id":6526,"layout":"Post","route":"huong-dan-dung-github-tren-windows-co-ban-step-by-step","title":"Hướng dẫn dùng Github trên Windows cơ bản (step by step)","tags":["github"],"date":"2015-04-26T07:36:13.728Z","author":{"username":"thanhmssl10","avatar":"/user_avatar/daynhauhoc.com/thanhmssl10/{size}/2345_1.png"},"description":"\\#Hướng dẫn dùng Github cơ bản theo phong cách \"mì ăn liền\" \n\nĐã có khá nhiều bài hướng dẫn sử dụng Github rồi nhưng mình vẫn muốn viết bài…"},"body":"<p>#Hướng dẫn dùng Github cơ bản theo phong cách &quot;mì ăn liền&quot;</p>\n<div align=center><img src='/uploads/default/2795/de779c2377336405.png'></div>\n<p>Đã có khá nhiều bài hướng dẫn sử dụng Github rồi nhưng mình vẫn muốn viết bài này để giúp những bạn muốn tìm hiều về Github có thể sử dụng một số chức năng cơ bản một cách &quot;mì ăn liền&quot; nhất có thể, tức là sẽ tập trung tối đa vào phần thực hành, lí thuyết thì nghịch xong rồi học thêm hehe :blush:</p>\n<blockquote>\n<p>Mà bạn chưa biết Github là cái gì á?  Nói chung là Daynhauhoc search hoặc Google search nhá :blush:</p>\n</blockquote>\n<h2 id=\"chun-b\"><a href=\"#chun-b\" class=\"statinamic-HeadingAnchor\">#</a>Chuẩn bị</h2>\n<p><strong>Đầu tiên đăng kí tài khoản Github</strong> <a href=\"https://github.com/\">https://github.com/</a></p>\n<blockquote>\n<p>các bạn đăng kí 2 cái nhá, để mò mẫm các chức năng của Github cho dễ</p>\n</blockquote>\n<p><strong>Sau đó là cài đặt Github for Windows(GFW)</strong>  <a href=\"https://windows.github.com/\">https://windows.github.com/</a></p>\n<blockquote>\n<p>Cài xong thì nhớ bạn đăng nhập vào GFW 1 tài khoản Github nhá,  và mở trình duyệt khác rồi đăng nhập tài khoản 2 vào, ví dụ tài khoản A của mình đăng nhập trên firefox và trên GFW, còn tài khoản B mình đăng nhập trên Google Chrome.</p>\n</blockquote>\n<h2 id=\"xong-bc-chun-b-by-gi-l-thc-hnh\"><a href=\"#xong-bc-chun-b-by-gi-l-thc-hnh\" class=\"statinamic-HeadingAnchor\">#</a>Xong bước chuẩn bị, bây giờ là thực hành</h2>\n<p>Github có 2 thể loại thế này:</p>\n<ol>\n<li>Tạo một kho lưu code (sau này gọi là repo) cho một project của mình,.</li>\n<li>Tham gia vào một project nào đó.</li>\n</ol>\n<p>Bây giờ ta sẽ cho tài khoản A tạo 1 cái repo chứa 1 file test.txt chẳng hạn, tài khoản B sẽ tham gia vào project của tài khoản A.</p>\n<p><strong>Tạo repo cho A</strong></p>\n<p>Trên giao diện web của A ấn nút <code>New Repository</code></p>\n<div align=center><img src=\"/uploads/default/2779/d84ad57b0eb9694e.png\"><br>New Repository<br></div>\n Điền tên repo với description là được, mấy cái còn lại thì cứ kệ nó nhá (kệ vì nó không ảnh hưởng lắm đến bài viết này, chứ không phải không quan trọng đâu nhá :blush: ) \n<div align=center><img src=\"/uploads/default/2780/903d9a5cdcdec083.png\" width=\"690\" height=\"454\"> <br>Creat Repository là xong</div>\n<p><strong>Clone về máy</strong></p>\n<p>Mở Github for Windows (GFW) để clone repo về máy</p>\n<div align=center><img src=\"/uploads/default/2781/102fb19c6374c79c.png\" width=\"588\" height=\"250\"><br>Ấn vào dấu cộng góc trên cùng bên trái, chọn Clone, rồi nó sẽ hiện ra repo mình vừa tạo ở trên, ấn Clone Repository</div>\n<p><strong>Thực hiện commit đầu tiên nào!!!</strong></p>\n<p>Clone xong thì trên máy có một folder mang tên repo của bạn, bạn cho <code>test.txt</code> vào đó, khi đó quay lại GFW ta sẽ thấy &quot;cảnh tượng&quot; như này :blush:</p>\n<div align=center><img src=\"/uploads/default/2782/b9472277e07c183d.png\" width=\"690\" height=\"237\"><br>Ấn Show rồi commit</div>  \nVậy là thay đổi của bạn giờ được lưu vào lịch sử thay đổi trên máy của bạn, sau đó ta sẽ cho lên repo trên github\n<div align=center><img src=\"/uploads/default/2783/2a3d2b2228bae32a.png\" width=\"186\" height=\"136\"><br>Ấn Publish để đưa lên repo trên github,chữ publish sau lần đầu tiên sẽ đổi thành sync </div>\n<p><strong>Fork về tài khoản B</strong></p>\n<p>Bây giờ đến lượt ông B, ông B sẽ &quot;chôm&quot; repo của ông A về tài khoản của mình (hành động này gọi là <code>Fork</code>)\nTừ giao diện web của B tìm đến repo của A rồi ấn nút <code>Fork</code></p>\n<div align=center><img src=\"/uploads/default/2784/72440152c5fda36c.png\" width=\"432\" height=\"126\"><br>Bây giờ B đã có 1 repo chứa dữ liệu giống hệt repo của A</div> \n<p><strong>Chỉnh sửa test.txt và Pull request (sau này gọi là PR)  từ B tới A</strong></p>\n<p>Bây giờ B sẽ chỉnh sửa file test.txt, (chỉnh sửa  trực tiếp trên giao diện web của B), khi đó file test.txt giữa A và B đã có sự khác nhau và ta có thể gửi PR từ B tới A , PR nghĩa là B nói với A:&quot;B đã sửa file test.txt, yêu cầu A hợp nhất vào repo của A&quot;, nếu như A đồng ý với yêu cầu đó,thì file test.txt trên repo của A sẽ thay đổi theo file trên repo của B</p>\n <div align=center><img src=\"/uploads/default/2793/c80acf9776ff3508.png\" width=\"690\" height=\"156\"> <br>Bắt đầu chỉnh sửa file test.txt trên repo B</div>\n<hr>\n<div align=center><img src=\"/uploads/default/2792/d22e4f522a029ce2.png\" width=\"420\" height=\"206\">\n<br></div>\n<hr>\n<div align=center><img src=\"/uploads/default/2794/29370d3301419a3e.png\" width=\"690\" height=\"265\"> <br></div>\n<hr>\n<p>Và đây là quá trình gửi PR</p>\n<div align=center><img src=\"/uploads/default/2785/bf217c24a7a12cef.png\" width=\"194\" height=\"342\"> <br></div>\n<hr>\n<div align=center><img src=\"/uploads/default/2788/2b50e9ecd71c5b7e.png\" width=\"500\" height=\"334\"><br></div> \n<hr>\n<div align=center><img src=\"/uploads/default/2787/5cfc1c8931661b49.png\" width=\"690\" height=\"172\"> <br>Thông thường thì github tự động hiện bên nhận PR là repo của A và bên gửi PR là  repo của B, nhưng nếu không hiện đúng như vậy thì bạn phải tự chỉnh bằng tay, trong lúc đổi bên nhận gửi PR, thì sẽ có thời điểm là bên nhận và bên gửi là cùng 1 repo, khi đó phải dùng nút CAF để giải quyết</div>\n<p><strong>Sang bên A xem  có gì xảy ra nào</strong></p>\n<p>Sau khi B gửi PR đến A, thì bên A sẽ hiện thông báo có PR, bây giờ ta sẽ chấp nhận PR đó, nội dung của file test.txt trên repo A sẽ bị thay đổi theo file test.txt của bên B</p>\n<div align=center><img src=\"/uploads/default/2789/5fdfe92a1828a964.png\" width=\"464\" height=\"432\"><br></div> \n<hr>\n<div align=center><img src=\"/uploads/default/2791/eef795cfa789cdf7.png\" width=\"664\" height=\"202\"> <br></div> \n<hr>\n <div align=center><img src=\"/uploads/default/2790/4075a8eaea12da9c.png\" width=\"690\" height=\"165\"><br>Và bây giờ những thay đổi của B đối với file test.txt đã được chấp thuận và được hợp nhất vào file test.txt của A</div> \n \n<p><strong>Update cho B</strong>\nMột ngày đẹp trời A sửa file test.txt trên repo của A, nếu B muốn file test.txt của mình cũng được thay đổi giống như A thì sao nhỉ? Xoá repo đi fork lại? gọi điện cho A bảo: &quot;Alo ông gửi pull request cho tôi đi để tôi hợp nhất vào repo của tôi&quot;? Không cần rắc rối như vậy, github cho phép B &quot;tự sướng&quot; tạo một PR từ A đến B rồi tự đồng ý để merge (hợp nhất) vào repo của mình.</p>\n<div align=center><img src=\"/uploads/default/2787/5cfc1c8931661b49.png\" width=\"690\" height=\"172\"> <br>Nghĩa trên giao diện web của B, chỉ cần tạo PR : bên nhận là repo B còn bên gửi là repo A</div>\n<p>Đây là sơ đồ khái quát quá trình trên, cái GFW của B ta không dùng đến vì ta sửa file trực tiếp trên Browser B ,trong thực tế rất ít khi làm như vậy, hầu hết là chỉnh sửa trên local trước rồi mới cho lên (vẽ tay cho nhanh, khi nào phải vẽ lại trên máy tính cho nó chuyên nghiệp mới được :smile:  )\n<img src=\"/uploads/default/2798/849e11f4d0f139f7.jpg\" width=\"666\" height=\"500\"></p>\n<p>Rồi, bây giờ thì bạn có thể ngồi nghịch với 2 tài khoản A, B đó cho quen, rồi có thể mò thêm các cái khác như là tạo readme.md, tạo thêm branch, &quot;cỗ máy thời gian&quot;,.. :smile:\nCó vấn đề gì thì cứ hỏi tại đây nhé :wink:</p>\n<p>Bài viết được đăng tại đây: <a href=\"http://portal.daynhauhoc.com/p/huong-dan-dung-github-tren-windows-co-ban/\">http://portal.daynhauhoc.com/p/huong-dan-dung-github-tren-windows-co-ban/</a></p>\n","rawBody":"\n#Hướng dẫn dùng Github cơ bản theo phong cách \"mì ăn liền\" \n\n<div align=center><img src='/uploads/default/2795/de779c2377336405.png'></div>\n\nĐã có khá nhiều bài hướng dẫn sử dụng Github rồi nhưng mình vẫn muốn viết bài này để giúp những bạn muốn tìm hiều về Github có thể sử dụng một số chức năng cơ bản một cách \"mì ăn liền\" nhất có thể, tức là sẽ tập trung tối đa vào phần thực hành, lí thuyết thì nghịch xong rồi học thêm hehe :blush:\n\n>Mà bạn chưa biết Github là cái gì á?  Nói chung là Daynhauhoc search hoặc Google search nhá :blush:\n\nChuẩn bị\n--------\n\n**Đầu tiên đăng kí tài khoản Github** https://github.com/ \n>các bạn đăng kí 2 cái nhá, để mò mẫm các chức năng của Github cho dễ\n\n**Sau đó là cài đặt Github for Windows(GFW)**  https://windows.github.com/\n>Cài xong thì nhớ bạn đăng nhập vào GFW 1 tài khoản Github nhá,  và mở trình duyệt khác rồi đăng nhập tài khoản 2 vào, ví dụ tài khoản A của mình đăng nhập trên firefox và trên GFW, còn tài khoản B mình đăng nhập trên Google Chrome.\n\n\nXong bước chuẩn bị, bây giờ là thực hành\n-----------\n\n\nGithub có 2 thể loại thế này:\n  \n1. Tạo một kho lưu code (sau này gọi là repo) cho một project của mình,.\n2. Tham gia vào một project nào đó.\n\nBây giờ ta sẽ cho tài khoản A tạo 1 cái repo chứa 1 file test.txt chẳng hạn, tài khoản B sẽ tham gia vào project của tài khoản A.\n\n**Tạo repo cho A**\n\nTrên giao diện web của A ấn nút `New Repository` \n<div align=center><img src=\"/uploads/default/2779/d84ad57b0eb9694e.png\"><br>New Repository<br></div>\n Điền tên repo với description là được, mấy cái còn lại thì cứ kệ nó nhá (kệ vì nó không ảnh hưởng lắm đến bài viết này, chứ không phải không quan trọng đâu nhá :blush: ) \n<div align=center><img src=\"/uploads/default/2780/903d9a5cdcdec083.png\" width=\"690\" height=\"454\"> <br>Creat Repository là xong</div>\n\n**Clone về máy**\n\nMở Github for Windows (GFW) để clone repo về máy\n\n<div align=center><img src=\"/uploads/default/2781/102fb19c6374c79c.png\" width=\"588\" height=\"250\"><br>Ấn vào dấu cộng góc trên cùng bên trái, chọn Clone, rồi nó sẽ hiện ra repo mình vừa tạo ở trên, ấn Clone Repository</div>\n\n**Thực hiện commit đầu tiên nào!!!**\n\nClone xong thì trên máy có một folder mang tên repo của bạn, bạn cho `test.txt` vào đó, khi đó quay lại GFW ta sẽ thấy \"cảnh tượng\" như này :blush: \n\n<div align=center><img src=\"/uploads/default/2782/b9472277e07c183d.png\" width=\"690\" height=\"237\"><br>Ấn Show rồi commit</div>  \nVậy là thay đổi của bạn giờ được lưu vào lịch sử thay đổi trên máy của bạn, sau đó ta sẽ cho lên repo trên github\n<div align=center><img src=\"/uploads/default/2783/2a3d2b2228bae32a.png\" width=\"186\" height=\"136\"><br>Ấn Publish để đưa lên repo trên github,chữ publish sau lần đầu tiên sẽ đổi thành sync </div>\n\n\n**Fork về tài khoản B**\n\nBây giờ đến lượt ông B, ông B sẽ \"chôm\" repo của ông A về tài khoản của mình (hành động này gọi là `Fork`)\nTừ giao diện web của B tìm đến repo của A rồi ấn nút `Fork`\n<div align=center><img src=\"/uploads/default/2784/72440152c5fda36c.png\" width=\"432\" height=\"126\"><br>Bây giờ B đã có 1 repo chứa dữ liệu giống hệt repo của A</div> \n\n\n**Chỉnh sửa test.txt và Pull request (sau này gọi là PR)  từ B tới A**\n\nBây giờ B sẽ chỉnh sửa file test.txt, (chỉnh sửa  trực tiếp trên giao diện web của B), khi đó file test.txt giữa A và B đã có sự khác nhau và ta có thể gửi PR từ B tới A , PR nghĩa là B nói với A:\"B đã sửa file test.txt, yêu cầu A hợp nhất vào repo của A\", nếu như A đồng ý với yêu cầu đó,thì file test.txt trên repo của A sẽ thay đổi theo file trên repo của B\n\n <div align=center><img src=\"/uploads/default/2793/c80acf9776ff3508.png\" width=\"690\" height=\"156\"> <br>Bắt đầu chỉnh sửa file test.txt trên repo B</div>\n\n\n\n----------\n\n\n\n<div align=center><img src=\"/uploads/default/2792/d22e4f522a029ce2.png\" width=\"420\" height=\"206\">\n<br></div>\n\n\n----------\n\n\n<div align=center><img src=\"/uploads/default/2794/29370d3301419a3e.png\" width=\"690\" height=\"265\"> <br></div>\n\n\n----------\nVà đây là quá trình gửi PR\n\n<div align=center><img src=\"/uploads/default/2785/bf217c24a7a12cef.png\" width=\"194\" height=\"342\"> <br></div>\n\n\n----------\n\n\n<div align=center><img src=\"/uploads/default/2788/2b50e9ecd71c5b7e.png\" width=\"500\" height=\"334\"><br></div> \n\n\n----------\n\n\n<div align=center><img src=\"/uploads/default/2787/5cfc1c8931661b49.png\" width=\"690\" height=\"172\"> <br>Thông thường thì github tự động hiện bên nhận PR là repo của A và bên gửi PR là  repo của B, nhưng nếu không hiện đúng như vậy thì bạn phải tự chỉnh bằng tay, trong lúc đổi bên nhận gửi PR, thì sẽ có thời điểm là bên nhận và bên gửi là cùng 1 repo, khi đó phải dùng nút CAF để giải quyết</div>\n\n**Sang bên A xem  có gì xảy ra nào**\n\nSau khi B gửi PR đến A, thì bên A sẽ hiện thông báo có PR, bây giờ ta sẽ chấp nhận PR đó, nội dung của file test.txt trên repo A sẽ bị thay đổi theo file test.txt của bên B\n\n<div align=center><img src=\"/uploads/default/2789/5fdfe92a1828a964.png\" width=\"464\" height=\"432\"><br></div> \n\n------------\n\n<div align=center><img src=\"/uploads/default/2791/eef795cfa789cdf7.png\" width=\"664\" height=\"202\"> <br></div> \n\n\n----------\n\n\n <div align=center><img src=\"/uploads/default/2790/4075a8eaea12da9c.png\" width=\"690\" height=\"165\"><br>Và bây giờ những thay đổi của B đối với file test.txt đã được chấp thuận và được hợp nhất vào file test.txt của A</div> \n \n\n**Update cho B**\nMột ngày đẹp trời A sửa file test.txt trên repo của A, nếu B muốn file test.txt của mình cũng được thay đổi giống như A thì sao nhỉ? Xoá repo đi fork lại? gọi điện cho A bảo: \"Alo ông gửi pull request cho tôi đi để tôi hợp nhất vào repo của tôi\"? Không cần rắc rối như vậy, github cho phép B \"tự sướng\" tạo một PR từ A đến B rồi tự đồng ý để merge (hợp nhất) vào repo của mình.\n\n<div align=center><img src=\"/uploads/default/2787/5cfc1c8931661b49.png\" width=\"690\" height=\"172\"> <br>Nghĩa trên giao diện web của B, chỉ cần tạo PR : bên nhận là repo B còn bên gửi là repo A</div>\n\nĐây là sơ đồ khái quát quá trình trên, cái GFW của B ta không dùng đến vì ta sửa file trực tiếp trên Browser B ,trong thực tế rất ít khi làm như vậy, hầu hết là chỉnh sửa trên local trước rồi mới cho lên (vẽ tay cho nhanh, khi nào phải vẽ lại trên máy tính cho nó chuyên nghiệp mới được :smile:  )\n<img src=\"/uploads/default/2798/849e11f4d0f139f7.jpg\" width=\"666\" height=\"500\"> \n\nRồi, bây giờ thì bạn có thể ngồi nghịch với 2 tài khoản A, B đó cho quen, rồi có thể mò thêm các cái khác như là tạo readme.md, tạo thêm branch, \"cỗ máy thời gian\",.. :smile: \nCó vấn đề gì thì cứ hỏi tại đây nhé :wink:\n\nBài viết được đăng tại đây: http://portal.daynhauhoc.com/p/huong-dan-dung-github-tren-windows-co-ban/\n","raw":"---json\n{\"id\":6526,\"layout\":\"Post\",\"route\":\"huong-dan-dung-github-tren-windows-co-ban-step-by-step\",\"title\":\"Hướng dẫn dùng Github trên Windows cơ bản (step by step)\",\"tags\":[\"github\"],\"date\":\"2015-04-26T07:36:13.728Z\",\"author\":{\"username\":\"thanhmssl10\",\"avatar\":\"/user_avatar/daynhauhoc.com/thanhmssl10/{size}/2345_1.png\"}}\n---\n\n#Hướng dẫn dùng Github cơ bản theo phong cách \"mì ăn liền\" \n\n<div align=center><img src='/uploads/default/2795/de779c2377336405.png'></div>\n\nĐã có khá nhiều bài hướng dẫn sử dụng Github rồi nhưng mình vẫn muốn viết bài này để giúp những bạn muốn tìm hiều về Github có thể sử dụng một số chức năng cơ bản một cách \"mì ăn liền\" nhất có thể, tức là sẽ tập trung tối đa vào phần thực hành, lí thuyết thì nghịch xong rồi học thêm hehe :blush:\n\n>Mà bạn chưa biết Github là cái gì á?  Nói chung là Daynhauhoc search hoặc Google search nhá :blush:\n\nChuẩn bị\n--------\n\n**Đầu tiên đăng kí tài khoản Github** https://github.com/ \n>các bạn đăng kí 2 cái nhá, để mò mẫm các chức năng của Github cho dễ\n\n**Sau đó là cài đặt Github for Windows(GFW)**  https://windows.github.com/\n>Cài xong thì nhớ bạn đăng nhập vào GFW 1 tài khoản Github nhá,  và mở trình duyệt khác rồi đăng nhập tài khoản 2 vào, ví dụ tài khoản A của mình đăng nhập trên firefox và trên GFW, còn tài khoản B mình đăng nhập trên Google Chrome.\n\n\nXong bước chuẩn bị, bây giờ là thực hành\n-----------\n\n\nGithub có 2 thể loại thế này:\n  \n1. Tạo một kho lưu code (sau này gọi là repo) cho một project của mình,.\n2. Tham gia vào một project nào đó.\n\nBây giờ ta sẽ cho tài khoản A tạo 1 cái repo chứa 1 file test.txt chẳng hạn, tài khoản B sẽ tham gia vào project của tài khoản A.\n\n**Tạo repo cho A**\n\nTrên giao diện web của A ấn nút `New Repository` \n<div align=center><img src=\"/uploads/default/2779/d84ad57b0eb9694e.png\"><br>New Repository<br></div>\n Điền tên repo với description là được, mấy cái còn lại thì cứ kệ nó nhá (kệ vì nó không ảnh hưởng lắm đến bài viết này, chứ không phải không quan trọng đâu nhá :blush: ) \n<div align=center><img src=\"/uploads/default/2780/903d9a5cdcdec083.png\" width=\"690\" height=\"454\"> <br>Creat Repository là xong</div>\n\n**Clone về máy**\n\nMở Github for Windows (GFW) để clone repo về máy\n\n<div align=center><img src=\"/uploads/default/2781/102fb19c6374c79c.png\" width=\"588\" height=\"250\"><br>Ấn vào dấu cộng góc trên cùng bên trái, chọn Clone, rồi nó sẽ hiện ra repo mình vừa tạo ở trên, ấn Clone Repository</div>\n\n**Thực hiện commit đầu tiên nào!!!**\n\nClone xong thì trên máy có một folder mang tên repo của bạn, bạn cho `test.txt` vào đó, khi đó quay lại GFW ta sẽ thấy \"cảnh tượng\" như này :blush: \n\n<div align=center><img src=\"/uploads/default/2782/b9472277e07c183d.png\" width=\"690\" height=\"237\"><br>Ấn Show rồi commit</div>  \nVậy là thay đổi của bạn giờ được lưu vào lịch sử thay đổi trên máy của bạn, sau đó ta sẽ cho lên repo trên github\n<div align=center><img src=\"/uploads/default/2783/2a3d2b2228bae32a.png\" width=\"186\" height=\"136\"><br>Ấn Publish để đưa lên repo trên github,chữ publish sau lần đầu tiên sẽ đổi thành sync </div>\n\n\n**Fork về tài khoản B**\n\nBây giờ đến lượt ông B, ông B sẽ \"chôm\" repo của ông A về tài khoản của mình (hành động này gọi là `Fork`)\nTừ giao diện web của B tìm đến repo của A rồi ấn nút `Fork`\n<div align=center><img src=\"/uploads/default/2784/72440152c5fda36c.png\" width=\"432\" height=\"126\"><br>Bây giờ B đã có 1 repo chứa dữ liệu giống hệt repo của A</div> \n\n\n**Chỉnh sửa test.txt và Pull request (sau này gọi là PR)  từ B tới A**\n\nBây giờ B sẽ chỉnh sửa file test.txt, (chỉnh sửa  trực tiếp trên giao diện web của B), khi đó file test.txt giữa A và B đã có sự khác nhau và ta có thể gửi PR từ B tới A , PR nghĩa là B nói với A:\"B đã sửa file test.txt, yêu cầu A hợp nhất vào repo của A\", nếu như A đồng ý với yêu cầu đó,thì file test.txt trên repo của A sẽ thay đổi theo file trên repo của B\n\n <div align=center><img src=\"/uploads/default/2793/c80acf9776ff3508.png\" width=\"690\" height=\"156\"> <br>Bắt đầu chỉnh sửa file test.txt trên repo B</div>\n\n\n\n----------\n\n\n\n<div align=center><img src=\"/uploads/default/2792/d22e4f522a029ce2.png\" width=\"420\" height=\"206\">\n<br></div>\n\n\n----------\n\n\n<div align=center><img src=\"/uploads/default/2794/29370d3301419a3e.png\" width=\"690\" height=\"265\"> <br></div>\n\n\n----------\nVà đây là quá trình gửi PR\n\n<div align=center><img src=\"/uploads/default/2785/bf217c24a7a12cef.png\" width=\"194\" height=\"342\"> <br></div>\n\n\n----------\n\n\n<div align=center><img src=\"/uploads/default/2788/2b50e9ecd71c5b7e.png\" width=\"500\" height=\"334\"><br></div> \n\n\n----------\n\n\n<div align=center><img src=\"/uploads/default/2787/5cfc1c8931661b49.png\" width=\"690\" height=\"172\"> <br>Thông thường thì github tự động hiện bên nhận PR là repo của A và bên gửi PR là  repo của B, nhưng nếu không hiện đúng như vậy thì bạn phải tự chỉnh bằng tay, trong lúc đổi bên nhận gửi PR, thì sẽ có thời điểm là bên nhận và bên gửi là cùng 1 repo, khi đó phải dùng nút CAF để giải quyết</div>\n\n**Sang bên A xem  có gì xảy ra nào**\n\nSau khi B gửi PR đến A, thì bên A sẽ hiện thông báo có PR, bây giờ ta sẽ chấp nhận PR đó, nội dung của file test.txt trên repo A sẽ bị thay đổi theo file test.txt của bên B\n\n<div align=center><img src=\"/uploads/default/2789/5fdfe92a1828a964.png\" width=\"464\" height=\"432\"><br></div> \n\n------------\n\n<div align=center><img src=\"/uploads/default/2791/eef795cfa789cdf7.png\" width=\"664\" height=\"202\"> <br></div> \n\n\n----------\n\n\n <div align=center><img src=\"/uploads/default/2790/4075a8eaea12da9c.png\" width=\"690\" height=\"165\"><br>Và bây giờ những thay đổi của B đối với file test.txt đã được chấp thuận và được hợp nhất vào file test.txt của A</div> \n \n\n**Update cho B**\nMột ngày đẹp trời A sửa file test.txt trên repo của A, nếu B muốn file test.txt của mình cũng được thay đổi giống như A thì sao nhỉ? Xoá repo đi fork lại? gọi điện cho A bảo: \"Alo ông gửi pull request cho tôi đi để tôi hợp nhất vào repo của tôi\"? Không cần rắc rối như vậy, github cho phép B \"tự sướng\" tạo một PR từ A đến B rồi tự đồng ý để merge (hợp nhất) vào repo của mình.\n\n<div align=center><img src=\"/uploads/default/2787/5cfc1c8931661b49.png\" width=\"690\" height=\"172\"> <br>Nghĩa trên giao diện web của B, chỉ cần tạo PR : bên nhận là repo B còn bên gửi là repo A</div>\n\nĐây là sơ đồ khái quát quá trình trên, cái GFW của B ta không dùng đến vì ta sửa file trực tiếp trên Browser B ,trong thực tế rất ít khi làm như vậy, hầu hết là chỉnh sửa trên local trước rồi mới cho lên (vẽ tay cho nhanh, khi nào phải vẽ lại trên máy tính cho nó chuyên nghiệp mới được :smile:  )\n<img src=\"/uploads/default/2798/849e11f4d0f139f7.jpg\" width=\"666\" height=\"500\"> \n\nRồi, bây giờ thì bạn có thể ngồi nghịch với 2 tài khoản A, B đó cho quen, rồi có thể mò thêm các cái khác như là tạo readme.md, tạo thêm branch, \"cỗ máy thời gian\",.. :smile: \nCó vấn đề gì thì cứ hỏi tại đây nhé :wink:\n\nBài viết được đăng tại đây: http://portal.daynhauhoc.com/p/huong-dan-dung-github-tren-windows-co-ban/\n","__filename":"posts/6526.md","__url":"/huong-dan-dung-github-tren-windows-co-ban-step-by-step/","__resourceUrl":"/huong-dan-dung-github-tren-windows-co-ban-step-by-step/index.html","__dataUrl":"/huong-dan-dung-github-tren-windows-co-ban-step-by-step/index.html.cb19a584ec21049d037db5d109cccff4.json"}