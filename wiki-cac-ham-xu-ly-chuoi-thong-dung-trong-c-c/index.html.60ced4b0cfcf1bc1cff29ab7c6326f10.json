{"head":{"id":2052,"layout":"Post","route":"wiki-cac-ham-xu-ly-chuoi-thong-dung-trong-c-c","title":"[Wiki] Các hàm xử lý chuỗi thông dụng trong C/C++","tags":["c++","c"],"date":"2014-11-28T07:24:32.811Z","views":33243,"likes":39,"description":"Mình xin thảo luận về công dụng của các hàm thường sử dụng trong chuỗi: \n\nChú ý khi sử dụng các hàm này ta phải khai báo thư viện #include…","author":{"name":"passion","avatar":"/letter_avatar_proxy/v2/letter/q/13edae/{size}.png","username":"quanpham"}},"body":"\n<p>Mình xin thảo luận về công dụng của các hàm thường sử dụng trong chuỗi: </p>\n\n<p>Chú ý khi sử dụng các hàm này ta phải khai báo thư viện <code>#include \"string.h\"</code></p>\n\n<p><strong>1.Hàm strcpy:</strong></p>\n\n<ul>\n<li><p>Công dụng: sao chép chuỗi nguồn vào chuỗi đích.</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">char*strcpy(char *dich, char *nguon);</code></pre>\n</li>\n</ul>\n\n<p>Có nghĩa là khi ta nhập vào một dãy các kí tự ở chuỗi nguồn thì nó sẽ sao chép tất cả các kí tự vừa nhập vào cái chuỗi đích. </p>\n\n<ul><li>ví dụ như sau:</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char A[255],B[255];\n    printf(\"Nhap chuoi: \");\n    gets(A);\n    strcpy(B,A);\n    printf(\"Chuoi dich: \");\n    puts(B);\n    getch();\n    return 0;\n}</code></pre>\n\n<p>Chương trình trên khi ta nhập vào mảng A một dãy các kí tự là \"abc\" thì khi gap hàm strcpy(B,A); thì nó sẽ copy 3 kí tự \"abc\" từ mảng A vào mảng B.</p>\n\n<p>Nếu chúng ta muốn copy n kí tự từ chuỗi nguồn vào chuỗi đích ta dùng hàm sau:</p>\n\n<p><strong>2.Hàm strncpy:</strong></p>\n\n<ul>\n<li><p>Công dụng: sao chép n kí tự đầu tiên của chuỗi nguồn vào chuỗi đích.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strncpy(char *dich, char *nguon,int n);</code></pre>\n\n<p><strong>3.Hàm strlen:</strong></p>\n\n<ul>\n<li><p>Công dụng :cho biết độ dài của chuỗi s</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">int strlen(char *s)</code></pre>\n\n<ul><li>Ví dụ: Sử dụng hàm strlen xác định độ dài một chuỗi nhập từ bàn phím.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255];\n    int Dodai;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    Dodai = strlen(Chuoi);\n    printf(\"Chuoi vua nhap:\");\n    puts(Chuoi);\n    printf(\"Co do_dai\n           %d\",Dodai);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>4.Hàm strcat:</strong></p>\n\n<ul>\n<li><p>Công dụng: ghép chuỗi nguồn vào sau chuỗi đích.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strcat(char *dich,char *nguon)</code></pre>\n\n<ul><li>Ví dụ: Nhập vào họ lót và tên của một người, sau đó in cả họ và tên của họ lên màn hình.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char HoLot[30], Ten[12];\n    printf(\"Nhap Ho Lot: \");\n    gets(HoLot);\n    printf(\"Nhap Ten: \");\n    gets(Ten);\n    strcat(HoLot,Ten); /* Ghep Ten vao HoLot*/\n    printf(\"Ho ten la: \");\n    puts(HoLot);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>5.Hàm strncat:</strong></p>\n\n<ul>\n<li><p>Công dụng: ghép n kí tự đầu tiên của chuỗi vào sau chuỗi đích</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strncat(char *dich,char *nguon,int n);</code></pre>\n\n<p><strong>6.Hàm strcmp:</strong></p>\n\n<ul>\n<li><p>Công dụng: so sánh 2 chuỗi s1 và s2</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">int strcmp(char *s1,char *s2);</code></pre>\n\n<p>Hàm sẽ  trả về 1 trong các giá trị sau:</p>\n\n<ul>\n<li><p>Giá trị âm<br>nếu chuỗi s1 nhỏ hơn chuỗi s2</p></li>\n<li><p>Giá trị 0 nếu<br>hai chuỗi bằng nhau</p></li>\n<li><p>Giá trị dương nếu chuỗi s1 lớn hơn chuỗi s2</p></li>\n</ul>\n\n<p>Ví dụ: <br></p>\n\n<p></p><pre><code class=\"lang-auto\">char *chu1 = \"aaa\", *chu2= \"bbb\", *chu3 = \"aaa\"; \nstrcmp(chu1, chu2); //kết quả trả về - 1 \nstrcmp(chu1, chu3); //kết quả trả về 0 \nstrcmp(chu2, chu3); //kết quả trả về 1</code></pre>\n\n<p></p><pre><code class=\"lang-auto\">ví dụ minh họa đây:\n/*\nNhap danh sach ten va sap xep theo thu tu tang dan*/ \n\n#include &lt;stdio.h&gt;\n\n#include &lt;conio.h&gt;\n\n#include &lt;string.h&gt;\n\n#define MAXNUM 5\n\n#define MAXLEN 10\n\nint main(void)\n\n{\n\nchar ten[MAXNUM][MAXLEN]; //mang chuoi\n\nchar *c[MAXNUM]; //mang con tro tro den chuoi\n\nchar *ct;\n\nint i, j, n = 0;\n\n//nhap danh sach ten\n\nwhile (n &lt; MAXNUM)\n\n{\n\nprintf(\"Nhap vao ten nguoi thu %d: \",n + 1);\n\ngets(ten[n]);\n\nc[n++] = ten[n]; //con tro den ten\n\n}\n\n//sap xep danh sach theo thu tu tang dan\n\nfor (i = 0; i &lt; n - 1; i ++)\n\nfor (j = i + 1; j &lt; n; j ++)\n\nif (strcmp(c[i], c[j]) &gt; 0)\n\n{\n\nct = c[i];\n\nc[i] = c[j];\n\nc[j] = ct;\n\n}\n\n//In danh sach da sap xep\n\nprintf(\"Danh sach sau khi sap xep:\\n\");\n\nfor (i = 0; i &lt; n; i ++)\n\nprintf(\"Ten nguoi thu %d : %s\\n\", i + 1, c[i]);\n\ngetch();\n\n}</code></pre>\n\n<p><strong>7.Hàm strlwr:</strong></p>\n\n<ul>\n<li><p>Công dụng: chuyển tất cả các kí tự chuỗi về chữ thường</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strlwr(char *s);</code></pre>\n\n<p><strong>8.Hàm strupr :</strong></p>\n\n<ul>\n<li><p>Công dụng: chuyển tất cả các kí tự chuỗi thường về chữ hoa          </p></li>\n<li><p>Cấu trúc: </p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strupr(char *s)</code></pre>\n\n<pre><code></code></pre>\n\n<ul><li>Ví dụ: Viết chương trình nhập vào một chuỗi ký tự từ bàn phím. Sau đó sử dụng hàm strupr(); để chuyển đổi chúng thành chuỗi chữ hoa.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255],*s;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    s=strupr(Chuoi) ;\n    printf(\"Chuoi chu hoa:\");\n    puts(s);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>9.Hàm strrev :</strong></p>\n\n<ul>\n<li><p>Công dụng: đảo ngược chuỗi kí tự</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">char *strrev(char *s);</code></pre>\n</li>\n</ul>\n\n<p><strong>10.Hàm strchr:</strong></p>\n\n<ul>\n<li><p>Công dụng: trả về địa chỉ vị trí xuất hiện đầu tiên của kí tự ch trong chữ s và sẽ trả về giá trị<br>NULL trong trường hợp không tìm thấy.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strchr(char *s,char ch);</code></pre>\n\n<p><strong>11.Hàm strrchr:</strong></p>\n\n<ul><li>Cấu trúc:</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strrchr(char *s,char ch);</code></pre>\n\n<ul><li>Công dụng: trả về địachỉ vị trí xuất hiện cuối cùng của kí tự ch trong chuỗi s. Nếu không tìm thấy hàm sẽ trả về giá trị NULL </li></ul>\n\n<p><strong>12.Hàm strstr:</strong></p>\n\n<ul>\n<li><p>Công dụng: trả về địa chỉ vị trí xuất hiện đầu tiên của chuỗi s1 trong chuỗi s và sẽ trả về giá trị NULL trong trường hợp không tìm thấy.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strstr(char *s, char *s1);</code></pre>\n\n<p>Ví dụ: Viết chương trình sử dụng hàm strstr() để lấy ra một phần của chuỗi gốc bắt đầu từ chuỗi “hoc”.</p>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255],*s;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    s=strstr(Chuoi,\"hoc\");\n    printf(\"Chuoi trich ra:\");\n    puts(s);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>13. Hàm memset</strong></p>\n\n<ul>\n<li><p>Công dụng: Set num byte nhớ từ vị trí được trỏ tới bằng giá trị value </p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">void *memset (void *ptr, int value, size_t num);</code></pre>\n</li>\n</ul>\n\n<p><strong>14. Hàm memcpy</strong></p>\n\n<ul>\n<li><p>Công dụng: Chép num byte từ vị trí mà source trỏ tới đến vị trí mà destination trỏ tới</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">void *memcpy (void *destination, const void *source, size_t num);</code></pre>\n</li>\n</ul>\n\n<p><strong>15. Hàm memcmp</strong></p>\n\n<ul>\n<li><p>Công dụng: So sánh giá trị các vùng nhớ mà ptr1 và ptr2 trỏ tới theo từng byte, sẽ dừng lại khi so sánh đủ num byte. Trả về -1 khi byte đầu tiên mà không trùng nhau của 2 vùng so sánh của ptr1 nhỏ hơn ptr2, trả về 0 khi 2 vùng nhớ bằng nhau, trả về 1 khi byte đầu tiên mà không trùng nhau của 2 vùng so sánh của ptr1 lớn hơn ptr2</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">int memcmp(const void *ptr1, const void *ptr2, size_t num);</code></pre>\n</li>\n</ul>\n","rawBody":"\n<p>Mình xin thảo luận về công dụng của các hàm thường sử dụng trong chuỗi: </p>\n\n<p>Chú ý khi sử dụng các hàm này ta phải khai báo thư viện <code>#include \"string.h\"</code></p>\n\n<p><strong>1.Hàm strcpy:</strong></p>\n\n<ul>\n<li><p>Công dụng: sao chép chuỗi nguồn vào chuỗi đích.</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">char*strcpy(char *dich, char *nguon);</code></pre>\n</li>\n</ul>\n\n<p>Có nghĩa là khi ta nhập vào một dãy các kí tự ở chuỗi nguồn thì nó sẽ sao chép tất cả các kí tự vừa nhập vào cái chuỗi đích. </p>\n\n<ul><li>ví dụ như sau:</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char A[255],B[255];\n    printf(\"Nhap chuoi: \");\n    gets(A);\n    strcpy(B,A);\n    printf(\"Chuoi dich: \");\n    puts(B);\n    getch();\n    return 0;\n}</code></pre>\n\n<p>Chương trình trên khi ta nhập vào mảng A một dãy các kí tự là \"abc\" thì khi gap hàm strcpy(B,A); thì nó sẽ copy 3 kí tự \"abc\" từ mảng A vào mảng B.</p>\n\n<p>Nếu chúng ta muốn copy n kí tự từ chuỗi nguồn vào chuỗi đích ta dùng hàm sau:</p>\n\n<p><strong>2.Hàm strncpy:</strong></p>\n\n<ul>\n<li><p>Công dụng: sao chép n kí tự đầu tiên của chuỗi nguồn vào chuỗi đích.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strncpy(char *dich, char *nguon,int n);</code></pre>\n\n<p><strong>3.Hàm strlen:</strong></p>\n\n<ul>\n<li><p>Công dụng :cho biết độ dài của chuỗi s</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">int strlen(char *s)</code></pre>\n\n<ul><li>Ví dụ: Sử dụng hàm strlen xác định độ dài một chuỗi nhập từ bàn phím.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255];\n    int Dodai;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    Dodai = strlen(Chuoi);\n    printf(\"Chuoi vua nhap:\");\n    puts(Chuoi);\n    printf(\"Co do_dai\n           %d\",Dodai);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>4.Hàm strcat:</strong></p>\n\n<ul>\n<li><p>Công dụng: ghép chuỗi nguồn vào sau chuỗi đích.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strcat(char *dich,char *nguon)</code></pre>\n\n<ul><li>Ví dụ: Nhập vào họ lót và tên của một người, sau đó in cả họ và tên của họ lên màn hình.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char HoLot[30], Ten[12];\n    printf(\"Nhap Ho Lot: \");\n    gets(HoLot);\n    printf(\"Nhap Ten: \");\n    gets(Ten);\n    strcat(HoLot,Ten); /* Ghep Ten vao HoLot*/\n    printf(\"Ho ten la: \");\n    puts(HoLot);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>5.Hàm strncat:</strong></p>\n\n<ul>\n<li><p>Công dụng: ghép n kí tự đầu tiên của chuỗi vào sau chuỗi đích</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strncat(char *dich,char *nguon,int n);</code></pre>\n\n<p><strong>6.Hàm strcmp:</strong></p>\n\n<ul>\n<li><p>Công dụng: so sánh 2 chuỗi s1 và s2</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">int strcmp(char *s1,char *s2);</code></pre>\n\n<p>Hàm sẽ  trả về 1 trong các giá trị sau:</p>\n\n<ul>\n<li><p>Giá trị âm<br>nếu chuỗi s1 nhỏ hơn chuỗi s2</p></li>\n<li><p>Giá trị 0 nếu<br>hai chuỗi bằng nhau</p></li>\n<li><p>Giá trị dương nếu chuỗi s1 lớn hơn chuỗi s2</p></li>\n</ul>\n\n<p>Ví dụ: <br></p>\n\n<p></p><pre><code class=\"lang-auto\">char *chu1 = \"aaa\", *chu2= \"bbb\", *chu3 = \"aaa\"; \nstrcmp(chu1, chu2); //kết quả trả về - 1 \nstrcmp(chu1, chu3); //kết quả trả về 0 \nstrcmp(chu2, chu3); //kết quả trả về 1</code></pre>\n\n<p></p><pre><code class=\"lang-auto\">ví dụ minh họa đây:\n/*\nNhap danh sach ten va sap xep theo thu tu tang dan*/ \n\n#include &lt;stdio.h&gt;\n\n#include &lt;conio.h&gt;\n\n#include &lt;string.h&gt;\n\n#define MAXNUM 5\n\n#define MAXLEN 10\n\nint main(void)\n\n{\n\nchar ten[MAXNUM][MAXLEN]; //mang chuoi\n\nchar *c[MAXNUM]; //mang con tro tro den chuoi\n\nchar *ct;\n\nint i, j, n = 0;\n\n//nhap danh sach ten\n\nwhile (n &lt; MAXNUM)\n\n{\n\nprintf(\"Nhap vao ten nguoi thu %d: \",n + 1);\n\ngets(ten[n]);\n\nc[n++] = ten[n]; //con tro den ten\n\n}\n\n//sap xep danh sach theo thu tu tang dan\n\nfor (i = 0; i &lt; n - 1; i ++)\n\nfor (j = i + 1; j &lt; n; j ++)\n\nif (strcmp(c[i], c[j]) &gt; 0)\n\n{\n\nct = c[i];\n\nc[i] = c[j];\n\nc[j] = ct;\n\n}\n\n//In danh sach da sap xep\n\nprintf(\"Danh sach sau khi sap xep:\\n\");\n\nfor (i = 0; i &lt; n; i ++)\n\nprintf(\"Ten nguoi thu %d : %s\\n\", i + 1, c[i]);\n\ngetch();\n\n}</code></pre>\n\n<p><strong>7.Hàm strlwr:</strong></p>\n\n<ul>\n<li><p>Công dụng: chuyển tất cả các kí tự chuỗi về chữ thường</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strlwr(char *s);</code></pre>\n\n<p><strong>8.Hàm strupr :</strong></p>\n\n<ul>\n<li><p>Công dụng: chuyển tất cả các kí tự chuỗi thường về chữ hoa          </p></li>\n<li><p>Cấu trúc: </p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strupr(char *s)</code></pre>\n\n<pre><code></code></pre>\n\n<ul><li>Ví dụ: Viết chương trình nhập vào một chuỗi ký tự từ bàn phím. Sau đó sử dụng hàm strupr(); để chuyển đổi chúng thành chuỗi chữ hoa.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255],*s;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    s=strupr(Chuoi) ;\n    printf(\"Chuoi chu hoa:\");\n    puts(s);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>9.Hàm strrev :</strong></p>\n\n<ul>\n<li><p>Công dụng: đảo ngược chuỗi kí tự</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">char *strrev(char *s);</code></pre>\n</li>\n</ul>\n\n<p><strong>10.Hàm strchr:</strong></p>\n\n<ul>\n<li><p>Công dụng: trả về địa chỉ vị trí xuất hiện đầu tiên của kí tự ch trong chữ s và sẽ trả về giá trị<br>NULL trong trường hợp không tìm thấy.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strchr(char *s,char ch);</code></pre>\n\n<p><strong>11.Hàm strrchr:</strong></p>\n\n<ul><li>Cấu trúc:</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strrchr(char *s,char ch);</code></pre>\n\n<ul><li>Công dụng: trả về địachỉ vị trí xuất hiện cuối cùng của kí tự ch trong chuỗi s. Nếu không tìm thấy hàm sẽ trả về giá trị NULL </li></ul>\n\n<p><strong>12.Hàm strstr:</strong></p>\n\n<ul>\n<li><p>Công dụng: trả về địa chỉ vị trí xuất hiện đầu tiên của chuỗi s1 trong chuỗi s và sẽ trả về giá trị NULL trong trường hợp không tìm thấy.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strstr(char *s, char *s1);</code></pre>\n\n<p>Ví dụ: Viết chương trình sử dụng hàm strstr() để lấy ra một phần của chuỗi gốc bắt đầu từ chuỗi “hoc”.</p>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255],*s;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    s=strstr(Chuoi,\"hoc\");\n    printf(\"Chuoi trich ra:\");\n    puts(s);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>13. Hàm memset</strong></p>\n\n<ul>\n<li><p>Công dụng: Set num byte nhớ từ vị trí được trỏ tới bằng giá trị value </p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">void *memset (void *ptr, int value, size_t num);</code></pre>\n</li>\n</ul>\n\n<p><strong>14. Hàm memcpy</strong></p>\n\n<ul>\n<li><p>Công dụng: Chép num byte từ vị trí mà source trỏ tới đến vị trí mà destination trỏ tới</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">void *memcpy (void *destination, const void *source, size_t num);</code></pre>\n</li>\n</ul>\n\n<p><strong>15. Hàm memcmp</strong></p>\n\n<ul>\n<li><p>Công dụng: So sánh giá trị các vùng nhớ mà ptr1 và ptr2 trỏ tới theo từng byte, sẽ dừng lại khi so sánh đủ num byte. Trả về -1 khi byte đầu tiên mà không trùng nhau của 2 vùng so sánh của ptr1 nhỏ hơn ptr2, trả về 0 khi 2 vùng nhớ bằng nhau, trả về 1 khi byte đầu tiên mà không trùng nhau của 2 vùng so sánh của ptr1 lớn hơn ptr2</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">int memcmp(const void *ptr1, const void *ptr2, size_t num);</code></pre>\n</li>\n</ul>\n","raw":"---json\n{\"id\":2052,\"layout\":\"Post\",\"route\":\"wiki-cac-ham-xu-ly-chuoi-thong-dung-trong-c-c\",\"title\":\"[Wiki] Các hàm xử lý chuỗi thông dụng trong C/C++\",\"tags\":[\"c++\",\"c\"],\"date\":\"2014-11-28T07:24:32.811Z\",\"views\":33243,\"likes\":39,\"description\":\"Mình xin thảo luận về công dụng của các hàm thường sử dụng trong chuỗi: \\n\\nChú ý khi sử dụng các hàm này ta phải khai báo thư viện #include…\",\"author\":{\"name\":\"passion\",\"avatar\":\"/letter_avatar_proxy/v2/letter/q/13edae/{size}.png\",\"username\":\"quanpham\"}}\n---\n\n<p>Mình xin thảo luận về công dụng của các hàm thường sử dụng trong chuỗi: </p>\n\n<p>Chú ý khi sử dụng các hàm này ta phải khai báo thư viện <code>#include \"string.h\"</code></p>\n\n<p><strong>1.Hàm strcpy:</strong></p>\n\n<ul>\n<li><p>Công dụng: sao chép chuỗi nguồn vào chuỗi đích.</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">char*strcpy(char *dich, char *nguon);</code></pre>\n</li>\n</ul>\n\n<p>Có nghĩa là khi ta nhập vào một dãy các kí tự ở chuỗi nguồn thì nó sẽ sao chép tất cả các kí tự vừa nhập vào cái chuỗi đích. </p>\n\n<ul><li>ví dụ như sau:</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char A[255],B[255];\n    printf(\"Nhap chuoi: \");\n    gets(A);\n    strcpy(B,A);\n    printf(\"Chuoi dich: \");\n    puts(B);\n    getch();\n    return 0;\n}</code></pre>\n\n<p>Chương trình trên khi ta nhập vào mảng A một dãy các kí tự là \"abc\" thì khi gap hàm strcpy(B,A); thì nó sẽ copy 3 kí tự \"abc\" từ mảng A vào mảng B.</p>\n\n<p>Nếu chúng ta muốn copy n kí tự từ chuỗi nguồn vào chuỗi đích ta dùng hàm sau:</p>\n\n<p><strong>2.Hàm strncpy:</strong></p>\n\n<ul>\n<li><p>Công dụng: sao chép n kí tự đầu tiên của chuỗi nguồn vào chuỗi đích.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strncpy(char *dich, char *nguon,int n);</code></pre>\n\n<p><strong>3.Hàm strlen:</strong></p>\n\n<ul>\n<li><p>Công dụng :cho biết độ dài của chuỗi s</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">int strlen(char *s)</code></pre>\n\n<ul><li>Ví dụ: Sử dụng hàm strlen xác định độ dài một chuỗi nhập từ bàn phím.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255];\n    int Dodai;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    Dodai = strlen(Chuoi);\n    printf(\"Chuoi vua nhap:\");\n    puts(Chuoi);\n    printf(\"Co do_dai\n           %d\",Dodai);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>4.Hàm strcat:</strong></p>\n\n<ul>\n<li><p>Công dụng: ghép chuỗi nguồn vào sau chuỗi đích.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strcat(char *dich,char *nguon)</code></pre>\n\n<ul><li>Ví dụ: Nhập vào họ lót và tên của một người, sau đó in cả họ và tên của họ lên màn hình.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char HoLot[30], Ten[12];\n    printf(\"Nhap Ho Lot: \");\n    gets(HoLot);\n    printf(\"Nhap Ten: \");\n    gets(Ten);\n    strcat(HoLot,Ten); /* Ghep Ten vao HoLot*/\n    printf(\"Ho ten la: \");\n    puts(HoLot);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>5.Hàm strncat:</strong></p>\n\n<ul>\n<li><p>Công dụng: ghép n kí tự đầu tiên của chuỗi vào sau chuỗi đích</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strncat(char *dich,char *nguon,int n);</code></pre>\n\n<p><strong>6.Hàm strcmp:</strong></p>\n\n<ul>\n<li><p>Công dụng: so sánh 2 chuỗi s1 và s2</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">int strcmp(char *s1,char *s2);</code></pre>\n\n<p>Hàm sẽ  trả về 1 trong các giá trị sau:</p>\n\n<ul>\n<li><p>Giá trị âm<br>nếu chuỗi s1 nhỏ hơn chuỗi s2</p></li>\n<li><p>Giá trị 0 nếu<br>hai chuỗi bằng nhau</p></li>\n<li><p>Giá trị dương nếu chuỗi s1 lớn hơn chuỗi s2</p></li>\n</ul>\n\n<p>Ví dụ: <br></p>\n\n<p></p><pre><code class=\"lang-auto\">char *chu1 = \"aaa\", *chu2= \"bbb\", *chu3 = \"aaa\"; \nstrcmp(chu1, chu2); //kết quả trả về - 1 \nstrcmp(chu1, chu3); //kết quả trả về 0 \nstrcmp(chu2, chu3); //kết quả trả về 1</code></pre>\n\n<p></p><pre><code class=\"lang-auto\">ví dụ minh họa đây:\n/*\nNhap danh sach ten va sap xep theo thu tu tang dan*/ \n\n#include &lt;stdio.h&gt;\n\n#include &lt;conio.h&gt;\n\n#include &lt;string.h&gt;\n\n#define MAXNUM 5\n\n#define MAXLEN 10\n\nint main(void)\n\n{\n\nchar ten[MAXNUM][MAXLEN]; //mang chuoi\n\nchar *c[MAXNUM]; //mang con tro tro den chuoi\n\nchar *ct;\n\nint i, j, n = 0;\n\n//nhap danh sach ten\n\nwhile (n &lt; MAXNUM)\n\n{\n\nprintf(\"Nhap vao ten nguoi thu %d: \",n + 1);\n\ngets(ten[n]);\n\nc[n++] = ten[n]; //con tro den ten\n\n}\n\n//sap xep danh sach theo thu tu tang dan\n\nfor (i = 0; i &lt; n - 1; i ++)\n\nfor (j = i + 1; j &lt; n; j ++)\n\nif (strcmp(c[i], c[j]) &gt; 0)\n\n{\n\nct = c[i];\n\nc[i] = c[j];\n\nc[j] = ct;\n\n}\n\n//In danh sach da sap xep\n\nprintf(\"Danh sach sau khi sap xep:\\n\");\n\nfor (i = 0; i &lt; n; i ++)\n\nprintf(\"Ten nguoi thu %d : %s\\n\", i + 1, c[i]);\n\ngetch();\n\n}</code></pre>\n\n<p><strong>7.Hàm strlwr:</strong></p>\n\n<ul>\n<li><p>Công dụng: chuyển tất cả các kí tự chuỗi về chữ thường</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strlwr(char *s);</code></pre>\n\n<p><strong>8.Hàm strupr :</strong></p>\n\n<ul>\n<li><p>Công dụng: chuyển tất cả các kí tự chuỗi thường về chữ hoa          </p></li>\n<li><p>Cấu trúc: </p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strupr(char *s)</code></pre>\n\n<pre><code></code></pre>\n\n<ul><li>Ví dụ: Viết chương trình nhập vào một chuỗi ký tự từ bàn phím. Sau đó sử dụng hàm strupr(); để chuyển đổi chúng thành chuỗi chữ hoa.</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255],*s;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    s=strupr(Chuoi) ;\n    printf(\"Chuoi chu hoa:\");\n    puts(s);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>9.Hàm strrev :</strong></p>\n\n<ul>\n<li><p>Công dụng: đảo ngược chuỗi kí tự</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">char *strrev(char *s);</code></pre>\n</li>\n</ul>\n\n<p><strong>10.Hàm strchr:</strong></p>\n\n<ul>\n<li><p>Công dụng: trả về địa chỉ vị trí xuất hiện đầu tiên của kí tự ch trong chữ s và sẽ trả về giá trị<br>NULL trong trường hợp không tìm thấy.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strchr(char *s,char ch);</code></pre>\n\n<p><strong>11.Hàm strrchr:</strong></p>\n\n<ul><li>Cấu trúc:</li></ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strrchr(char *s,char ch);</code></pre>\n\n<ul><li>Công dụng: trả về địachỉ vị trí xuất hiện cuối cùng của kí tự ch trong chuỗi s. Nếu không tìm thấy hàm sẽ trả về giá trị NULL </li></ul>\n\n<p><strong>12.Hàm strstr:</strong></p>\n\n<ul>\n<li><p>Công dụng: trả về địa chỉ vị trí xuất hiện đầu tiên của chuỗi s1 trong chuỗi s và sẽ trả về giá trị NULL trong trường hợp không tìm thấy.</p></li>\n<li><p>Cấu trúc:</p></li>\n</ul>\n\n<p></p><pre><code class=\"lang-auto\">char *strstr(char *s, char *s1);</code></pre>\n\n<p>Ví dụ: Viết chương trình sử dụng hàm strstr() để lấy ra một phần của chuỗi gốc bắt đầu từ chuỗi “hoc”.</p>\n\n<p></p><pre><code class=\"lang-auto\">#include&lt;conio.h&gt;\n#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    char Chuoi[255],*s;\n    printf(\"Nhap chuoi: \");\n    gets(Chuoi);\n    s=strstr(Chuoi,\"hoc\");\n    printf(\"Chuoi trich ra:\");\n    puts(s);\n    getch();\n    return 0;\n}</code></pre>\n\n<p><strong>13. Hàm memset</strong></p>\n\n<ul>\n<li><p>Công dụng: Set num byte nhớ từ vị trí được trỏ tới bằng giá trị value </p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">void *memset (void *ptr, int value, size_t num);</code></pre>\n</li>\n</ul>\n\n<p><strong>14. Hàm memcpy</strong></p>\n\n<ul>\n<li><p>Công dụng: Chép num byte từ vị trí mà source trỏ tới đến vị trí mà destination trỏ tới</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">void *memcpy (void *destination, const void *source, size_t num);</code></pre>\n</li>\n</ul>\n\n<p><strong>15. Hàm memcmp</strong></p>\n\n<ul>\n<li><p>Công dụng: So sánh giá trị các vùng nhớ mà ptr1 và ptr2 trỏ tới theo từng byte, sẽ dừng lại khi so sánh đủ num byte. Trả về -1 khi byte đầu tiên mà không trùng nhau của 2 vùng so sánh của ptr1 nhỏ hơn ptr2, trả về 0 khi 2 vùng nhớ bằng nhau, trả về 1 khi byte đầu tiên mà không trùng nhau của 2 vùng so sánh của ptr1 lớn hơn ptr2</p></li>\n<li>\n<p>Cấu trúc:<br></p>\n<p></p>\n<pre><code class=\"lang-auto\">int memcmp(const void *ptr1, const void *ptr2, size_t num);</code></pre>\n</li>\n</ul>\n","__filename":"posts/2052.md","__url":"/wiki-cac-ham-xu-ly-chuoi-thong-dung-trong-c-c/","__resourceUrl":"/wiki-cac-ham-xu-ly-chuoi-thong-dung-trong-c-c/index.html","__dataUrl":"/wiki-cac-ham-xu-ly-chuoi-thong-dung-trong-c-c/index.html.60ced4b0cfcf1bc1cff29ab7c6326f10.json"}