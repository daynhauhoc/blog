{"head":{"id":1147,"layout":"Post","route":"wiki-sort-c-b-n-1-insert-sort-s-p-x-p-chen","title":"[Wiki] Sort cơ bản 1 - Insert Sort - Sắp xếp chèn","tags":["algorithm","c","wiki"],"date":"2014-11-02T09:23:53.502Z","views":1894,"likes":29,"description":"Ngồi rảnh rảnh nghiên cứu lại giải thuật đã bỏ từ lâu. Bắt đầu với Insert sort.\n  \n    \n      vi.wikipedia.org\n    \n  \n  \n    \n\nSắp xếp chèn…","author":{"name":"Lê Trần Đạt","avatar":"/user_avatar/daynhauhoc.com/ltd/{size}/1016_1.png","username":"ltd"}},"body":"\n<p>Ngồi rảnh rảnh nghiên cứu lại giải thuật đã bỏ từ lâu. Bắt đầu với <code>Insert sort</code>.<br><aside class=\"onebox wikipedia\">\n  <header class=\"source\">\n    <a href=\"http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_ch%C3%A8n\">\n      vi.wikipedia.org\n    </a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Insertion-sort-example-300px.gif/280px-Insertion-sort-example-300px.gif\" class=\"thumbnail\" width=\"280\" height=\"168\">\n\n<h3><a href=\"http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_ch%C3%A8n\">Sắp xếp chèn</a></h3>\n\n<p>Sắp xếp chèn (insertion sort) là một thuật toán sắp xếp bắt chước cách sắp xếp quân bài của những người chơi bài. Muốn sắp một bộ bài theo trật tự người chơi bài rút lần lượt từ quân thứ 2, so với các quân đứng trước nó để chèn vào vị trí thích hợp.   Cơ sở lập luận của sắp xếp chèn có thể mô tả như sau: Xét danh sách con gồm k phần tử đầu . Với k = 1, danh sách gồm một phần tử đã được sắp. Giả sử trong danh sách k-1 phần tử đầu  đã được sắp. Để sắp xếp phần tử  ta tìm vị trí thích hợp của nó tro...</p>\n\n  </article>\n  <div style=\"clear: both\"></div>\n</aside>\n<br>Hình ảnh minh họa:<br><img src=\"http://daynhauhoc.com/uploads/default/2911/508cdbf45998d47f.gif\" width=\"280\" height=\"168\"></p>\n\n<p>Coi video này để lấy ý tưởng về <code>Insert sort</code><br>Video 1:</p>\n\n<div class=\"lazyYT\" data-youtube-id=\"DFG-XuyPYUQ\" data-youtube-title=\"Insertion Sort\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>\n\n<p>Video 2: </p>\n\n<div class=\"lazyYT\" data-youtube-id=\"ROalU379l3U\" data-youtube-title=\"Insert-sort with Romanian folk dance\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>\n\n<p>Code lại bằng C<br></p>\n\n<p></p><pre><code class=\"lang-auto\">#include &lt;stdio.h&gt;\n\nint main()\n{\n    int length = 5;\n    int array[] = {5,2,4,3,1};\n    for(int unsorted_id = 1; unsorted_id &lt; length; unsorted_id++) {\n        int element = array[unsorted_id];\n        int sorted_id = unsorted_id - 1;\n        while(sorted_id &gt;= 0 &amp;&amp; element &gt; array[sorted_id]) {\n            array[sorted_id+1] = array[sorted_id]; // shift\n            sorted_id--;\n        }\n        array[sorted_id+1] = element; // insert\n    }\n\n    //output\nfor(int i = 0; i &lt; length; ++i)\n    printf(\"%d \", array[i]);\nreturn 0;\n}</code></pre>\n\n<p>Độ phức tạp O(n2)</p>\n","rawBody":"\n<p>Ngồi rảnh rảnh nghiên cứu lại giải thuật đã bỏ từ lâu. Bắt đầu với <code>Insert sort</code>.<br><aside class=\"onebox wikipedia\">\n  <header class=\"source\">\n    <a href=\"http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_ch%C3%A8n\">\n      vi.wikipedia.org\n    </a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Insertion-sort-example-300px.gif/280px-Insertion-sort-example-300px.gif\" class=\"thumbnail\" width=\"280\" height=\"168\">\n\n<h3><a href=\"http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_ch%C3%A8n\">Sắp xếp chèn</a></h3>\n\n<p>Sắp xếp chèn (insertion sort) là một thuật toán sắp xếp bắt chước cách sắp xếp quân bài của những người chơi bài. Muốn sắp một bộ bài theo trật tự người chơi bài rút lần lượt từ quân thứ 2, so với các quân đứng trước nó để chèn vào vị trí thích hợp.   Cơ sở lập luận của sắp xếp chèn có thể mô tả như sau: Xét danh sách con gồm k phần tử đầu . Với k = 1, danh sách gồm một phần tử đã được sắp. Giả sử trong danh sách k-1 phần tử đầu  đã được sắp. Để sắp xếp phần tử  ta tìm vị trí thích hợp của nó tro...</p>\n\n  </article>\n  <div style=\"clear: both\"></div>\n</aside>\n<br>Hình ảnh minh họa:<br><img src=\"http://daynhauhoc.com/uploads/default/2911/508cdbf45998d47f.gif\" width=\"280\" height=\"168\"></p>\n\n<p>Coi video này để lấy ý tưởng về <code>Insert sort</code><br>Video 1:</p>\n\n<div class=\"lazyYT\" data-youtube-id=\"DFG-XuyPYUQ\" data-youtube-title=\"Insertion Sort\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>\n\n<p>Video 2: </p>\n\n<div class=\"lazyYT\" data-youtube-id=\"ROalU379l3U\" data-youtube-title=\"Insert-sort with Romanian folk dance\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>\n\n<p>Code lại bằng C<br></p>\n\n<p></p><pre><code class=\"lang-auto\">#include &lt;stdio.h&gt;\n\nint main()\n{\n    int length = 5;\n    int array[] = {5,2,4,3,1};\n    for(int unsorted_id = 1; unsorted_id &lt; length; unsorted_id++) {\n        int element = array[unsorted_id];\n        int sorted_id = unsorted_id - 1;\n        while(sorted_id &gt;= 0 &amp;&amp; element &gt; array[sorted_id]) {\n            array[sorted_id+1] = array[sorted_id]; // shift\n            sorted_id--;\n        }\n        array[sorted_id+1] = element; // insert\n    }\n\n    //output\nfor(int i = 0; i &lt; length; ++i)\n    printf(\"%d \", array[i]);\nreturn 0;\n}</code></pre>\n\n<p>Độ phức tạp O(n2)</p>\n","raw":"---json\n{\"id\":1147,\"layout\":\"Post\",\"route\":\"wiki-sort-c-b-n-1-insert-sort-s-p-x-p-chen\",\"title\":\"[Wiki] Sort cơ bản 1 - Insert Sort - Sắp xếp chèn\",\"tags\":[\"algorithm\",\"c\",\"wiki\"],\"date\":\"2014-11-02T09:23:53.502Z\",\"views\":1894,\"likes\":29,\"description\":\"Ngồi rảnh rảnh nghiên cứu lại giải thuật đã bỏ từ lâu. Bắt đầu với Insert sort.\\n  \\n    \\n      vi.wikipedia.org\\n    \\n  \\n  \\n    \\n\\nSắp xếp chèn…\",\"author\":{\"name\":\"Lê Trần Đạt\",\"avatar\":\"/user_avatar/daynhauhoc.com/ltd/{size}/1016_1.png\",\"username\":\"ltd\"}}\n---\n\n<p>Ngồi rảnh rảnh nghiên cứu lại giải thuật đã bỏ từ lâu. Bắt đầu với <code>Insert sort</code>.<br><aside class=\"onebox wikipedia\">\n  <header class=\"source\">\n    <a href=\"http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_ch%C3%A8n\">\n      vi.wikipedia.org\n    </a>\n  </header>\n  <article class=\"onebox-body\">\n    <img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Insertion-sort-example-300px.gif/280px-Insertion-sort-example-300px.gif\" class=\"thumbnail\" width=\"280\" height=\"168\">\n\n<h3><a href=\"http://vi.wikipedia.org/wiki/S%E1%BA%AFp_x%E1%BA%BFp_ch%C3%A8n\">Sắp xếp chèn</a></h3>\n\n<p>Sắp xếp chèn (insertion sort) là một thuật toán sắp xếp bắt chước cách sắp xếp quân bài của những người chơi bài. Muốn sắp một bộ bài theo trật tự người chơi bài rút lần lượt từ quân thứ 2, so với các quân đứng trước nó để chèn vào vị trí thích hợp.   Cơ sở lập luận của sắp xếp chèn có thể mô tả như sau: Xét danh sách con gồm k phần tử đầu . Với k = 1, danh sách gồm một phần tử đã được sắp. Giả sử trong danh sách k-1 phần tử đầu  đã được sắp. Để sắp xếp phần tử  ta tìm vị trí thích hợp của nó tro...</p>\n\n  </article>\n  <div style=\"clear: both\"></div>\n</aside>\n<br>Hình ảnh minh họa:<br><img src=\"http://daynhauhoc.com/uploads/default/2911/508cdbf45998d47f.gif\" width=\"280\" height=\"168\"></p>\n\n<p>Coi video này để lấy ý tưởng về <code>Insert sort</code><br>Video 1:</p>\n\n<div class=\"lazyYT\" data-youtube-id=\"DFG-XuyPYUQ\" data-youtube-title=\"Insertion Sort\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>\n\n<p>Video 2: </p>\n\n<div class=\"lazyYT\" data-youtube-id=\"ROalU379l3U\" data-youtube-title=\"Insert-sort with Romanian folk dance\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed&amp;wmode=opaque\"></div>\n\n<p>Code lại bằng C<br></p>\n\n<p></p><pre><code class=\"lang-auto\">#include &lt;stdio.h&gt;\n\nint main()\n{\n    int length = 5;\n    int array[] = {5,2,4,3,1};\n    for(int unsorted_id = 1; unsorted_id &lt; length; unsorted_id++) {\n        int element = array[unsorted_id];\n        int sorted_id = unsorted_id - 1;\n        while(sorted_id &gt;= 0 &amp;&amp; element &gt; array[sorted_id]) {\n            array[sorted_id+1] = array[sorted_id]; // shift\n            sorted_id--;\n        }\n        array[sorted_id+1] = element; // insert\n    }\n\n    //output\nfor(int i = 0; i &lt; length; ++i)\n    printf(\"%d \", array[i]);\nreturn 0;\n}</code></pre>\n\n<p>Độ phức tạp O(n2)</p>\n","__filename":"posts/1147.md","__url":"/wiki-sort-c-b-n-1-insert-sort-s-p-x-p-chen/","__resourceUrl":"/wiki-sort-c-b-n-1-insert-sort-s-p-x-p-chen/index.html","__dataUrl":"/wiki-sort-c-b-n-1-insert-sort-s-p-x-p-chen/index.html.61466ea47b1af7ba42a5107f0765360b.json"}