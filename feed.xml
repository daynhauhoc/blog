<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[daynhauhoc-blog]]></title><description><![CDATA[daynhauhoc-blog]]></description><link>http://blog.daynhauhoc.com</link><generator>RSS for Node</generator><lastBuildDate>Sun, 03 Apr 2016 20:35:49 GMT</lastBuildDate><atom:link href="http://blog.daynhauhoc.com/feed.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[Văn hóa chửi thề]]></title><description><![CDATA[
<p>Ngày nay, ra đường không khó để bắt gặp những thanh niên chửi thề, trong đó có cả mình (được chưa). Ở trường lớp, nội quy cấm chửi thề có thể cho là cực kỳ vô dụng. <br>Theo bản thân mình thì không chửi thề cũng không xấu xa cho lắm (có đứa khen mình chửi thề trông dễ thương <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=2" title=":smile:" class="emoji" alt=":smile:">) <br>Không nên đánh giá văn hóa và trình độ của con người đó qua việc người đó chửi thề. Mình không biết các bạn thế nào chứ chửi thể cũng có một vài tác dụng: <br>- Giải tỏa căng thẳng <br>- Nhấn mạnh cảm xúc, gây sự chú ý bên người xung quanh khi nghe câu nói của mình <br>- Những cơn đau có thể dịu bớt <br>- Tăng không khí vui tươi, cách nói chuyện bạn bè trở nên gần gũi hơn. <br>cmnr, dhs, wtf, vl, dm, .... <br>Nhưng không có nghĩa là lúc nào cũng được chửi thề nhé các bạn, mình không khuyến khích các bạn phải chửi thề đâu, đó chỉ là ý kiến của bản thân mình...</p>
]]></description><link>http://blog.daynhauhoc.com/van-hoa-chui-the/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/van-hoa-chui-the/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sun, 03 Apr 2016 03:57:31 GMT</pubDate></item><item><title><![CDATA[Kỹ năng sống: nếu các bạn thật sự muốn thay đổi suy nghĩ và cách sống tiêu cực của mình thì nên đọc(chỉ cần bỏ ra 9 phút đọc và 1 phút ngẫm thôi)]]></title><description><![CDATA[
<p>Vào mỗi chiếu thứ 6 hàng tuần khoảng 5:30 PM mình sẽ post 1 chủ đề về kỹ năng sống và những suy nghĩ của giới trẻ hiện nay.Mình chỉ là 1 con người bình thường thôi không tài giỏi gì cả,nhưng mình luôn mong muốn xã hội sẽ phát triển theo chiều hướng tốt đẹp và hình ảnh người Việt trong mắt bạn bè quốc tế sẽ khác đi.Các bạn có thể không xem,có thể bàn luận,nhưng khi đọc nó mình mong các bạn hãy bỏ ra 1 phút(chỉ 1 phút thôi và suy ngẫm về nó).Ok vậy chúng ta bắt đầu câu chuyện nào.Chủ đề hôm nay rất gần gũi với chúng ta trong công việc cũng như trong cuộc sống hằng ngày.Đó là lời cảm ơn và xin lỗi.Dưới đây là bài trích dẫn và là tâm sự của 1 bạn tên Mẫn về vấn đề này.<br>Cám ơn và xin lỗi là một biểu hiện văn hóa, là thái độ văn minh, lịch sự trong quan hệ xã hội. Lời cám ơn và xin lỗi khi được nói một cách chân thành, chẳng những phản ảnh phẩm chất văn hóa mà còn làm cho mọi người xích lại gần nhau hơn.</p>

<p>Lời cám ơn hay lời xin lỗi không chỉ đem niềm vui tới người nhận, chúng còn giải tỏa những khúc mắc, làm dịu đi những cơn nóng giận, và con người cũng nhờ đó mà sống vị tha hơn.<br>Trước đây, việc nói lời cám ơn hay xin lỗi nhau là chuyện bình thường, cám ơn và xin lỗi trở thành một trong các chuẩn mực để đánh giá tư cách của một người. Tiếc rằng những năm gần đây, lời cám ơn và xin lỗi như có xu hướng giảm xuống trong giao tiếp xã hội.<br>Có người cho rằng, nguyên nhân của tình trạng này là do sự lỏng lẻo của chuẩn mực ứng xử, cũng có người cho rằng, đời sống công nghiệp hóa làm con người thay đổi, hay do bản tính của con người không quen với hai từ cám ơn và xin lỗi,...<br>Cuộc sống công nghiệp hiện tại đã làm con người ta thay đổi quá nhiều, và trong bản tính của mỗi người, không phải lúc nào cũng biết đến hai từ cám ơn và xin lỗi. Nhưng có bao giờ ai đặt ra câu hỏi: cuộc sống Phương Tây còn nhanh gấp bội chúng ta, tại sao họ vẫn có thể nói được những điều ấy và chả lẽ họ luôn ngượng và coi chuyện nói điều đó ra là giả dối như chúng ta vẫn nghĩ? Vấn đề là lối sống và giáo dục, mà hình như từ lâu, người ta đã dạy con trẻ những điều này một cách máy móc và giáo điều trong những cuốn “Giáo dục công dân”, mà những tiết học “Giáo dục công dân” lại là được những người có trách nhiệm biến thành những giờ học buồn tẻ.<br>Trong xã hội này, thứ văn hóa cám ơn và xin lỗi đã không tồn tại, hoặc thực tế tồn tại không chân thực và bị lợi dụng. Người ta cám ơn không bằng lời nói mà bằng phong bì, và những kẻ mắc sai lầm nghiêm trọng chỉ nói xin lỗi một cách ráo hoảnh cho xong chuyện và rồi vẫn giữ cái ghế của mình.<br>Tuy nhiên tôi nghĩ, vẫn còn một nguyên nhân nữa là lâu nay, như một thói quen, thường thì chỉ có con cái xin lỗi hay cám ơn cha mẹ, người ít tuổi xin lỗi hay cám ơn người lớn tuổi, mà nhiều người lớn tuổi không chú ý tới việc cám ơn hay xin theo chiều ngược lại. Trong giao tiếp xã hội, nhất là trong giao tiếp nơi công cộng, người lớn tuổi hơn ít khi nói lời xin lỗi hay cám ơn cho dù họ nhận được sự giúp đỡ, hay hành vi của họ gây phiền phức cho người khác. Các em nhỏ khi nhận được sự giúp đỡ hay sau khi mắc lỗi thường không ngần ngại nói lời xin lỗi hay cám ơn, nhưng càng lớn lên thì thói quen này dường như đã mất dần, đó là vì các em học nói lời cám ơn và xin lỗi không chỉ qua bài học giáo dục công dân(đạo đức) hoặc qua lời dạy bảo của cha mẹ, mà còn học trực tiếp qua tấm gương của những người lớn nửa?<br>Xin lỗi khi mình có lỗi là chuyện bình thường, và mỗi người có cách giải quyết lỗi lầm của mình khác nhau. Có người nhận sai lầm, xin lỗi rồi sửa sai; lại có người biết là sai lầm nhưng không dám nhận, hoặc nhận nhưng không chịu sửa và không hề biết nói lời xin lỗi. Biết nói và sử dụng lời cám ơn hay lời xin lỗi là biểu hiện của nhận thức, của việc thực hiện hành vi văn minh. Ðể các lời nói thân thiện này trở thành thói quen trong đời sống hằng ngày, chúng ta cần nhận thức cụ thể hơn, để xử sự có văn hóa hơn trong giao tiếp. Biết nói lời cám ơn và xin lỗi một cách chân thành là một biểu hiện phẩm chất và trình độ văn hóa của mỗi người. Tất nhiên, nói như thế nhưng cũng phải loại trừ những lời cám ơn hay xin lỗi không thật lòng, để cho qua chuyện<br>Ngay từ khi còn nhỏ, chúng ta đã được dạy nói“cám ơn”khi có"người khác giúp ta việc gì hay cho ta thứ gì đó. Lời cám ơn sẻ làm người nghe cảm thấy vui hơn.<br>Rồi chúng ta cũng được dạy nói “xin lỗi” khi ta vô ý làm tổn thương đến ai đó, hay vô tình làm ảnh hưởng đến người khác. Lời xin lỗi được nói ra làm cho người được xin lỗi cũng cảm thấy thoải mái và dễ tha thứ hơn.<br>Tuy vậy bây giờ chúng ta thường có thói quen chỉ cám ơn khi đem lợi ích cho chính mình. Tôi nhớ một câu chuyện nho nhỏ về cách cám ơn . Đó là khi bạn được một người khác mời một thứ gì đó như ” Bạn có muốn một ly cafe không?”. Thường câu trả trả lời là “Không”(không có cám ơn), chỉ khi ta muốn thì mới nói “Có, cám ơn” trong khi đáng lẻ chúng ta nên nói “Không, tôi uống rồi, cám ơn bạn”<br>Ra đường hỏi đường bác xe ôm nhưng lại quên mất cám ơn khi đã biết đường, đánh rơi đồ vật trên đường người khác nhặt dùm lại quên cám ơn. Người quyền cao mà đức thấp thường dựa vào địa vị của mình và coi thường người khác. Họ không chấp nhận việc nói lời “cám ơn” với những người có địa vị thấp hơn mình. Hãy thử nhớ xem khi bạn vào một siêu thị chú bảo vệ dắt xe dùm bạn, bạn có “cám ơn” người ta không. Nhiều bạn nghĩ đó là công việc của người ta, họ trả tiền để làm như vậy nhưng bạn lại quên là họ cũng đang giúp bạn đó thôi. Và còn rất nhiều trường hợp khác nữa. Nhiều người nghĩ những chuyện đó quá nhỏ nhặt nên không chú ý mà không biết lời “cám ơn” trong tình huống đó là cần thiết như thế nào.<br>Lời“xin lỗi” cũng vậy, khi lên xe bus vô tình bạn “đụng chạm” đến người khác, tuy rằng không ảnh hưởng nhiều lắm nhưng vẫn rất nhiều bạn “lờ đi” lời xin lỗi. Bạn vội vàng chạy đi đụng người ta làm rớt đồ của người ta rồi lờ đi và chạy luôn.<br>Ngày còn bé bạn được cha mẹ dạy nói “cám ơn – xin lỗi” nhưng càng lớn bạn lại càng quên những lời dạy dỗ ngày xưa. Lời “cám ơn - xin lỗi” tưởng rằng quá nhỏ bé nhưng đó cũng là một “kỹ năng sống, kỹ năng giao tiếp” mà chúng ta nên gìn giữ.<br>Hãy nói cám ơn khi ai đó giúp đỡ bạn và xin lỗi trước những sai lầm của bản thân bạn…dù cho người đó là ai, bình thường đến như thế nào đi chắng nữa.<br>Chẳng hạn khi đi đường va chạm nhau dù vô ý thôi, ứng xử hợp lý hợp tình nhất là người vi phạm phải xin lỗi người kia. Khi nhận được sự giúp đỡ, nên cám ơn để bày tỏ lòng biết ơn của mình và người lớn cần phải làm gương. Nói thì ai cũng cho là như vậy, nhưng thực tế nhiều khi lại không.<br>Nhiều người cho rằng người lớn không cần xin lỗi, cám ơn trẻ em. Đó là một sai lầm! Có những người lớn biết mình sai với con trẻ nhưng cậy thế mình lớn hơn, không những không xin lỗi mà còn lấn át theo kiểu “cả vú lấp miệng em”. Đôi khi ta còn phải chứng kiến cảnh có người thay vì “xin lỗi” lại sử dụng bạo lực.<br>Gần gủi nhất là tình trạng giao thông hiện nay, mỗi khi tham gia giao thông, do đường chật xe đông, người người chen chúc… rất dễ xảy ra va chạm, lời qua tiếng lại càng đẩy sự việc đi xa hơn. Nhưng nếu ai cũng sẳn sàng lời xin lỗi và cám ơn thì tôi chắc chắn mọi chuyện sẻ êm đẹp.<br>Những lời xin lỗi đúng chỗ, đúng lúc chắc chắn ít nhiều cũng làm dịu được cơn “nóng” trong đầu những người… nóng tính, dẫn tới có được những hành xử thân thiện, ngăn chặn được những câu chửi tục dẫn đến ẩu đả và nguy cơ “cái sảy nảy cái ung”, sự việc bé xé ra to…<br>Ông bà ta từ xưa đã dạy: Lời nói không mất tiền mua, lựa lời mà nói cho vừa lòng nhau. Chỉ cần hai tiếng “xin lỗi” được nói lên từ miệng người mắc lỗi, cùng với một thái độ thân thiện (chẳng hạn đỡ người bị ngã dậy, nhặt giúp họ đồ khi ta vô ý đánh rơi…) thì chắc bao nhiêu bực tức trong đầu người kia sẽ được giải toả và thân thiện sẽ thay thế cho “mồi lửa chiến tranh” .<br>Đặc biệt cần những lời xin lỗi đúng chỗ, vì vừa tỏ ra là người văn minh lịch sự, vừa tự biết mình có lỗi để rút kinh nghiệm lần sau không tái phạm nữa.<br>Khi nhận được sự giúp đỡ của người khác (dù việc nhỏ nhặt nhất, là cấp dưới đối với cấp trên, hay trẻ em đối với người lớn…) thì cũng nên nói lời cám ơn. Những lời đó không nên bị coi là khách sáo, mà là sự thể hiện tấm lòng, tình cảm… giữa những con người với nhau. Tôi tin chỉ cần nói lời “cám ơn” mà không cần có “vật chất” kèm theo, ít nhiều mình cũng được đánh giá mình là người biết điều và không phải là kẻ vô ơn.<br>Với trẻ em, cần nhớ rằng: Khi người lớn lịch sự văn minh thì trẻ em sẽ văn minh lịch sự. Nếu người lớn là những tấm gương xấu, thì chắc chắn là trẻ em không thể ngoan được. Mà bây giờ, ai dám khẳng định 100% người lớn đều không “hư” nhỉ?<br>Có văng tục cãi lộn nhau không<br> - có.<br>Có chen lấn nhau không<br>– có.<br>Có bạo lực với nhau không<br>- có…<br>Ngày trước, khi xảy ra bất đồng trong gia đình, người lớn thường cố gắng nói với nhau khi không có trẻ em ở đó. Ngày nay thường thấy hơn lại là cảnh những điều chẳng hay ho gì đó diễn ra ngay trước mặt con trẻ, không một chút e dè. Thế nên trẻ em ít dùng từ “cám ơn”, “xin lỗi” hơn trước cũng là phải. Không những cần dạy trẻ cám ơn khi được người khác giúp đỡ, mà người lớn cũng cần cám ơn con trẻ mỗi khi các em làm được một việc gì đó cho mình….<br>Lịch sự – văn minh không phải tự trên trời rơi xuống là có ngay, mà phải rèn luyện kiên trì, lâu dài mới có. Cần phải bắt đầu từ những việc làm cụ thể, tưởng là nhỏ mà ý nghĩa không nhỏ. Bởi thế, đưa những lời hay, ý đẹp trở lại với cuộc sống đời thường cũng là chuyện cần làm ngay với tất cả chúng ta...<br>Nhiều người nói với tôi, rằng nói những điều đó ra là một sự khách khí và đôi khi, giả tạo và ai cũng "ngài ngại". Cái chính là thực lòng. Ừ, thì một phần sự thừa nhận ấy là đúng, nhưng tại sao con người ta không thể sống xã giao với nhau trong khi điều đó chẳng có gì là giả dối, tại sao chúng ta không thể biết nói lời cám ơn một ai đó và nhận lỗi một ai đó chỉ vì điều đó là nhỏ nhặt nhất, trong khi một cái thùng rác  vẫn còn có dòng chữ “Cám ơn đã bỏ rác vào tôi”? Tôi vẫn tin là những ai đã không biết cám ơn và xin lỗi vì những điều nhỏ nhặt nhất sẽ không thể làm được những điều vĩ đại nhất. <br>Viết đến đây, tôi nhớ đến câu chuyện của Mahatma Gandhi  khi ông ăn trưa trong một quán ăn bình dân, sau khi trả tiền ông nói với người phục vụ lời nói cám ơn, và người phục vụ tâm sự: "Thưa ông, tôi sẽ nhớ ông mãi vì hơn 25 năm phục vụ ở đây, tôi chưa bao giờ nghe ai nói cám ơn". Và tôi cũng mượn lời đó để làm lời kết của bài nầy.</p>
]]></description><link>http://blog.daynhauhoc.com/ky-nang-song-neu-cac-ban-that-su-muon-thay-doi-suy-nghi-va-cach-song-tieu-cuc-cua-minh-thi-nen-doc-chi-can-bo-ra-9-phut-doc-va-1-phut-ngam-thoi/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/ky-nang-song-neu-cac-ban-that-su-muon-thay-doi-suy-nghi-va-cach-song-tieu-cuc-cua-minh-thi-nen-doc-chi-can-bo-ra-9-phut-doc-va-1-phut-ngam-thoi/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Fri, 01 Apr 2016 10:36:13 GMT</pubDate></item><item><title><![CDATA[Lâu Lâu Một Quyển Sách: Đọc Đắc Nhân Tâm Để Internet không bị hủy diệt bởi 11 dòng code]]></title><description><![CDATA[
<p><a href="http://goo.gl/51QH0F">Đắc nhân tâm</a> là một quyển sách mà Đạt nghe về nó cách đây 6 năm, lúc mới nghe tới sách này Đạt nghĩ đây là một quyển sách dành cho người già. <strong>Đạt ngây ngô nghĩ rằng chỉ có người già thì mới cần "đắc nhân tâm"</strong></p>

<ul>
<li><p><strong>Ba năm trước</strong>, Đạt đã đọc xong quyển này và nghĩ rằng đây là một quyển sách dành cho người đi làm. </p></li>
<li><p><strong>Ba năm sau</strong>, tức là bây giờ, khi đọc lại Đạt nghĩ <strong>Ai cũng cần phải đọc nó một lần, nhất là sinh viên.</strong></p></li>
</ul>

<p><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/9/9f567f4f8dddc43215f6f71b92c3ead3351cf09a.png" width="232" height="330"></p>

<p><strong>Điều đầu tiên Đạt cảm nhận khi đọc quyển sách này 3 năm trước là gì?</strong></p>

<blockquote><p>Chỉ có Ngụy Quân Tử mới áp dụng được quyển sách này </p></blockquote>

<p><strong>Ba năm sau, khi đọc lại, Đạt nghĩ</strong></p>

<blockquote><p>Đây là những điều người quân tử, bao dung độ lượng nên làm</p></blockquote>

<p><div class="lightbox-wrapper"><a href="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/9/91f5f6ca503068beebb0330dd65a77ce3934d793.png" class="lightbox" title="Pasted image"><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/optimized/2X/9/91f5f6ca503068beebb0330dd65a77ce3934d793_1_320x500.png" width="320" height="500"><div class="meta">
<span class="filename">Pasted image</span><span class="informations">800x1250 91.5 KB</span><span class="expand"></span>
</div></a></div></p>

<p>Cũng giống như nhiều quyển self-help khác, Đây là một quyển sách cần phải đọc kỹ và <strong>nghiền ngẫm xem tác giả nói có đúng không, có khả thi không, có đáng làm không, có "ngụy quân tử" không?</strong></p>

<p>Khi đọc câu chuyện <a href="http://daynhauhoc.com/t/mot-lap-trinh-vien-trong-con-tuc-gian-vua-huy-diet-internet-chi-bang-11-dong-code/22855">Một lập trình viên trong cơn tức giận vừa "hủy diệt" Internet chỉ bằng 11 dòng code</a>. Đạt nghĩ rằng giá mà cả 2 nhân vật trong câu chuyện trên đã đọc Đắc Nhân Tâm.</p>

<p>Các bạn hãy mua sách giấy ở <a href="http://goo.gl/51QH0F">Tiki</a>, chuẩn bị một cây bút dạ hoặc bút bi, đọc và đánh dấu vào những điểm mình thích nhất và đem lên DayNhauHoc thảo luận, các bạn sẽ thấy ý nghĩa của quyển sách này.</p>

<h2>Đây cũng là quyển sách đầu tiên mà Đạt lấy bút khoanh những đoạn hay trong sách để có thể nhớ và làm theo.</h2>

<hr>

<p>Cũng giống như quyển <a href="http://daynhauhoc.com/t/lau-lau-mot-quyen-sach-think-and-grow-rich-khong-chi-la-sach-lam-giau/21505">Think and Grow Rich</a>. Quyển này Đạt sẽ phân tích và trả lời câu hỏi thắc mắc của các bạn đang đọc.</p>

<hr>

<p><strong>Nội dung phân tích và trả lời câu hỏi sẽ được update ở đây</strong></p>

<ul><li><a href="http://daynhauhoc.com/t/lau-lau-mot-quyen-sach-doc-dac-nhan-tam-de-internet-khong-bi-huy-diet-boi-11-dong-code/22951/20?u=ltd">Chương 1: Muốn lấy mật thì đừng phá tổ ong</a></li></ul>

<ul>
<li>Chương 2</li>
<li>Câu trả lời X</li>
<li>Câu trả lời Y</li>
</ul>

<hr>

<p>Cảm ơn Hà đã tạo topic <a href="http://daynhauhoc.com/t/len-ke-hoach-cho-viec-tao-thoi-quen-va-su-hung-thu-voi-viec-doc/22853">Lên kế hoạch cho việc đọc và sự hứng thú với việc ĐỌC</a>, Đạt sẽ review thêm nhiều sách nữa để mọi người cùng đọc.</p>
]]></description><link>http://blog.daynhauhoc.com/lau-lau-mot-quyen-sach-doc-dac-nhan-tam-de-internet-khong-bi-huy-diet-boi-11-dong-code/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/lau-lau-mot-quyen-sach-doc-dac-nhan-tam-de-internet-khong-bi-huy-diet-boi-11-dong-code/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sun, 27 Mar 2016 13:49:58 GMT</pubDate></item><item><title><![CDATA[Đối phó với câu hỏi phỏng vấn: Trước đây bạn làm gì?]]></title><description><![CDATA[
<p>Công việc và <strong>kinh nghiệm làm việc</strong> trong quá khứ không chỉ là cơ sở để nhà tuyển dụng biết bạn có phù hợp với vị trí ứng tuyển hay không, mà còn giúp họ hình dung trong đầu khi đã tuyển bạn vào làm thì cách bạn xử lý công việc sẽ như thế nào. Câu hỏi người phỏng vấn thường xuyên đưa ra nhất là:” Trước đây bạn đã làm những công việc gì”. Dưới đây là những điều bạn nên và không nên làm khi trả lời câu hỏi phỏng vấn này.</p>

<p><strong>NÊN:</strong></p>

<ul><li><strong>Nên hình dung sẵn những câu hỏi phỏng vấn liên quan ở nhà</strong></li></ul>

<p>Để có sự <strong>chuẩn bị phỏng vấn</strong> tốt nhất, bạn nên mường tượng và gạch ra những câu hỏi liên quan đến kinh nghiệm của bản thân trong quá khứ. Hãy chọn ra những công việc đem đến kinh nghiệm làm việc nổi trội nhất và hình dung trong đầu bạn sẽ kể nó ra như thế nào. Bên cạnh đó, rất có thể bạn sẽ nhận được những câu hỏi đào sâu về các thế mạnh bạn ghi trong đơn xin việc của mình. Ví dụ như nếu bạn ghi thế mạnh là khả năng giao tiếp thì có thể nhà tuyển dụng sẽ đặt câu hỏi: “ Hãy cho tôi một ví dụ về cách bạn sử dụng thế mạnh này để đạt thành tích trong công việc trước kia”, hoặc câu hỏi: “Bạn hãy kể ra một tình huống trong quá khứ mà bạn đã dùng kĩ năng điều phối của mình để giải quyết vấn đề” nếu bạn ghi mình có kĩ năng lãnh đạo trong đơn xin việc.</p>

<ul><li><strong>Nên mô tả theo phương pháp SAR</strong></li></ul>

<p>Hãy chú ý rằng đây là một trong những câu hỏi vô cùng quan trọng. Nhà tuyển dụng sẽ dựa vào câu trả lời của bạn để chứng thực xem những điều bạn viết trong Cv là thật hay không. Để vẫn cụ thể và chi tiết nhưng không bị sa đà vào dài dòng kể lể, bạn nên sử dụng phương pháp mô tả SAR. Phương pháp này sẽ giúp bạn dễ dàng đưa ra <strong>cách trả lời phỏng vấn hiệu quả</strong> và thông minh chỉ với 3  phần chính:</p>

<p><strong>Situation</strong> – Tình huống (chiếm 25% hiệu quả): Bạn phải đối mặt với vấn đề gì? Tình huống lúc đó thế nào?</p>

<p><strong>Action</strong> – Hành động (chiếm 50% hiệu quả): Cụ thể bạn đã làm gì? Bạn đóng vai trò nào trong việc giải quyết vấn đề?</p>

<p><strong>Result</strong> – Kết quả (chiếm 25% hiệu quả): Kết quả ra sao? Bạn rút ra được kinh nghiệm gì?</p>

<p>Trường hợp xấu nhất  là bạn chưa từng đối mặt với những tình huống mà người phỏng vấn đặt ra. Khi đó bạn cần liên hệ với các tình huống tương tự trong quá khứ, nhanh chóng chọn cách giải quyết hiệu quả nhất để đưa ra. Bạn cũng có thể trả lời:” Tuy rằng em vẫn chưa gặp tình huống như anh/chị đã đặt ra, nhưng với cách giải quyết các vấn đề trong quá khứ, em nghĩ răng,…”. Khi đó, nhà tuyển dụng sẽ quan tâm đến cách bạn suy luận hơn là thực tế bạn đã giải quyết nó như thế nào.</p>

<p><strong>KHÔNG NÊN:</strong></p>

<ul><li><strong>Không nói xấu công ty cũ</strong></li></ul>

<p>Nói xấu tất cả những gì liên quan đến công ty cũ bao gồm sếp, đồng nghiệp, công việc là một trong <strong>những điều cần tránh khi đi phỏng vấn</strong>. Nhiều bạn sử dụng cách thức này để chứng tỏ cho người phỏng vấn thấy công ty cũ đã mắc sai lầm như thế nào và bản thân mình đã xuất sắc giải quyết tình huống đó ra sao. Tuy nhiên, trong mắt nhà tuyển dụng, hành động đó chỉ khiến bạn trở thành một kẻ nhỏ nhen sẵn sàng nói xấu người khác để nâng mình lên. Họ sẽ không hề muốn một người như vậy vào công ty vì biết đâu chính họ sẽ trở thành một đối tượng bị bạn bêu xấu trong tương lai xa thì sao ?</p>

<ul><li><strong>Không dài dòng</strong></li></ul>

<p>Nhà tuyển dụng không có thời gian để nghe câu chuyện về cuộc đời bạn đâu. Vì vậy hãy cố gắng súc tích nhất có thể. Đảm bảo những chi tiết nổi bật cần được kể ra đầu tiên để <strong>gây ấn tượng với nhà tuyển dụng</strong>, rất có thể họ dành thêm thời gian để nghe bạn nói và ghi nhớ bạn lâu hơn. Bạn nên luyện tập trước ở nhà để tránh sa vào kể lể vì không biết rút gọn ở đâu trong lúc nói.</p>

<ul><li><strong>Không nói dối</strong></li></ul>

<p>Bạn được phép nói dối trong một số trường hợp sau; nhưng nhất định không được phép trong tình huống này. Vì đây là những kinh nghiệm liên quan trực tiếp đến công việc, nhà tuyển dụng- những người đã có hàng năm trời lăn lộn qua sẽ dễ dàng tinh ý nhận ra những lỗ hổng trong câu chuyện của bạn. Họ sẽ nghi ngờ và cố gặng hỏi bạn và bạn sẽ ngày càng lộ ra nhiều sơ hở vì một tình huống không hề có thật. Đừng bao giờ quên điều cấm kị này nhé.</p>

<p>Ngoài ra để được hướng dẫn trả lời câu hỏi phỏng vấn, chỉnh sửa CV hoặc tư vấn nghề nghiệp, bạn có thể đăng ký ở <a href="http://8morning.com/sua-cv" rel="nofollow">ĐÂY</a> nhé!</p>

<p>Nguồn bài viết: <a href="http://8morning.com/career-advice/job-search/job-interview/doi-pho-voi-cau-hoi-phong-van-truoc-day-ban-lam-gi.html" rel="nofollow">http://8morning.com/career-advice/job-search/job-interview/doi-pho-voi-cau-hoi-phong-van-truoc-day-ban-lam-gi.html</a></p>
]]></description><link>http://blog.daynhauhoc.com/doi-pho-voi-cau-hoi-phong-van-truoc-day-ban-lam-gi/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/doi-pho-voi-cau-hoi-phong-van-truoc-day-ban-lam-gi/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sun, 27 Mar 2016 10:29:04 GMT</pubDate></item><item><title><![CDATA[Đất Nước của những kẻ Lười Biếng]]></title><description><![CDATA[
<p>Đây là một bài viết tôi sưu tầm được, nhưng tôi phải nói trước với bạn là ngôn từ của nó không hề ngọt tai, nếu bạn chưa sẵn sàng nhìn nhận thực tại bản thân hay thế hệ, có lẽ bạn sẽ thấy một chút khó chịu khi đọc.</p>

<p><strong>Nếu bạn muốn thay đổi đất nước, nếu bạn đã 18 hay 20 tuổi hoặc hơn, hẳn là bạn cũng sẽ sớm trở thành những ông bố, bà mẹ. Thế nên, hãy chuẩn bị cho thay đổi, không cần biết trước đây bạn được giáo dục như thế nào, hãy chắc rằng, bạn sẽ trở thành hình mẫu mà bạn muốn con cái mình trở thành trong tương lai.</strong></p>

<p><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/2/29621e0dc96d085b4dd2b21d5f6212fea95ad3f9.jpg" width="500" height="375"></p>

<p><strong>Bạn có biết lý do chính dẫn tới việc nước Việt ngày càng sa sút? Câu trả lời là: LƯỜI!</strong></p>

<p>Người ta cứ đang kéo cố gắng đất nước này đi lên. Hàng loạt bài báo được viết nên. Trong đó chỉ ra rằng đất nước này đang bị ô nhiễm hóa, đang bị bóc lột hóa, đang bị bất công hóa, và đang bị căng thẳng hóa… Nhưng rồi các bạn biết được điều gì là quan trọng? Ừ, CHẲNG AI THÈM ĐỌC NHỮNG BÀI BÁO ĐÓ. Nghĩa là người ta không biết chuyện gì đang xảy ra chung quanh họ, không biết được mức độ căng thẳng leo thang của thế giới xung quanh. Tóm lại là, người viết thì cứ viết, người chơi thì cứ chơi, không ai thèm đọc. Dĩ nhiên là ta đang nói đến số đông thôi.</p>

<p>Vậy ra, người ta đang cố gắng thay đổi mọi thứ ở phần ngọn. Nghĩa là kêu gọi những con người đã góp sức gây nên hiện trạng này, hãy thôi đừng phá hủy đất nước nữa, hãy thôi xả rác, hãy thôi chém giết. Đó là một ý tưởng điên rồ. Kêu gọi người từng sát hại đất nước này hãy suy nghĩ lại, rũ chút lòng thương, đừng phá hoại nữa.</p>

<p>Bạn biết vì sao mà đất nước này cứ thụt lùi, thậm chí bây giờ thua cả Lào và Campuchia không? Nếu bạn định trả lời là chính phủ thì hãy tạm gác lại cái ý nghĩ đó. Bởi vì vấn đề là dân chúng ở đây mang một căn bệnh nan y không thể chữa nỗi: LƯỜI!</p>

<p><strong>LƯỜI VẬN ĐỘNG, TẬP THỂ DỤC</strong></p>

<p>So với số người tập thể dục, thì số người không tập chiếm gấp nhiều lần, nếu không muốn nói là áp đảo hoàn toàn. Bạn không tin? Sáng thức dậy 4 giờ sáng chạy bộ. Rất nhiều ông cụ, bà già sẽ chạy cùng bạn. Số trung niên cũng rất nhiều. Còn số thanh niên thì chiếm trên đầu ngón tay thôi nhé.</p>

<p>Mà không tập thể dục thì chẳng đào đâu ra sức khỏe, không có sức khỏe thì làm cái gì cũng mau mệt, mau mệt thì sẽ nhanh chán, mà nhanh chán thì sẽ sớm bỏ cuộc. Những người có sức khỏe yếu thường làm mọi việc qua loa. Tin tôi đi. Họ không chịu đựng nỗi bất cứ chuyện gì hết. Đó là khi chúng ta nên nói tiếp các kiểu lười khác là hệ lụy của lười vận động.</p>

<p><strong>LƯỜI HỌC</strong></p>

<p>Cái này thì khỏi nói rồi. Trừ các học sinh trường chuyên và công lập, đa số những trường khác, học sinh rất chi là lười. Khoan hãy nói đến việc kiến thức có hàn lâm hay không, có khó nuốt hay không, có kém thực tiễn hay không. Mà hãy tự hỏi, tại sao lại như vậy? Không ai chịu đựng nỗi 2 3 tiếng học bài ở nhà. Nói trắng ra là họ quá lười chịu đựng. Alan Phan đã từng nói rằng ông không hiểu tại sao một đất nước dân số vàng như Việt Nam lại có vẻ lù khù như các cụ già đến vậy.</p>

<p><div class="lightbox-wrapper"><a href="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/f/f0bb22692ace1b5c2737030217808ce73339fc74.png" class="lightbox" title="Pasted image"><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/optimized/2X/f/f0bb22692ace1b5c2737030217808ce73339fc74_1_690x292.png" width="690" height="292"><div class="meta">
<span class="filename">Pasted image</span><span class="informations">1085x460 61.6 KB</span><span class="expand"></span>
</div></a></div><br><strong>Danh sách quốc gia theo số dân</strong> : Nguồn <a href="https://vi.wikipedia.org/wiki/Danh_s%C3%A1ch_qu%E1%BB%91c_gia_theo_s%E1%BB%91_d%C3%A2n">wiki</a> </p>

<p>Bạn hỏi tại sao? Hãy tạm trách Internet, Smartphone, Karaoke, Nhậu nhẹt, Lotte, Starbuck và các loại ăn chơi thời hiện đại nhé. Bạn lại hỏi tại sao nữa à? Bởi vì đó là thách thức của thời đại này. Thú vui hưởng thụ bao vây xung quanh, nhan nhãn đông tây nam bắc hướng nào cũng có. Tại sao phải chịu đựng học bài khi tụi bạn đi nhậu, đi hẹn hò, đi Lotte? À, quên nữa, đừng ai nói với tôi một câu mà đứa trẻ trâu nào cũng biết: Cái nào cũng có mặt lợi, quan trọng là đừng dùng quá liều lượng. Bởi vì, không có mấy ai biết kiểm soát chính họ ở cái vùng đất này đâu.</p>

<p><strong>LƯỜI LÀM</strong></p>

<p>Tất cả những người chủ ở Việt Nam đều khó tính, họ thường đốc thúc công nhân của mình. Bởi vì họ biết, không đốc thúc, bọn công nhân chỉ ngồi chơi, và làm kiểu đối phó, chủ tới thì luôn tay luôn chân, chủ đi thì phì phèo điếu thuốc, thậm chí là lướt facebook chat chit nữa là đằng khác. Nếu cha mẹ bạn là người trả tiền cho công nhân, chắc bạn sẽ rõ điều đó hơn cả.</p>

<p>Bạn hỏi vì sao họ lười làm, họ bắt đầu lười từ khi nào? Vì sao? Vì họ chẳng có thích thú gì với công việc. Bởi vì họ từ cái giây phút họ lười học, họ chẳng có kiến thức gì để giải quyết vấn đề nên họ chẳng muốn xảy ra thêm vấn đề gì nữa. Mà đấy, cách hay nhất để không có vấn đề gì để giải quyết là ngồi chơi. Làm việc thì tạo nên vấn đề, giải quyết vấn đề chính là một bước thăng tiến. Nhưng họ lại sợ gặp vấn đề biết bao. Không giải quyết được lại bị chửi, lại bị sỉ nhục, lại quê với người khác. Nên họ thà làm người nhàn rỗi tay chân, áo sạch đồ đẹp, không một vết bẩn còn hơn lấm lem mồ hôi, nhếch nhác không ai thèm dòm.</p>

<p><strong>LƯỜI SUY NGHĨ</strong></p>

<p>Lướt dạo hết vòng facebook là điều bạn có thể làm ngay. Nếu facebook bạn không có gì đáng để xem, không có gì để làm bạn cảm động, làm bạn thấy phải nhìn lại bản thân mình thì bạn chính là một ví dụ. Còn nếu có thông tin gì đó hay, viết về thực trạng của đất nước, về ô nhiễm môi trường, về động vật tuyệt chủng, hay các bài viết học thuật, hãy xem nó được bao nhiêu người like? À, thường thì không có bao nhiêu người like đâu. Không tin lướt ngay facebook là biết.</p>

<p>Chúng ta không có gì để học sao? Hay chúng ta chỉ quan tâm về tự sướng, em nào đẹp, em nào xài camera 360, anh nào GAY, chỗ nào chơi tốt, khu nào ăn ngon, quần áo chỗ nào bán đẹp? Nếu facebook của bạn không có bất cứ cái gì liên quan tới học thuật, kiến thức, thay vào đó là 90% ảnh girl xinh, trai đẹp, hãy yên tâm một cách chắc nịch rằng bạn là một trong những đứa lười suy nghĩ bậc nhất thế giới.</p>

<p><strong>LƯỜI TRANH ĐẤU</strong></p>

<p>Cái này thì khỏi phải nói luôn rồi. Cha chung chả ai khóc mà. Đất nước ngày càng đi xuống thì cũng mặc. Nói thật, chả ai quan tâm cả. Những người có tâm, những người làm báo cứ như những kẻ thui thủi một mình tự kỷ vậy. Bài nào họ viết ra, họ tự đọc, chả mấy ai đọc nói chi đến like và comment. Đi chơi noel xong rác thải đầy đường để phải viết lên báo, cũng chả cần thấy nhục mặt cho bản thân hay cho đất nước này, cứ thế năm nào cũng vậy, cũng lên báo, rồi cũng thôi, vì chẳng ai còn hơi sức để nói nữa.</p>

<p>Thờ ơ là căn bệnh của người Việt. Nếu không tin, search bài báo: <a href="http://vnexpress.net/tin-tuc/the-gioi/cuoc-song-do-day/viet-nam-la-mot-trong-nhung-nuoc-it-cam-xuc-nhat-the-gioi-2398515.html">“Người Việt vô cảm thứ 13 thế giới”</a> là biết. Họ chẳng muốn tranh đấu. Họ chẳng muốn gì cả ngoài việc hưởng thụ những gì đang có. Tài nguyên chúng ta bán, cây rừng chúng ta cưa, voi rừng chúng ta giết, thú rừng chúng ta ăn, chả còn gì mà chúng ta “tha” cả. Khai thác triệt để cho thế hệ này tận hưởng, có thể đoán là trong vòng 10 năm tới sẽ cạn sạch. Nhưng mọi người thì cứ thờ ơ để mọi thứ ngày càng trở nên tồi tệ hơn. Miễn là họ không ở những vùng hiểm trở, thiên tai; miễn là họ không bị gì hết. Càng ngày, người ta càng rút về thành thị, co cụm, bạn thấy không? Cả đám ăn chơi phè phỡn với nhau, rồi chuốc độc nhau trong từng thớ thịt, dĩa cơm… Nhưng không ai muốn tranh đấu! Chẳng ai muốn cả, vì họ bận phải hưởng thụ sự hiện đại này.</p>

<p>Đấy là những thế hệ đã được đào tạo. Việt Nam thuộc loại khủng của thế giới trong việc chi ngân sách cho giáo dục. Họ đã làm gì, và chúng ta đã tôi luyện bản thân như thế nào? Có khi nào chúng ta thấy nhục nhã, chẳng cần gì cao siêu, mà chỉ bởi vì chúng ta vừa quăng một cục rác xuống đường. Ai đó nhắc nhở, và chúng ta phản bác: TRƯỚC SAU CŨNG CÓ NGƯỜI QUÉT THÔI. Liệu có bao giờ chúng ta thấy nhục mặt vì cái độ lười nó ghê tởm đến nỗi những con chó thông minh, biết đi ị đúng chỗ cũng phải khinh thường?</p>

<p>Những thế hệ đi qua, và những bài học của các bậc mẹ cha ngày càng thực dụng. Bạn không thấy xã hội này quá co cụm từ khi bạn chuẩn bị cắp đồ lên thành phố học? 99,9% tôi đảm bảo sẽ được nhắc: Giữ tiền cẩn thận nha con, trộm cắp dữ lắm; Ở ký túc xá coi chừng nhà con, trộm cắp phức tạp lắm; ở Sài Gòn cẩn thận nha con, dân tứ xứ chẳng biết ai là ai đâu…</p>

<p>Bạn đã từng nghe, chắc chắn như vậy, và hãy thừa nhận là lũ người xung quanh bạn thật gớm ghiếc. Và bạn, tôi chỉ đích danh bạn đó, cũng chưa chắc là một trường hợp đặc biệt gì ngoài lũ gớm ghiếc đó đâu. Một lũ tệ hại, cười với nhau những nụ cười giả tạo, đôi tay vịn chắc túi tiền và trôi vào dòng cuộc sống. Chúng ta chắp vá đất nước này, rách chỗ nào vá chỗ đó, nhưng đúng như Lưu Quang Vũ nói:</p>

<blockquote><p>“Có những cái sai không thể sửa được. Chắp vá, gượng ép chỉ càng sai thêm. Chỉ có cách là đừng bao giờ sai nữa, hoặc phải bù lại bằng một việc làm đúng khác.”<br>Nhưng chúng ta chẳng quan tâm lời dạy này. Chúng ta chắp vá nhiều hơn là đằng khác. Ai đó đút lót, chúng ta đút lót nhiều hơn. Ai đó đối phó để được điểm cao, chúng ta quyết tâm biết được đề thầy sắp ra giờ kiểm tra. Ai đó quăng rác bừa bãi, chúng ta quăng rác một cách tinh vi. Ai đó lừa đảo ta, ta học cách đó để lừa đảo lại người khác. Và chúng ta có một xã hội như ngày hôm nay. Chẳng ra một cái gì cả.</p></blockquote>

<p>Một dân tộc ghê tởm nhau, đề phòng nhau đến những chuyện nhỏ nhặt đến như vậy thì làm sao còn đầu óc để đầu tư vào những thứ tiến bộ khác hơn? Một xã hội co cụm, những ánh mắt đầy hoài nghi, ghê tởm thay cho chúng ta!</p>

<p>Chúng ta lười mọi thứ. Chúng ta lười vận động, rồi thì sức khỏe chúng ta kém, sức chịu đựng không có nên chúng ta nhác học, lười làm, buồn ngủ khi phải nghĩ và chán ngán khi phải chịu đựng. Tất cả những gì chúng ta có là đối phó, từ trong ra ngoài. Không đối phó bằng cách hối lộ tiền, thì đối phó bằng cách mua bằng cấp giả, nếu không được thì học đại cho xong, và trong lúc học cũng đối phó với thầy cô. Vâng, chúng ta đối phó n+1 các loại. Nhưng điều làm tôi ghê tởm hơn cả tật đối phó, chính là không thèm đối phó nữa mà sẵn sàng thải rác ra đường như không giữa ban ngày ban mặt, buông lời tục tĩu, dâm dục giữa thiên hạ. Số đó không hề ít, xin chớ coi thường.</p>

<p><strong>Chịu đựng!</strong> Những người đi ra từ chiến tranh với sức chịu đựng ghê gớm lại nuôi dạy con họ một cách đầy nuông chiều. Quá nhiều người đi ra từ chiến tranh, quá nghèo khổ để nói đến đức hạnh, tất cả những gì họ lo lắng là tiền, là mưu sinh. Đó là lý do chúng ta ở đây. Cả một lũ không được giáo dục tốt. Cả một lũ đang làm đất nước này đi xuống. Đó không phải là lỗi của họ, hãy thông cảm vì điều đó. Họ đã cố phải xây dựng lại mọi thứ từ đống tro tàn. Nhưng còn chúng ta thì sao? Được nuông chiều từ nhỏ tới lớn, chẳng phải chịu đựng bất cứ cái gì, và giờ thì sẵn sàng ngồi quán cafe chém gió suốt ngày.</p>

<p>Bạn biết bọn nhậu nhẹt và ngồi quán cafe chém gió thường nói gì khi gặp nhau? Tao mới xin làm chỗ kia, lương 4 triệu mà toàn ngồi chơi. Liền lập tức, thằng đối diện sẽ bảo: NGON VẬY!<br>Cái tư duy ở xứ này là: Ngồi chơi và “khỏe”! Nhưng yên tâm đi, vũ trụ rất công bằng. Cái chỏm nhỏ ở chỗ này trước sau gì cũng bị trừng phạt nếu tiếp tục tồn tại theo kiểu đó.</p>

<p>Nếu bạn muốn thay đổi đất nước, nếu bạn đã 18 hay 20 tuổi hoặc hơn, hẳn là bạn cũng sẽ sớm trở thành những ông bố, bà mẹ. Thế nên, hãy chuẩn bị cho thay đổi, không cần biết trước đây bạn được giáo dục như thế nào, hãy chắc rằng, bạn sẽ trở thành hình mẫu mà bạn muốn con cái mình trở thành trong tương lai.</p>

<p>Đừng uống cạn tài nguyên này, đừng ăn mặn để con cháu khát nước. Đừng để thế hệ nối tiếp thế hệ sống cuộc sống như thế này. Và xin cũng đừng, đừng xấu xa cho đã để rồi sau này bắt con mình trở thành một người tốt. Con nít học qua hình ảnh, nó bắt chước tất cả những gì nó thấy. Đừng bao giờ cho phép bản thân tệ hại, và dạy con bằng cái lối nói rằng bạn dù có xấu xa thế nào cũng là hy sinh cho tương lai của nó. Bởi vì, cách đó nhàm quá rồi, một lời biện hộ không có nghĩa gì hết.</p>

<p>Tôi biết là Việt Nam vẫn chưa đến lúc có một cuộc cách mạng cải tổ lại tư duy người Việt. Nhưng từ giờ cho tới lúc đó, hy vọng tôi có thể giúp ai đó hiểu rằng, hãy luyện tập, hãy chịu đựng để bước đi những ngày tháng trưởng thành. Bạn không thể lớn thêm nếu không chịu đựng. Nếu bạn muốn đi lên, bạn phải chịu đựng, dù xung quanh không có ai hỗ trợ bạn, dù xung quanh mọi người đang say ngủ…</p>

<p><strong>NẾU BẠN MUỐN TRƯỞNG THÀNH, HÃY CHỊU ĐỰNG</strong></p>

<p>Trong nghĩa của từ chịu đựng, không có lười biếng. Trong nghĩa của từ chịu đựng là sức mạnh. Mỗi một cá nhân có sức mạnh, khỏi cần phải bàn tới chuyện đất nước có đi lên hay không, vì đôi tay của họ thậm chí có thể nhấc bổng cả bầu trời…</p>

<p>(Nếu bạn nào đặt một dấu chấm hỏi vì sao bài trước tôi viết là chẳng có ai lười thì bài này tôi lại đỗ lỗi cho việc người ta lười, thì xin hãy hiểu rõ là trong 2 bài tôi đang đề cập đến 2 chuyện khác nhau. Bài trước là cảm thông với những người chưa tìm ra họ là ai trong cuộc đời. Bài này nói về những con người xung quanh tôi mà đầu óc bị mụ mẫm hóa hết rồi, không còn biết gì ngoài những lạc thú tầm thường nữa.)</p>

<p><a href="http://phamngocanh.com/thu-vien/chia-se-cuoi-tuan/dat-nuoc-cua-nhung-ke-luoi-bieng/">Theo Lục Phong</a></p>

<hr>

<p>Không biết có bạn nào mắc thêm bệnh <strong>Lười Đọc</strong> không nhỉ <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=2" title=":smile:" class="emoji" alt=":smile:"></p>
]]></description><link>http://blog.daynhauhoc.com/dat-nuoc-cua-nhung-ke-luoi-bieng/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/dat-nuoc-cua-nhung-ke-luoi-bieng/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sat, 26 Mar 2016 02:09:03 GMT</pubDate></item><item><title><![CDATA[Fastest way to learn basic of OOP [P3]]]></title><description><![CDATA[
<p>Chào cả nhà, trưa không ngủ được nên ngồi viết bài luôn ^^.<br>Qua 2 phần của Fastest way to learn basic of Programming thì các newbie chắc hẳn cũng đã hiểu đc phần nào các định nghĩa lằng nhằng của Lập Trình. Và bây giờ, bài viết này sẽ giúp các bạn lướt nhanh qua hơn 30 trang về định nghĩa Lập Trình Hướng đối tượng. Bắt đầu</p>

<p>Phần 2 bạn xem lại tại <a href="http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p2/22178">http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p2/22178</a></p>

<h1> BƯỚC SÂU HƠN VÀO LẬP TRÌNH </h1>

<br>

<h2> Bước vào OOP </h2>

<br>

<b> Lập trình hướng đối tượng</b>: là kiểu lập trình quy về đối tượng ,nó xem mọi thứ là đối tượng. Hiểu đơn giản thế này... mọi thứ đều là obj (đối tượng), từ cái biến, cái thủ tục, cái lớp gì gì ấy đều là đối tượng. Cái gì hữu hình, vật thể cụ thể đều là obj. và bất kì đối tượng nào đều phải ở trong một lớp

<br>

VD: Công an hỏi chuyện vs 1 thằng phạm nhân, thì ông công an là obj, thằng phạm nhân là obj, tờ giấy, cây viết là obj, hung khí gây án là obj, cái căn phòng là cái class (lớp) chứa mấy cái obj ấy, nhưng bản thân cái phòng lại là obj đấy.

<br>

<img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/a/aafbc4b3764b2d9cebe704d8a560a8a2f1fabcea.png" width="277" height="182">

<br>

<b>Vậy rồi đối tượng là gì?</b> Đối tượng (Object- viết tắt là Obj) là một thứ hữu hình, vật thể cụ thể hay không cụ thể đều là Obj, xem vd trên nhé ^^

<br>

<p></p><pre><code class="lang-auto">Fact: Xu hướng hiện nay là Đối tượng hóa các ngôn ngữ lập trình, trong đó ưu tú nhất là Java</code></pre>

<p><b>Lớp (Class)</b>: Là bản thiết kế của một thực thể (hack não nhỉ?) hiểu đơn giản hơn là nó giống như một thực thể, <b>nó đơn giản chỉ là nơi chứa mấy cái Phương Thức vs Thuộc tính thôi mà </b><br>VD nhé: Ở ngoài tiệm sách bạn thấy một biển quảng cáo cuốn sách bìa vàng, dày 690 trang (thì cuốn sách ấy là Lớp, nó chứa các thuộc tính và phương thức bên trong nó) nhưng khi bạn mua về thì nó nằm trong tay bạn (bây giờ cuốn sách của bạn là Obj của cuốn sách ấy, vì nó cụ thể hóa cuốn sách, không còn chỉ là quảng cáo hư cấu nữa). <img src="http://daynhauhoc.com/images/emoji/twitter/joy.png?v=2" title=":joy:" class="emoji" alt=":joy:"><br></p>

<p></p><pre><code class="lang-auto">Class Sach {     // đây là cuốn sách trong quảng cáo (nó chưa có thực)
 int sotrang = 690;
 color maubia = yellow;
 string tuade = "Fastest way to ...";
}
Class TuSachNhaMinh {  //tủ sách này không có thật
 public static void main (String[] args) {   // làm cho tủ sách có thật
  Sach sachcuaminh = new Sach(); //đây là cuốn sách đã mua -&gt; nó có thật (tạo đối tượng)
 }
}</code></pre>

<p><b>Thuộc Tính (Properties)</b>: Đơn giản là cái biến nằm trong lớp thôi.<br><b>Phương Thức (Methods)</b>: Đây là... cái hàm nằm trong lớp. (<strike>Định mệnh, làm mất mấy ngày đọc hiểu của bố <img src="http://daynhauhoc.com/images/emoji/twitter/rage.png?v=2" title=":rage:" class="emoji" alt=":rage:"></strike>).<br></p>

<p></p><pre><code class="lang-auto">Fact: Các thuộc tính và phương thức của lớp chỉ có thể sử dụng khi lớp đã trở thành đối tượng.</code></pre>

<p><b>Khởi tạo</b>: đây là cái phương thức có tên giống tên lớp mà khi tạo đối tượng từ một lớp thì nó sẽ thực hiện<br>VD: Sách có khởi tạo là giảm giá 69%, thì khi mua sẽ được giảm giá 69% đúng như khởi tạo.<br></p>

<p></p><pre><code class="lang-auto">class Sach {
 int sogia = 69000;
 Sach () {  //đây là khởi tạo, tên phải giống tên lớp
  sogia -= sogia*(69/100);
 }
}
class TuSach {
 public static void main(String[]args) {
  Sach sachcuatoi = new Sach(); //tạo đối tượng -&gt; tự chạy khởi tạo
  System.out.println(sachcuatoi.sogia); //gia se khong con la 69000 nua
 }
}</code></pre>

<p><b>Các Phạm vi Truy Cập</b>: Access-Modifiers (các phạm vi truy cập) chia làm 3 loại<br><i>Public</i>: truy cập bởi mọi thứ, mọi nơi<br><i>Protected</i>: protected sẽ là public đối với class con và private đối với các class còn lại<br><i>Private</i> : chỉ được truy cập bởi các thành viên bên trong chính lớp đó<br>Chi tiết hơn tại hình bên dưới <img src="http://daynhauhoc.com/images/emoji/twitter/smiley.png?v=2" title=":smiley:" class="emoji" alt=":smiley:"> <br><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/0/09418faded28588ffbbfa2c51cfedf1f4262dbe0.png" width="690" height="161"><br></p>

<p></p><pre><code class="lang-auto">Fact: Nếu không đặt Access-Modifier trước mỗi thành viên thì mặc định sẽ là public đối với các class cùng package và private đối với các class k cùng package</code></pre>

<p><b>Package</b>: gói - là nơi chứa những lớp liên quan. Khi muốn gọi một gói nào đó thì cần import nó<br>mặc định Java sẽ import gói java.lang.*;  -&gt; * - biểu thị gọi toàn bộ lớp trong gói ấy. Chính xác gói là cái folder chứa lớp ^^ và các thứ khác.<br></p>

<p></p><pre><code class="lang-auto">Fact: Các gói thường đặt tên bằng chữ thường, các từ cách nhau bằng " . "</code></pre>

<p>Hôm nay bấy nhiêu thôi, vì OOP ban đầu khá khó nhưng hiểu đc rồi thì thấy nó rất dễ dàng. Chúc các bạn thành công ^^</p>

<p><strike>Hãy bấm like hoặc reply để ủng hộ tác giả</strike></p>
]]></description><link>http://blog.daynhauhoc.com/fastest-way-to-learn-basic-of-oop-p3/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/fastest-way-to-learn-basic-of-oop-p3/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Wed, 16 Mar 2016 06:11:25 GMT</pubDate></item><item><title><![CDATA[[Lâu lâu một cuốn sách] Nhà giả kim của Paulo Coelho - triết lí, tâm niệm, phương châm sống]]></title><description><![CDATA[
<p>Chào các bạn, thấy anh đạt review sách cũng hay hay nên mình cũng thử xem sao. </p>

<h2>Giới thiệu sờ sơ</h2>

<p>Quyển sách hôm nay mình giới thiệu là <strong>Nhà giả kim</strong> của <em>Paulo Coelho</em>. Được ghi ngay trên trang bìa <code>Cuốn sách bán chạy chỉ sau kinh thánh</code>. Mình được biết qua sự giới thiệu của <strong><a href="https://www.facebook.com/TonyBuoiSang/?fref=ts" rel="nofollow">Tony buổi sáng</a></strong>. Đây là trang fanpage hay đăng những mẩu chuyển ngắn mang thiên hướng hư cấu nhưng cực kì thâm thúy và sâu sắc. Các bạn nên theo dõi rồi đọc và suy ngẫm về những câu chuyện trên đó</p>

<p><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/2/2c1f1378c7af5333ba008116e743541dd2bd0a32.png" width="488" height="388"></p>

<h2>Tóm tắt:</h2>

<p>Nhà giả kim nói viết về cuộc hành trình đây đó của chàng chăn cừu Santiago xứ Tây Bán Nhà, rồi từ đó đưa ta đến những triết lí cuộc sống rất đơn giản mà lại đầy ý nghĩa</p>

<p>Thú thật là mình cả đời cũng chả đọc được mấy cuốn sách ngoài SGK cả, nhất là về cái thể loại triết lí này thì càng không. Thấy bác Tony gợi ý là nên đọc để trở thành thanh niên ưu tú nên cũng đú đởn theo thiên hạ mua về đọc thử. Nghĩ trong đầu chắc sách viết gì kinh dị lắm, khai thông đầu óc chém bão cua gái phành phạch</p>

<p>Về đọc như đúng rồi, quên ăn quên quay..à mà thôi. Mình đọc có 1 ngày rưỡi là xong. Và ôi thật bất ngờ, trái với mong đợi của mình, sách đúng là...quá dở :3. Sách gì mà toàn chi tiết không đầu không đuôi, được một ít triết lí à, rồi toàn suy nghĩ gì đâu, nhiều cái hiển nhiên chưa đọc cũng đoán được, rồi còn đoạn cuối max hư cấu nữa chớ. Cảm giác hụt hẫng và giống như mình bị bác Tony troll ấy vậy mấy bạn à.</p>

<p>Nhưng mà chợt suy nghĩ lại, bác Tony nói nên đọc thì chắc có gì trong đó chớ, mà sách này cũng nổi chớ dỡn đâu. Thế là lôi ra đọc lại, từ từ, chậm rãi, ngẫm nghĩ từng câu từng chữ trong đó. Và rồi cũng nhận ra, những triết lí ở đây không phải phơi ra trước mặt để bạn đọc phát thấy liền, mà nó nằm ở xuyên suốt cả câu chuyện, ở những điều nhỏ nhặt mà bạn tưởng chừng viết ra chả để làm gì. Từ những suy nghĩ vu vơ của chàng trai cùng đàn cừu, viễn tưởng ngây thơ về một cô gái chỉ mới trò chuyện một lần, những cuộc gặp mặt thoáng qua với những con người lạ lẫm, những lần trò chuyện với cô gái trên ốc đảo, những sự việc hơi hư cấu trên ốc đảo sa mạc, những cuộc tâm sự cùng với chủ tiệm pha lê, ... tất cả khiến cho ta phải suy nghĩ và liên tưởng đến thực tế.</p>

<p><div class="lightbox-wrapper"><a href="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/0/0279742055a5c80b4a977c8af7968691603bb362.jpeg" class="lightbox" title="20160310_162145-01.jpeg" rel="nofollow"><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/optimized/2X/0/0279742055a5c80b4a977c8af7968691603bb362_1_674x500.jpeg" width="674" height="500"><div class="meta">
<span class="filename">20160310_162145-01.jpeg</span><span class="informations">3366x2496 2.95 MB</span><span class="expand"></span>
</div></a></div></p>

<p>Kiểu giống như môn văn hồi đi học ấy các bạn à, ý nghĩa nó ẩn sâu phía trong câu chuyện chứ nó có đưa chình ình ra ngay đâu, thế mới có cái mà phân tích rồi cảm nhận chớ.</p>

<p>Mình đã đọc sách này cho đến hôm nay đã là lần thứ 4 rồi. Mình đọc lại không phải vì hay quá mà tại cảm thấy trình mình chưa hiểu hết những điều mà tác giả muốn truyền đạt.</p>

<p>Bản thân mình xin nhận xét như sau</p>

<p><strong>Hay:</strong><br>* Câu chuyện và từ ngữ đơn giản mà đầy sâu xa, yêu cầu người đọc phải suy ngẫm mới thấm hết được<br>* Nhiều chi tiết khiến ta phải suy nghĩ về chính bản thân mình<br>* Nhiều triết lí sống hay (sách triết lí mà vẹ)</p>

<p><strong>Chưa hay:</strong><br>* Nhiều chi tiết dù gắng để hiểu tại sao lại như thế mà vẫn không hiểu được, nhọ, đúng dốt văn<br>* Nhiều cuộc nói chuyện kiểu tây khiến mình cảm giác nó sao sao, tùy mỗi người 1 kiểu<br>* Phần cuối hơi hư cấu, đọc max ảo</p>

<h2>Đánh giá của mình</h2>

<p> Nhà giả kim nói chung của không có gì thần thánh gì quá như các bạn nghĩ khi nghe ai đó chém về nó. <strong>Quan trọng là cách bạn đọc và hiểu nó như thế nào.</strong> Quyển sách này dẫn dắt ta qua cuộc hành trình của chàng chăn cừu Santiago đi dây đi đó. Nên nó sẽ hay đối với những người chịu suy ngẫm và phân tích những chi tiết của câu chuyện. Còn đối với những bạn mà muốn kiểu rõ ràng thì cũng tạm tạm</p>

<h2>CHỐT</h2>

<p>Theo mình nghĩ đã đọc sách thì không nên đọc lấy số lượng, đọc và suy ngẫm xem mình học thêm được gì từ sách đó, nên đọc lại nếu vẫn chưa hiểu được. Muốn pờ rồ hơn nữa thì tập review như mình đây......</p>

<p>Cảm ơn các bạn đã đọc bài, chúc đọc sách đúng cách và vui vẻ <img src="http://daynhauhoc.com/images/emoji/twitter/innocent.png?v=2" title=":innocent:" class="emoji" alt=":innocent:"></p>
]]></description><link>http://blog.daynhauhoc.com/lau-lau-mot-cuon-sach-nha-gia-kim-cua-paulo-coelho-triet-li-tam-niem-phuong-cham-song/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/lau-lau-mot-cuon-sach-nha-gia-kim-cua-paulo-coelho-triet-li-tam-niem-phuong-cham-song/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Tue, 15 Mar 2016 13:47:31 GMT</pubDate></item><item><title><![CDATA[Fastest way to learn basic of Programming [P2]]]></title><description><![CDATA[
<p>Chào cả nhà, sau khi làm xong Part 1 của Fastest way to learn basic of Programming, em thấy có rất nhiều bạn newbie và cả không newbie đánh giá tốt bài viết XD, và nhiều lượt hóng (nhưng lượt xem hơi ít, mới có 230 lượt <img src="http://daynhauhoc.com/images/emoji/twitter/cry.png?v=2" title=":cry:" class="emoji" alt=":cry:"> ) Nhưng không vì thế mà làm chậm trễ việc post bài cho các bạn. ^^</p>

<p>Xem phần 1 tại: <a href="http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p1/22117">http://daynhauhoc.com/t/fastest-way-to-learn-basic-of-programming-p1/22117</a></p>

<p>Trong phần 1, chúng ta đã biết "sơ sơ" qua các khái niệm cơ bản như biến, kiểu,... nhưng ngắn và dễ hiểu hơn trong sách, giáo trình (mọi người đánh giá, em không bum đâu <img src="http://daynhauhoc.com/images/emoji/twitter/joy.png?v=2" title=":joy:" class="emoji" alt=":joy:"> ) và trong phần 2, ta sẽ đi tìm hiểu hết các phần còn lại.</p>

<h1>NHẬP MÔN LẬP TRÌNH</h1>

<br>

<h2>Những thứ ban đầu -tt</h2>

<br>

<b>Khai Báo (Declaration)</b>: là yêu cầu máy tính cung cấp cho mình những thứ mình cần. Không yêu cầu là nó không cho đâu. :smiley:

<br>

VD nhé: int a = 5; -&gt; "Cưng eh, cho anh mượn cái hộp (int) nhãn a chứa kẹo (5) ^^ đi."

<br>

class Explore -&gt; "Mấy chú xây cho anh cái phòng đặt tên là Explore nha"

<p><b>Các loại kiểu</b>: như trong phần 1, mình đã nói về kiểu là gồm 4 loại cơ bản, nhưng bây giờ mình sẽ phân tích về các kiểu này (mình theo ngôn ngữ Java nhé). Mỗi kiểu sẽ có loại khác nhau và phạm vi (nói chung là độ rộng của cái hộp để nhét vừa đồ thôi ^^) được đo bằng bit<br></p>

<p></p><pre><code class="lang-auto">--Kiểu Số Nguyên--
byte   =  8  bit
short  =  16 bit
int    =  32 bit
long   =  64 bit
--Kiểu số thực--
float  =  32 bit
double =  64 bit
--Kiểu Logic--
boolean=  1  bit
--Kiểu Kí tự-chuỗi--
String = (mình không rõ vì trong Java nó là 1 lớp)
char   =  16 bit
--Kiểu đặc biệt--
void  -&gt; không trả về</code></pre>

<p><b>Chuỗi (String)</b>: giống như 1 câu trong văn viết vậy thôi, còn kí tự là 1 chữ cái <img src="http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"> .<br></p>

<p></p><pre><code class="lang-auto">Fact: Ngôn ngữ lập trình thường đặt chuỗi trong " ", một số thì ' ',...</code></pre>

<p><b>Lệnh rẽ nhánh (Condition)</b>: khó hiểu nhể, đơn giản là giống như bạn đăng nhập facebook, đúng mật khẩu (true) thì nó cho bạn vào, không thì đá bạn ra (false) vậy thôi<br>Lệnh rẽ nhánh chia làm 2 loại phổ biến<br></p>

<p></p><pre><code class="lang-auto">if ( condition ) { activities } else { activities }
nếu ( mật khẩu đúng ) thì { đăng nhập } còn không thì { đá ra }

switch ( expression ) { case &lt;value&gt; : {activities} break; } 
xét (tên tài khoản) { là "ltd" thì { tên = "Lê Trần Đạt" } break; } //break dùng để thoát ra. Làm xong rồi ở lại làm gì? về hoy</code></pre>

<p><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/b/b871f5cf79ff62fd4d80d93cadcea0f6a23f244e.png" width="198" height="254"></p>

<p><b>Lệnh lặp (loop)</b>: là thực đi thực hiện lại một việc gì đấy, giống như bạn đi học là lặp đi lặp lại việc đi đến trường và đi vê nhà.<br>Lệnh lặp sẽ luôn có điều kiện để dừng và thuộc loại đếm limit hay unlimited.<br></p>

<p></p><pre><code class="lang-auto">Limit - giới hạn số lần
for ( counter ; condition ; step ) { activities }
lặp ( số năm học ; số năm học &lt; 12; số năm học + 1) { đi học }

Unlimited - không giới hạn
while ( condition ) { activities }
khi ( tuổi &lt; 19 ) { đi học; tuổi++ }
do { activities } while ( condition ) cũng tương tự.</code></pre>

<p><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/5/54e90ab74d5e60e6590df16b96be96d5fb9d8002.png" width="194" height="260"></p>

<p><b>Hàm (Function)</b>: là một khối lệnh có tên, có tham số truyền vào và có kiểu trả về -&gt; Nó giống máy bán kem, chỉ cần đưa tiền (tham số) vào là sẽ cho ra lượng kem tương ứng (trả về)<br> +Tham số (Argument): là những gì bạn đưa vào.<br> +Trả về (Return) : là những gì nó đưa ra.<br></p>

<p></p><pre><code class="lang-auto">khai báo hàm &lt;kiểu trả về&gt; &lt;tên&gt; ( các tham số ) { công việc }
vd:
IceCream IceCreamSeller (int Money) {  //hàm &lt;tên chữ màu đỏ&gt; trả về là Kem và tham số là tiền ^^
    int IceCreamOut = 0;
    if ( Money == 0 ) {
      Nói("Định ăn chịu ak");
    } else {
      IceCreamOut = 4 * Money;
    }
    return IceCreamOut;  //trả vể (xuất ra) kem
}</code></pre>

<p><b>Thủ Tục</b>: đơn giản là hàm mà không có trả về thôi (trả về void) thôi mà. Làm khó nhau hoài.</p>

<p><b>Con trỏ (Pointer)</b>: dự là đây sẽ là thứ hack não ai dùng C++ hay C. Nói nôm na đây là một biến mà nó nằm trong chương trình, chỉ trỏ lung tung. Dễ hiểu hơn đây là cái mặt nạ, bạn muốn nó thể hiện gì, giống cái gì là nó sẽ làm y hệt như vậy<br>VD: Bạn có 2 cuốn sách, bạn ra ngoài và chỉ đem theo 1 cuốn sách ảo. Thì bạn muốn đọc cuốn nào nó hóa thành cuốn ấy cho bạn -&gt; Cuốn sách ảo là con trỏ.<br></p>

<p></p><pre><code class="lang-auto">Fact: Một số ngôn ngữ lập trình hiện đại thường không cho phép sử dụng con
trỏ vì nó không bảo mật, nhưng nhờ có con trỏ nên chúng ta mới có OOP ngày nay</code></pre>

<p><b>Một số định nghĩa liên quan: (sẽ giúp ích)</b><br></p>

<p></p><pre><code class="lang-auto">Desktop Development - Lập trình ứng dụng (cho máy tính)
Mobile Development - Lập trình ứng dụng (cho điện thoại)
System Development - Lập trình hệ thống
Embedded Development - Lập trình Nhúng
IDE -  Integrated Development Environment - Môi trường phát triển tích hợp: 
   Đây là thứ giúp ích bạn rất nhiều hơn là ngồi code notepad.
GUI - Graphical User Interface - Giao diện đồ họa
Console - Giao diện dòng lệnh 
PL - Programming Language - Ngôn ngữ lập trình
Functional Programming - Lập trình hướng hàm
Object-Oriented Programming - Lập trình hướng đối tượng</code></pre>

<p>Hôm nay tới đây thôi, nhiều quá loãng mất ^^. Mọi người cho em xin ý kiến nhá. <br><strike>Nếu thấy hay thì đừng quên bấm Like ủng hộ tác giả. Thấy đở thì góp ý.</strike><br>Cảm ơn các bạn.</p>
]]></description><link>http://blog.daynhauhoc.com/fastest-way-to-learn-basic-of-programming-p2/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/fastest-way-to-learn-basic-of-programming-p2/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Tue, 15 Mar 2016 10:42:50 GMT</pubDate></item><item><title><![CDATA[Fastest way to learn basic of Programming [P1]]]></title><description><![CDATA[
<p>Xin chào cả nhà. Căn bản lập trình là thứ bắt đầu đầy nước mắt của lập trình viên <img src="http://daynhauhoc.com/images/emoji/twitter/joy.png?v=2" title=":joy:" class="emoji" alt=":joy:">, và một khi bạn đã "qua cơn nguy kịch" thì bạn sẽ sống dậy đầy mạnh mẽ (code liên tục ^^) và đôi khi lại quen 1 thứ gì đấy thì lại lật lại mà xem nhưng nhìn lại sẽ dễ hiểu hơn nhưng lại loằn ngoằn...<br>Hôm nay, em mạn phép tung series dành cho các bạn newbie là "Fastest Way to learn basic of Programming" (đại loại như for Dummies nhưng ngắn hơn) để các bạn bước lên nhanh chóng trong con đường đến "vinh quang" (vào công ty sẽ biết vinh quang cỡ nào <img src="http://daynhauhoc.com/images/emoji/twitter/cry.png?v=2" title=":cry:" class="emoji" alt=":cry:">)<br>Series này dựa trên sự hợp tác của Steve Alan (<a class="mention" href="http://daynhauhoc.com/users/conan4582">@conan4582</a>) và... mấy cuốn sách. ^^ Nên có gì sai sót thì các bạn bỏ qua cho (mấy thím tester find bug giúp ^^). Ngôn ngữ em áp dụng sẽ là Java.</p>

<p></p><pre><code class="lang-auto">Mình chỉ nói cơ bản, chứ không nói đến bên cấu trúc máy tính, nên ai học 
Cấu trúc máy tính đừng ném đá mình</code></pre>

<h1>NHẬP MÔN LẬP TRÌNH

<br>

<h2>Những thứ ban đầu</h2>

<br>

<b>Định danh (Indentify)</b>: định danh?? nghe khó hiểu chứ thật ra chẳng khó hiểu gì. đó là <b>TÊN</b> thôi.

<br>

</h1><p></p><pre><code class="lang-auto">Fact: Mỗi ngôn ngữ đều có các kiểu định danh riêng (đại khái là tên như thế nào là ok ấy mà)</code></pre>

<p><b>Biến (Variable)</b>: biến giống như là USB, nó có tên, có chứa dữ liệu,... nói chung đó là một cái <i>Định danh</i> chứa 1 <b>Kiểu</b> xác định và có thể thay đổi -&gt; Xác định là USB rồi.<br><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/7/7e735e7550536efd627f89ace7b375453a224df5.png" width="227" height="222"><br></p>

<p></p><pre><code class="lang-auto">Fact: Biến lúc khai báo sẽ được cấp cho một số địa chỉ, địa chỉ ấy xác định vị trí nơi nó nằm trên RAM.</code></pre>

<p><b>Lệnh (command)</b>: là đơn vị cơ bản của 1 ngôn ngữ lập trình, là một tin nhắn đến máy tính và bảo nó làm một việc gì đấy. VD: print(); -&gt; "Cưng ơi, in cho anh cái dòng abc này ra màn hình nhá :)". Mỗi lệnh sẽ được kết thúc bằng các dấu như "; huyền thoại"...<br></p>

<p></p><pre><code class="lang-auto">Fact: Mỗi ngôn ngữ lập trình sẽ qui định kiểu kết thúc lệnh khác nhau.</code></pre>

<p><b>Kiểu (Data Type)</b>: qui định trên biến (USB) chỉ chứa kiểu dữ liệu nào đó.<br>Gồm có 3 kiểu cơ bản: Số Nguyên (Integer), Số Thực(Real-Float), Chuỗi-Kí Tự(char-string) và Logic(True/False). VD trên USB a chỉ chứa Nhạc, USB b chỉ chứa tài liệu, USB c chứa phim (chẳng biết là phim gì <img src="http://daynhauhoc.com/images/emoji/twitter/smirk.png?v=2" title=":smirk:" class="emoji" alt=":smirk:">) ...<br></p>

<p></p><pre><code class="lang-auto">Fact: Các ngôn ngữ hiện đại (JS,Ruby,Python,Perl) thường ít yêu cầu xác định kiểu khi khởi tạo biến</code></pre>

<p><b>Hằng (Constant/Literal)</b>: là biến chỉ đọc hay không thể thay đổi giá trị. và Hằng yêu cầu gán 1 giá trị xác định lúc khởi tạo.<br>VD: Trên USB e là Read-Only chứa File a,b,c bạn chỉ có thể đọc chứ chẳng edit được gì cả.<br><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/0/0f676d9b977d894c8ce4a5595d383bff728a2266.png" width="252" height="191"></p>

<p><b>Khối lệnh (Block Code)</b>: là nơi chứa 1 số lệnh nhất định.<br></p>

<p></p><pre><code class="lang-auto">Fact: Mỗi ngôn ngữ sẽ có một kiễu khai báo khối khác nhau {}, begin-end...</code></pre>

<p><b>Toán tử (Operator)</b>: là phép toán. Vậy thôi '_'.<br>Gồm có 4 kiểu cơ bản: Toán tử Số, Chuỗi, Boolean (AND,OR,..) và, So sánh</p>

<p><b>Mảng (Array)</b>: là cái... hộp, có nhiều ngăn, mỗi ngăn chứa 1 món đồ ^6^. Thật ra nó là biến có thể lưu nhiều giá trị ở mỗi "vùng chứa" khác nhau. mỗi vùng chứa gọi là "phần tử"<br><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/7/7b8ad6516f522888a5a9ec9a932e2ef1224e9506.png" width="161" height="176"><br></p>

<p></p><pre><code class="lang-auto">Fact: giá trị của các phần tử thuộc mảng sẽ được thêm vào nhưng không thể thêm vùng chứa trong lúc thực thi.</code></pre>

<p><b>Gán giá trị (Assignment)</b>: là cất một giá trị nào đó vào biến và... nó sẽ nằm ở đấy (lưu-gán).<br><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/b/b8879176955907f7624823505c8afa12589e813a.png" width="297" height="170"><br><b>Từ khóa (Keywords)</b>: là những tên xác định và không thể làm định danh cho biến, và dùng để làm một việc xác định.<br></p>

<p></p><pre><code class="lang-auto">Fact: Mỗi ngôn ngữ có danh sách từ khóa khác nhau. Perl là ngôn ngữ có ít từ khóa nhất.</code></pre>

<p>Thôi, giờ em đi học bài đây <img src="http://daynhauhoc.com/images/emoji/twitter/frowning.png?v=2" title=":frowning:" class="emoji" alt=":frowning:"> . Em sẽ viết part 2 nhanh nhất có thể. Mong mọi người ủng họ em.</p>
]]></description><link>http://blog.daynhauhoc.com/fastest-way-to-learn-basic-of-programming-p1/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/fastest-way-to-learn-basic-of-programming-p1/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Mon, 14 Mar 2016 12:05:39 GMT</pubDate></item><item><title><![CDATA[Lâu lâu một quyển sách - Tôi đi học của nhà giáo Ưu Tú Nguyễn Ngọc Ký]]></title><description><![CDATA[
<p>Đạt nghe về quyển <a href="http://goo.gl/lYcxbo">Tôi Đi Học</a> đã lâu, nhưng giờ mới có dịp đọc.</p>

<p><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/7/7ce8e4368bcb7bb4d86234edb48b44ea12a73e6f.png" width="232" height="324"></p>

<p>Đang tính đọc xong sẽ review, nhưng quyển này ngắn chắc là sẽ xong trong ngày hôm nay. Mở đầu câu chuyện về cuộc đời thầy Nguyễn Ngọc Ký đọc rất cảm động, nhưng đến đoạn thầy tập viết thì buồn cười quá nên share luôn</p>

<p><div class="lightbox-wrapper"><a href="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/b/b1bd52c3d05a8ad3df6b90ab015b5c2d0c00bbb9.png" class="lightbox" title="Pasted image"><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/optimized/2X/b/b1bd52c3d05a8ad3df6b90ab015b5c2d0c00bbb9_1_690x336.png" width="690" height="336"><div class="meta">
<span class="filename">Pasted image</span><span class="informations">800x390 18.5 KB</span><span class="expand"></span>
</div></a></div></p>

<p>Topic này Đạt sẽ edit và cập nhật những suy nghĩ của Đạt vè quyển sách <strong>Tôi đi học</strong>.</p>

<p><strong>Chương 6: Việc học đã cho tôi niềm đam mê vô hạn</strong></p>

<ul><li>Thầy Ký chính là bằng chứng sống cho việc kiên trì theo đuổi mục tiêu và thành công với mục tiêu đấy. Nếu sau này việc học có khó khăn, Đạt sẽ tự hỏi mình, nếu là thầy Ký, thầy ấy có bỏ dở hay không?</li></ul>

<p><strong>Chương 23: Ước mơ học giỏi toán</strong></p>

<p>Một bài kiểm tra của thầy Nguyễn Ngọc Ký được điểm tối đa.</p>

<p><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/b/b91d34c0cf960cd0102b688072fa1bf827c1b8bb.png" width="402" height="276"></p>

<p>Đây là một quyển sách hay, không phải ai cũng có được tinh thần tự chủ như thầy Nguyễn Ngọc Ký. Mất tay là một nhược điểm, nhưng thầy Ký đã biết nhược điểm đó thành ưu thế của mình. Là con người đầy nghị lực, thầy Ký không bao giờ dựa dẫm vào người khác. Thầy cố gắng làm mọi thứ bằng chính đôi chân của mình dù người xung quanh có muốn giúp đỡ thế nào.</p>

<p>Tự chủ, không dựa dẫm vào người khác, không chấp nhận số phận là điều khác biệt ở thầy Ký. Đạt thấy sách hay, nhưng các chương từ 30 trở đi có lẽ không cần thiết <img src="http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"> </p>

<hr>

<p>Vì không ở VN nên đạt đọc thông qua <a href="http://alezaa.com/invite?daynhauhoc">Alezaa</a>. Hướng dẫn chi tiết cách sử dụng Alezaa ở<a href="http://daynhauhoc.com/t/doc-sach-online-giai-phap-tiet-kiem-cho-nguoi-muon-doc/21302"> topic này</a></p>

<p>Bạn nào thích sách giấy thì có thể mua ở <a href="http://goo.gl/lYcxbo">Tiki</a>, giá cũng rẻ, 33k VND.</p>
]]></description><link>http://blog.daynhauhoc.com/lau-lau-mot-quyen-sach-toi-di-hoc-cua-nha-giao-uu-tu-nguyen-ngoc-ky/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/lau-lau-mot-quyen-sach-toi-di-hoc-cua-nha-giao-uu-tu-nguyen-ngoc-ky/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sun, 13 Mar 2016 07:34:32 GMT</pubDate></item><item><title><![CDATA[Lâu lâu một quyển sách - Think and grow rich, không chỉ là sách làm giàu]]></title><description><![CDATA[
<p>Đạt thông thường không thích đọc sách nào có chữ "rich" trong đó chủ yếu là vì sợ đọc trúng sách "lừa đảo" vì Đạt biết làm giàu <del>không</del> khó <img src="http://daynhauhoc.com/images/emoji/twitter/joy.png?v=2" title=":joy:" class="emoji" alt=":joy:">.</p>

<p>Nhưng hôm nay Đạt sẽ review một sách có chữ "rich" là <strong><a href="https://goo.gl/aDXA5G">Think and grow rich: 13 Nguyên Tắc Nghĩ Giàu Làm Giàu</a></strong>. Quyển sách này là quyển đầu tiên Đạt review, vì Đạt nghĩ nó sẽ giúp được cho rất nhiều người.</p>

<p><strong>Các bạn chú ý, làm giàu rất khó nhé. Đạt giới thiệu quyển này cho người muốn thành công trong một lĩnh vực mà mình mong muốn chứ không phải để làm giàu.</strong></p>

<p><div class="lightbox-wrapper"><a href="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/1/1f74a392cbe2a55ff3abb0e1018f9fa855c74807.png" class="lightbox" title="Pasted image"><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/optimized/2X/1/1f74a392cbe2a55ff3abb0e1018f9fa855c74807_1_321x500.png" width="321" height="500"><div class="meta">
<span class="filename">Pasted image</span><span class="informations">1000x1553 726 KB</span><span class="expand"></span>
</div></a></div></p>

<p><strong>Trước hết Đạt muốn giải thích lý do tại sao Đạt lại review quyển sách này.</strong></p>

<p>Đạt sống ở xa công ty, mỗi buổi sáng mất khoảng 45 phút xe bus để tới chỗ làm. Nhưng đây là quãng thời gian đẹp nhất, tỉnh táo nhất và có nhiều ý tưởng điên rồ nhất <img src="http://daynhauhoc.com/images/emoji/twitter/smiling_imp.png?v=2" title=":smiling_imp:" class="emoji" alt=":smiling_imp:">. Vào một buổi sáng điên rồ hơn mọi ngày Đạt bỗng dưng nghĩ, chà, nếu mà mình không có học vấn, không có cái nghề code dạo thì làm sao mà sống được ở đất Singapore này nhỉ?</p>

<p>Google một lúc thì đọc được một câu trả lời trên Quora của một anh không có học vấn, có vợ và 3 con khuyên nên đọc "Think and grow rich". Đat nghe giới thiệu quyển này đã lâu, nhưng nghe từ một người tự nhận không có giáo dục bài bản thì chưa <img src="http://daynhauhoc.com/images/emoji/twitter/open_mouth.png?v=2" title=":open_mouth:" class="emoji" alt=":open_mouth:">. Chắc là hay lắm.</p>

<p>Sẵn với topic hôm trước nói về việc <a href="http://daynhauhoc.com/t/doc-sach-online-giai-phap-tiet-kiem-cho-nguoi-muon-doc/21302">đọc sách online trên Alezaa</a>, Đạt bắt đầu đọc và chọn quyển đầu tiên là <strong>Think and grow rich</strong>. </p>

<p>Nhiều khi đọc sách là để buồn ngủ, nhưng đọc trúng sách hay thì đúng là khó đi ngủ đúng giờ. Ngay khi đọc lời tựa và chương đầu tiên quyển sách thì Đạt nghĩ ngay đến việc mua hẳn 5-6 quyển để tặng người thân, giúp cho họ vượt qua được khó khăn trong cuộc sống. Hôm nay, Đạt hi vọng bài viết này sẽ gián tiếp tặng những người bạn trên mạng cả mình <img src="http://daynhauhoc.com/images/emoji/twitter/relaxed.png?v=2" title=":relaxed:" class="emoji" alt=":relaxed:">.</p>

<p>Quyển sách này nói lên bí mật của con người, bí mật này <strong>không chỉ để làm giàu mà còn là bí mật giúp ta thành công trong cuộc sống</strong>. Khi đọc quyển này, Đạt thấy mình may mắn vì đã được đọc nó và may mắn hơn là Đạt đã biết một phần của bí mật này nhiều năm trước đây <img src="http://daynhauhoc.com/images/emoji/twitter/sunglasses.png?v=2" title=":sunglasses:" class="emoji" alt=":sunglasses:">. <strong>Nhờ bí mật này mà Đạt đã thực hiện được một số mục tiêu nhỏ của bản thân</strong>. Các bạn muốn biết bí mật đó là gì ư? Mua và đọc nó đi, Đạt sẽ không nói đâu <img src="http://daynhauhoc.com/images/emoji/twitter/joy.png?v=2" title=":joy:" class="emoji" alt=":joy:">. </p>

<p><div class="lightbox-wrapper"><a href="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/original/2X/8/8821facb02b7b9072d8b5739d54e202001315ace.png" class="lightbox" title="Pasted image"><img src="http://daynhauhoc.s3-ap-southeast-1.amazonaws.com/optimized/2X/8/8821facb02b7b9072d8b5739d54e202001315ace_1_690x336.png" width="690" height="336"><div class="meta">
<span class="filename">Pasted image</span><span class="informations">800x390 16.2 KB</span><span class="expand"></span>
</div></a></div></p>

<p>Đạt khẳng định những điều được nói trong sách này là đúng. Bản thân Đạt đã cảm nhận được điều cơ bản nhất của bí mật này khi còn là một cậu bé 10 tuổi, hồi lớp 4, khi đọc về nhà phát minh vĩ đại Thomas Edison. Tuy nhiên, mãi 7 năm gần đây, tức là khi học năm 2, Đạt mới làm được và nó mang lại những thành công vượt trội mà không bao giờ Đạt có thể tưởng tượng ra được vào 7 năm trước.</p>

<p>Nếu có thể hãy mua một quyển để đọc và thể loại sách này phải đọc nhiều lần mới nhớ được hết. Nếu muốn mua sách này các bạn <strong>nên mua quyển bản quyền của Thái Hà Books</strong> chứ dừng mua hoặc download mấy quyển linh tinh trên mạng. Sách này có thể mua ở hai nguồn</p>

<p>Mua ở <a href="https://goo.gl/aDXA5G">AdayRoi</a> một sản phẩm mới của bác Vượng VinGroup. Các bạn mua thử rồi review cho mọi người nhé <img src="http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p>Hoặc mua ở <a href="https://goo.gl/nxLMDq">Tiki</a></p>

<p><strong>Chống chỉ định</strong>: Không bao giờ nên đọc sách lậu, sách ebook linh tinh trên mạng. Thà rằng đừng đọc, chứ đọc sách dịch không chính xác chỉ khiến mình hiểu nhầm vấn đề và cảm thấy sách dở, không đúng như lời mọi người nói.</p>

<p>Nếu khi đọc thấy có gì đó sai, không logic, nhớ comments, Đạt, và những người khác, sẽ cố gắng giải thích theo cách dễ hiểu nhất những gì mà Đạt hiểu.</p>

<p><strong>Thêm</strong>: Bạn nào đọc xong thấy hay, nhớ lên cho cảm tưởng nhé. Mình cũng mong muốn chương trình "lâu lâu một quyển sách" này được sự ủng hộ của các bạn thích đọc sách khác trên diễn đàn, nếu thấy chương trình hay, các bạn review thêm những quyển hay khác nhé <img src="http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<p><strong>Thêm 2</strong>: Đạt mới có con trai, đọc chương một của quyển sách này, tác giả có nói tới con trai của tác giả bị điếc bẩm sinh. Đọc xong đoạn đó, thấy được tình yêu thương của tác giả với con, Đạt nhớ con trai mình mà chảy nước mắt ròng ròng trên xe bus luôn.</p>

<p><strong>Thêm 3</strong>: Các phân tích về sách này</p>

<p>Lưu ý, các phân tích này có tiết lộ nội dung sách, suy nghĩ trước khi click</p>

<p>1) <a href="http://daynhauhoc.com/t/phan-tich-chuong-3-tu-ky-am-thi-trong-quyen-think-and-grow-rich/21629?u=ltd"> Phân tích chương 3 - Tự kỷ ám thị trong quyển Think and grow rich</a><br>2) <a href="http://daynhauhoc.com/t/lau-lau-mot-quyen-sach-think-and-grow-rich-khong-chi-la-sach-lam-giau/21505/49?u=ltd">Trả lời câu hỏi chuyển hóa năng lượng tình dục</a><br>3) ...</p>
]]></description><link>http://blog.daynhauhoc.com/lau-lau-mot-quyen-sach-think-and-grow-rich-khong-chi-la-sach-lam-giau/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/lau-lau-mot-quyen-sach-think-and-grow-rich-khong-chi-la-sach-lam-giau/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Thu, 03 Mar 2016 14:36:24 GMT</pubDate></item><item><title><![CDATA[Đọc sách online, giải pháp tiết kiệm cho người muốn đọc]]></title><description><![CDATA[
<p>Chú ý, lướt qua phần 1 nếu các bạn đã hiểu được việc đọc là quan trọng</p>

<h2>Phần 1: Việc đọc là quan trọng</h2>

<p>DayNhauHoc luôn khuyến khích các thành viên của mình đọc sách và chia sẻ kiến thức. Đạt tạo ra DayNhauHoc cũng vì muốn kiến thức lan tỏa từ chính các bạn sinh viên / người đi làm sang các bạn trẻ VN khác.</p>

<p><strong>Đọc để làm gì? Đọc đơn giản là một công cụ giúp con người tiếp thu kiến thức một cách tự chủ</strong>. Không phải khi nào ta cũng có thời gian tham gia một buổi hội thảo hay, có cơ hội tiếp xúc với những người tài giỏi để có thể học được gì đó từ họ. Nhưng sách thì luôn luôn sẵn sàng đợi ta đọc bất cứ lúc nào ta muốn.</p>

<p>Đọc là một kỹ năng mà chúng ta đang dần mất đi, Đạt nhớ ngày xưa  khi chưa có Internet, Đạt đọc rất nhiều vì ngoài sách ra, không có món giải trí nào có thể thay thế được sách. Định nghĩa sách ở đây không hẳn là sách khoa học, kỹ thuật. Sách có thể là sách kỹ năng sống, truyện phưu lưu, các câu chuyện ngụ ngôn hay là một quyển truyện tình yêu có ý nghĩa. Gần đây khi Facebook chiếm hầu hết thời gian của chúng ta, đọc trở nên lạ lẫm. Facebook khi ăn, khi học, khi cafe, khi đi ngủ, khi thức dậy ... vậy thì thời gian đâu để đọc? Đây là một điều mà Đạt đã học được từ cuộc sống "<strong>Khi mình thực sự muốn làm một điều gì đó, mình sẽ làm được</strong>". Khi ta thực sự muốn dành thời gian để đọc, ta sẽ tự tìm thấy thời gian mỗi ngày để đọc.</p>

<h2>Phần 2: Đọc eBook một cách có tránh nhiệm bằng cách trả tiền để đọc</h2>

<p>Một điểm nữa Đạt luôn khuyến khích mọi người trên DayNhauHoc đó là tôn trọng bản quyền tài sản trí tuệ. Sách cũng giống như phần mềm, nếu có thể mình nên mua để ủng hộ tác giả. Gia đình Đạt ở VN hiện giờ hay mua sách ở Tiki, Đạt cũng muốn đọc sách nhưng cứ phải chờ lâu lâu về VN để lấy sách sang đọc thì rất bất tiện.</p>

<p>Thế nến, Đạt nghĩ đến đọc online. Khi nói đến đọc online, tức eBook, Đạt đi tìm các dịch vụ bán eBook với giá tốt và chất lượng sách tốt. Đạt thấy hiện tại có 2 trang là <a href="http://alezaa.com/invite?daynhauhoc">Alezaa</a> và  <a href="http://waka.vn/">Waka</a>. Hai dịch vụ này đều có điểm chung là tên khó nhớ <img src="http://daynhauhoc.com/images/emoji/twitter/rage.png?v=1" title=":rage:" class="emoji" alt=":rage:"></p>

<p>Bỏ qua phần domain khó nhớ thì Đạt đánh giá chất lượn sách ở <a href="http://alezaa.com/invite?daynhauhoc">Alezaa</a> chất lượng hơn. Một điểm + rất lớn của <a href="http://alezaa.com/invite?daynhauhoc">Alezaa</a> là cho phép người dùng đăng ký theo tháng hoặc năm để đọc thoải mái. Alezaa có đầy đủ ứng dụng cho các nền tảng điện thoại và ngay trên PC.</p>

<blockquote><p><strong>Chỉ 1.000đ/ngày để tải và đọc không giới hạn</strong></p></blockquote>

<p>Đạt đang dùng thử gói miễn phí 7 ngày của <a href="http://alezaa.com/invite?daynhauhoc">Alezaa</a> thì thấy số lượng sách / tạp chí rất nhiều. Tuy không thể nói là tất cả sách đều có trên <a href="http://alezaa.com/invite?daynhauhoc">Alezaa</a> nhưng cũng vừa đủ để đọc.</p>

<p>Nếu có thời gian thì hãy thử dùng Alezaa để đọc "chơi" chứ đừng "chơi" Facebook nhiều quá nhé. Ngoài ra, Đạt cũng share thêm một promotion code để các bạn có thể dùng để được tặng thêm 30k mua sách. Các bạn cài đặt App Alezaa xong thì nhập code <strong>daynhauhoc</strong> vào nhé. Hoặc có thể vào link: <a href="https://read.alezaa.com/redeem.php">https://read.alezaa.com/redeem.php</a> rồi nhập code <strong>daynhauhoc</strong> vào.</p>
]]></description><link>http://blog.daynhauhoc.com/doc-sach-online-giai-phap-tiet-kiem-cho-nguoi-muon-doc/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/doc-sach-online-giai-phap-tiet-kiem-cho-nguoi-muon-doc/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sun, 28 Feb 2016 12:22:29 GMT</pubDate></item><item><title><![CDATA[Đạo Java ư ? Nó có thật đấy]]></title><description><![CDATA[
<p></p><pre><code class="lang-auto">Bài viết chỉ thể hiện quan điểm cá nhân dựa trên các số liệu và thu thập ý kiến</code></pre>

<p>Java - một điệp khúc muôn thuở, một vũ khí uy lực gắn liền với nhiều người và là niềm tự hào của James và Sun micsys quá cố.<br>class SơLượcJava {<br>   Java có tên ban đầu là Oak, do James Gosling thiết kế và công bố hoành tráng tại hội nghị SunWorld vào tháng 5-1995. Java là một ngôn ngữ thuần túy hướng đối tượng được sử dụng rộng rãi để viết ứng dụng đa nền, Internet và cả Android. Java hiện đang là ngôn ngữ lập trình rộng rãi nhất thế giới (trên cả C/C++)<br>   Về cá nhân thì mình thấy nó là một món đồ chơi cũ nhưng vẫn rất đẹp và không chỉ có một mình mình chơi và nó không chỉ để chơi ^^<br>}<br>Sau khi đọc bài viết của Vinacode - "Phát triển Phần Mềm,nó là một tôn giáo". Mình thấy nó có khá nhiều điểm tương đồng với những người thuộc "Tôn giáo Java", và bạn sẽ tự hỏi rằng nó có thật không? - XIn thưa, nó hoàn toàn có thật và hiện vẫn đang rất đông tín đồ.<br>Một khi bạn bước chân vào Java, bất kể bạn thuộc mảng nào thì bạn cũng đang thuộc "đạo Java" đấy, tuy nhiên, đa phần các bạn xem nó như là một thứ ngôn ngữ bình thường, xài chán thì bỏ <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> . Nhưng vẫn còn một bộ phận không ít người gắn mác "Cuồng" (cứ như bọn Sky ấy ^^)<br>Đối với một JavaNerd, họ đi đâu cũng thấy Java, không chỉ trong mã, máy tính mà cả ở thế giới thực. Họ nhìn thấy một chiếc cốc cà phê có khói nóng tỏa thì họ sẽ nghĩ ngay đến biểu tượng của Java. Họ trước khi lập trình thì lại lẩm bẩm "So help me Duke" (Duke là linh vật của Java) hay trước khi ăn hay uống cà phê thì lại đọc thầm "To the Duke". (Giống như thiên chúa giáo ấy, ôi lạy Duke.)<br>Khi nghe một ai đó chê bai Java thì lại phản ứng gay gắt, "Thằng khốn, Duke sẽ nguyền rủa mày!!" - Một JavaNerd cho hay. và còn nhiều thứ khác...<br>Mình không vơ đũa cả nắm nhưng chỉ với những biểu hiện ấy, bạn có thể phát hiện một JavaNerd nhưng lưu ý rằng - số lượng ngày càng tăng dần. (Như bọn Sky ấy ^^)<br>Mình hư cấu nãy giờ cũng khá nhiều rồi, và bây giờ mình sẽ vào vấn đề chính.<br>Vậy tại sao Java lại có sức hút như vậy?<br>Xét về khía cạnh Marketing thì Java đã rất thành công khi có xuất thân từ một gia đình danh giá là Sun Microsystem, có một biểu tượng rất quen thuộc - tách Café và tậu hẳn một linh vật khá là... mình chẳng biết nói sao nữa. Sau cái chết của Sun, thì Java cũng chẳng trở thành đứa trẻ "mồ côi", năm 2010, Oracle - một công ty khá nổi tiếng về dịch vụ và tài năng chặt chém tại Mỹ nhận nuôi và tiếp tục nuôi, cho ăn,... cho lớn. Tuy Java được ông trùm chặt chém nhận nuôi nhưng nó lại Free <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> . Nên Java khá là sang chảnh.<br>Về khía cạnh Ứng dụng, đi đâu cũng gặp Java, từ hệ thống máy giặt, tủ lạnh cao cấp, tivi màn hình cong (không phải cái này đâu <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> ). tới hệ thống cao cấp hơn như Đập đá Nokia, Phần mềm máy tính và cả ứng dụng, hệ điều hành Android và cả tựa game đình đám MineCraft . Đây được xem như là bước đệm to đùng của Java để lên cao như ngày nay.<br>Chức năng của Java cũng không ít hấp dẫn, đó là một ngôn ngữ thuần OOP rất rõ ràng và đẹp (đẹp hơn cả Pascal), dễ dùng và dễ hiểu, Java có bộ dịch và môi trường thực thi để chạy ở mọi nơi. Java khá mạnh và an toàn (trừ mấy cái Plug in trên Web) và được thường xuyên được nâng cấp bởi Oracle và được thêm nhiều tính năng cao cấp như annotation, lambda,...<br>Java có hệ thống lập trình viên đông đảo và động (năng động và cả... bạo động), tài liệu hướng dẫn thì nhiều vô số kể, các trang web dạy java cũng rất nhiều, ngay cả Daynhauhoc cũng có bộ phận đông đảo người dùng Java. Java cũng khá dễ dùng, dễ cài đặt, dễ chịu và dễ học. Khi học Java, nó sẽ dạy cho người học các khái niệm lập trình cơ bản và hướng đối tượng thật sự,... <br>Ngoài ra, Java còn có cả hệ thống Multimedia như Lady Java, Code Hard hay là những video đạo phim của JavaZone<br>Ôi! Java thật thần thánh.<br>Nhưng Java cũng có khá nhiều các yếu điểm.<br>+Phức tạp: Hệ thống thư viện và lớp rất phong phú nhưng có nhiều cái đã hết sài (như là Date thì bị thay bằng Calendar).<br>+Nâng cấp chậm: mặc dù Oracle đã nhận nuôi Java nhưng việc nâng cấp nó thì lại không như lúc dưới tay Sun, và cũng thua xa các ngôn ngữ lập trình khác về tốc độ nâng cấp.<br>...<br>mình hết biết gì để nói rồi ^^.<br>Và đó là những lợi ích của Java và những yếu điểm của Java.<br>Khuya rồi, mình đi ngủ đây. Ăn tết vui vẻ, anh em Daynhauhoc.</p>
]]></description><link>http://blog.daynhauhoc.com/d-o-java-u-no-co-th-t-day/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/d-o-java-u-no-co-th-t-day/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Mon, 01 Feb 2016 15:45:40 GMT</pubDate></item><item><title><![CDATA[10 Ngôn ngữ lập trình thuộc dạng... "khó ở" nhất]]></title><description><![CDATA[
<h2>Hệ thống xếp hạng này là do quan điểm cá nhân và thu thập ý kiến.</h2>

<p><strong>10.Perl</strong></p>

<p>Perl là một ngôn ngữ lập trình do Larry Wall thiết kế để xử lý các danh sách và báo cáo, được sử dụng để xử lý chuỗi kí tự và quản lý dữ liệu nhưng dần, Perl còn được dùng làm vũ khí cho các tay an ninh mạng nhưng việc sử dụng nhiều các kí hiệu, kiểu vô hướng và biểu thức chính quy kiến cho việc Debug và xem lại code cũng gây không ít khó khăn.</p>

<p></p><pre><code class="lang-auto">@alex = ( fred =&gt; 44, 'joe' =&gt; 2983, mike =&gt; -94 );
%heather = ('This', 'will', 'actually', 'work');
print "A: \@alex = (@alex)\n";
print "B: $heather{'This'} $heather{'actually'}\n";

%heather = @alex;
print "C: [$heather{'fred'}] [$heather{'joe'}] [$heather{'mike'}] ",
    "[$heather{'This'}]\n";
$heather{'dingbat'} = 8822;
$heather{'giggles'} = 33;
@alex = %heather;
print "D: @alex\n";

# Extras are empty string.
%heather = ('a', 'b', 'c');
print "E: [$heather{'a'}] [$heather{'c'}]\n";

# Duplicate keys get the last value.
%heather = ( 'brillig' =&gt; 74, 'snark' =&gt; 34, 
             'slithy' =&gt; 18, 'snark' =&gt; 99,
             'beamish' =&gt; 48, 'brillig' =&gt; 1 );
print "E: [$heather{'brillig'}] [$heather{'snark'}] ",
    "[$heather{'slithy'}] [$heather{'beamish'}]\n";</code></pre>

<p><strong>9.Objective-C</strong></p>

<p>Là ngôn ngữ "truyền thống" của Apple để lập trình hệ điều hành Mac OS, iOS và các ứng dụng chạy "Nền táo" (Apple's Platform). Ngôn ngữ này vay mượn phần lớn cú pháp của C khiến cho việc học nó trở nên dễ dàng trừ một điểm là hệ thống cú pháp "thô" và khiến lập trình viên dùng nhiều dòng code hơn. Nó lại là một ngôn ngữ lập trình hướng đối tượng nền C khiến cho lập trình viên không thể sử dụng hay khai thác tối đa sức mạnh của Lập trình hướng đối tượng. (Mình chẳng biết tại sao Steve Job ưa hoàn hảo mà lại chọn ngôn ngữ này?)</p>

<p></p><pre><code class="lang-auto">#import "Photo.h"
@implementation Photo
- (NSString*) caption {
 return caption; 
}
- (NSString*) photographer {
 return photographer; 
}
- (void) setCaption: (NSString*)input {
 [caption autorelease]; 
 [input retain]; 
 caption = input;
}
- (void) setPhotographer: (NSString*)input {
 [photographer autorelease]; 
 [input retain]; 
 photographer = input;
}
@end</code></pre>

<p><strong>8.JavaScript</strong></p>

<p>Đây là một ngôn ngữ "không giống họ cũng giống tên" với Java được sử dụng để tạo nội dung hành vi (Behavior) cho trang web. Cú pháp vay mượn khá nhiều Java nên khá dễ học nhưng nó lại khá kì dị vì nó sử dụng OOP-Prototype, sử dụng các hàm thay thế các lớp, sử dụng biểu thức chính quy và cả... Kiểu vô hướng, (mình thấy nó giống Perl đội lốt Java sống ở Web). Khiến cho việc viết code gặp khá nhiều lỗi nhưng... lại khó phát hiện. Vì đây là ngôn ngữ thông dịch nền web.</p>

<p><strong>7,5.PHP</strong></p>

<p>Điệp khúc này chắc hẳn các bạn đã nghe nhiều lần rồi nhưng nếu không đưa nó vào list thì chắc chắn là sự thiếu sót. PHP là cái ngôn ngữ "Justin", một cái búa với hai mấu nhổ đinh. Vô cùng xấu xí với kiểu vô hướng và hình như đó là đứa con lai của Perl và Basic - một tổ hợp với vô vàn từ khóa. và lại là sản phẩm của một kẻ... vừa bỏ bú ngôn ngữ Basic. Nhưng rồi thì sao? Nó như một loại nước sốt rẻ tiền mà ai cũng dùng. Thậm chí các tên miền có hỗ trợ PHP lại có giá cao hơn khoảng gấp rưỡi so với tên miền không dùng. Không biết là daynhauhoc có dùng PHP không nhỉ? anh <a class="mention" href="http://daynhauhoc.com/users/ltd">@ltd</a></p>

<p></p><pre><code class="lang-auto">$user = "root";
$pass = "";
$db = "mydatabase";
$link = @mysql_connect( "localhost", $user, $pass );
if ( ! $link ) {
  die( "Couldn't connect to MySQL: ".mysql_error() );
}
print "&lt;h2&gt;Successfully connected to server&lt;/h2&gt;\n\n";
@mysql_select_db( $db )
  or die ( "Couldn't open $db: ".mysql_error() );
print "Successfully selected database \"$db\"&lt;br /&gt;\n";
mysql_close( $link );</code></pre>

<p><strong>7.C++</strong></p>

<p>Là ngôn ngữ sử dụng nhiều nhất nhì thế giới và vai "Ông bà" của các ngôn ngữ lập trình của sau này (trong đó có Java), và sở hữu cái sức mạnh mà-ai-cũng biết. Được dùng chủ yếu để viết các chương trình đồ họa, mạnh mẽ và nhanh nhẹn, lập trình nhúng, game... nhưng đây là một cơn ác mộng của những người "chân ướt chân ráo" trong giới lập trình vì nó chính xác là một... Món Xà Bần. Nó là tổ hợp của Lập Trình OOP, Lập Trình Tuyến Tính (thừa kế C), và "...". Hệ thống lập trình OOP không trong sáng và không thừa kế được hết các đặc tính của OOP khiến cho việc học nó như một PL (Programming Language) Tuyến Tính đã khó, như một OOP còn khó hơn.</p>

<p></p><pre><code class="lang-auto">#include &lt;iostream&gt;
using namespace std;
int main(){
   cout &lt;&lt; "Hi Daynhauhoc" &lt;&lt; endl;
}</code></pre>

<p><strong>6.Scala</strong></p>

<p>Scala là ngôn ngữ lập trình do Martin Odersky thiết kế. Nó là tổng của Lập Trình hướng đối tượng và Lập Trình hướng hàm. Và nó đúng là một kẻ "dựa hơi Java" từ cú pháp và chạy cả trên nền Java (đùa à?!). Mặc dù dựa hơi Java nhưng nó vẫn khá xấu xí trong cú pháp riêng. (lại còn dùng lazy, làm ơn đi!)</p>

<p><strong>5.Prolog</strong></p>

<p>Prolog đã quá nổi tiếng về sự linh hoạt trong việc hỗ trợ lập trình hướng Logic và được dùng khá rộng rãi để lập trình "artificial intelligence" (trí khôn nhân tạo -hay còn gọi là AI). nhưng hệ thống mã nguồn thì khó hiểu và không quen thuộc với hầu hết các lập trình viên</p>

<p></p><pre><code class="lang-auto">intersect([],X,[]):- !.
intersect([X|R],Y,[X|T]):- member(X,Y),intersect(R,Y,T),!.
intersect([X|R],Y,L):- intersect(R,Y,L).</code></pre>

<p><strong>4.Lisp</strong> </p>

<p>Đây là ngôn ngữ lập trình thuần hướng hàm. Nhưng nó quá xấu xí và lại mang phong cách lập trình hàm - thứ hack não còn hơn cả Con trỏ.</p>

<p><strong>3.Haskell</strong></p>

<p>giống như Matlab, đây là "thứ" (mình cũng chưa biết nên gọi nó bằng gì) chủ yếu chỉ dùng để tính toán phức tạp. Nhưng lại khoác áo Lập Trình Hàm và có các hàm "rất" trừu tượng số hóa như Monad, Forall,... khá khó hiểu nhưng được cái là khá mạnh. Và được nhiều người gọi là "Công nghệ của Người Ngoài Hành Tinh"</p>

<p><strong>2.Assembly Language</strong></p>

<p>Đây là thứ "khiến tôi mất ngủ" khi gặp nó. Nó là một ngôn ngữ anh em "cùng mẹ khác anh rể" với Hexa và Ngôn ngữ máy. Nó ám ảnh mình hơn cả C++. Đây là một ngôn ngữ vô cùng chua chát đối với các sinh viên thuộc ngành Khoa Học Máy Tính và những người newbie vì hệ thống rất phức tạp về câu lệnh và nếu code không khéo thì máy tính của bạn sẽ "vào Nghĩa Trang". nhưng đây là "God's PL", nó có thể làm được mọi thứ, rất nhanh và nguy hiểm và nó sẽ dạy cho bạn biết "từ góc đến ngọn" của cấu trúc máy tính và ngôn ngữ lập trình, các cách thức hoạt động,... nó được dùng chủ yếu trong thiết kế vi mạch, ngôn ngữ lập trình và giúp bạn học các ngôn ngữ lập trình khác dễ như ăn kẹo. Nhưng trước hết, bạn cần mua máy tính mới <img src="http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"> .</p>

<p></p><pre><code class="lang-auto">section	.text
    global _start   ;must be declared for linker (ld)
_start:	            ;tells linker entry point
    mov	edx,len     ;message length
    mov	ecx,msg     ;message to write
    mov	ebx,1       ;file descriptor (stdout)
    mov	eax,4       ;system call number (sys_write)
    int	0x80        ;call kernel
	
    mov	eax,1       ;system call number (sys_exit)
    int	0x80        ;call kernel

section	.data
msg db 'Hello, world!', 0xa  ;our dear string
len equ $ - msg     ;length of our dear string</code></pre>

<p><strong>1.APL</strong></p>

<p>Đây là ngôn ngữ lập trình của một "ông", và "ông" ấy rất rảnh. Nó được xếp vào hàng "ngôn ngữ kì dị" (ông bạn của nó là BrainFuck,...). Với hệ thống cú pháp phần lớn là kí hiệu phức tạp (chả hiểu ông ta nghĩ cái **o gì nữa.). Và vì sự phức tạp của nó, giờ nó đã nằm trong viện bảo tảng và yên nghĩ cùng với người cha của nó - Kenneth E. Iverson.</p>

<p></p><pre><code class="lang-auto">  L←(Lι':')↓L←,L       ⍝ drop To:
    L←LJUST VTOM',',L    ⍝ mat with one entry per row
 [8]    S←¯1++/∧\L≠'('       ⍝ length of address
 [9]    X←0⌈⌈/S
 [10]   L←S⌽(−(⍴L)+0,X)↑L    ⍝ align the (names)
 [11]   A←((1↑⍴L),X)↑L       ⍝ address
 [12]   N←0 1↓DLTB(0,X)↓L    ⍝ names)
 [13]   N←,'⍺',N
 [14]   N[(N='_')/ι⍴N]←' '   ⍝ change _ to blank
 [15]   N←0 ¯1↓RJUST VTOM N  ⍝ names
 [16]   S←+/∧\' '≠⌽N         ⍝ length of last word in name</code></pre>
]]></description><link>http://blog.daynhauhoc.com/10-ngon-ngu-l-p-trinh-thu-c-d-ng-kho-nhat/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/10-ngon-ngu-l-p-trinh-thu-c-d-ng-kho-nhat/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sun, 31 Jan 2016 07:57:35 GMT</pubDate></item><item><title><![CDATA[Pascal - Một ngôn ngữ thoi thóp]]></title><description><![CDATA[
<blockquote><p>*Lưu ý: Bài viết chỉ thể hiện quan điểm cá nhân và không có ý chỉ trích bất kỳ cá nhân hay tổ chức nào. Vui lòng gở bỏ hết ứng dụng liên quan đến gạch đá và rút dây bàn phím trước khi xem.</p></blockquote>

<p>Pascal - Một thứ mà chắc chắn các ITer nào cũng đã thử sức khi còn ngồi trên ghế nhà trường vào năm lớp 8 và 11 hay trong các cuộc thi Olympic Tin Học. Đó là sản phẩm của một giáo sư đã rinh giải Turing - Niklaus Wirth.</p>

<p>Trước hết, mình xin nói sơ lược về Pascal một tí. Pascal là một ngôn ngữ lập trình hướng cấu trúc thuộc dạng mệnh lệnh do Niklaus Wirth phát triển vào những năm 1970 dựa trên cơ sở của ALGOL. Pascal là một ngôn ngữ lập trình được Wirth phát triển cho mục đích giáo dục. Nó có cú pháp dùng khá nhiều từ nhưng hầu hết là tiếng anh và cũng khá dễ hiểu, đơn giản</p>

<p>VD: Chương Trình Hello World<br></p>

<p></p><pre><code class="lang-auto">program HelloWorld;
begin
   writeln('Hello World'); readln;
end.</code></pre>

<p>Nhưng mình có một thắc mắc: "Pascal có phải chỉ để giảng dạy ?", và sau nhiều làm phiền "Thánh Google" thì "ông ta" đã cho mình một câu trả lời : Vâng, chính xác là thế!</p>

<p>Trước đây, khi mà ông cha ta còn phải dùng cái máy tính với màn hình cong CRT và cái Case thì để dưới cái màn hình chạy Windows 1, Windows NT thì Pascal thì vẫn có đất dụng võ riêng. Lúc ấy, các phần mềm nền Console (tương tự như cmd - không có UI/UX) thì Pascal được coi là tương đương với ngôn ngữ "ông cha" C. Sau đó thì ngày càng ít người dùng vì nó ngày càng không còn phù hợp và lộ rõ các khuyết điểm , thậm chí Brian Kernighan đã bỏ công viết một cuốn sách (không phải PDF đâu) có tiêu đề dài hơi là Tại sao Pascal không phải là ngôn ngữ lập trình ưa thích của tôi (Why Pascal is not my favorite Programming Language) chỉ để phê phán Pascal và đến ngày nay, sau khi 2 năn phủ đầu học nó, giành mấy cái bằng Olympic tin học cho máy cái đề bài "Trên trời dưới đất" (Kiểu như "1 đoàn khách du lịch đến Việt Nam, hãy tìm tọa độ để hành lý của họ" hay "Xe tăng xuất phát từ điểm n bất kỳ, hãy tính số bánh xe",...) chỉ để thực hiện mấy cái thuật toán phức tạp mà chẳng biết sau này có áp dụng được vào thực tế hay không nữa. Rồi lại đi học đại học thì đa phần đều học C, C++, Java,... (hồi trước thì có vài trường dạy Pascal còn bây giờ mất hết rồi). Ra đi làm thì lại front-end, back-end, Object-Oriented Programming các kiểu,... bla bla. Để rồi tối nằm mà nghĩ "Hồi ấy mình học Pascal để làm cái *éo gì thế nhỉ?". (Có một số bác học xong Pascal rồi lên học Delphi thì nó đã trở thành 1 ngôn ngữ khác rồi, mình không nói đến)</p>

<p>Tại sao ngày nay Pascal chỉ còn xuất hiện trong trường học? Có phải là do nó có nhiều khuyết điểm, khó sử dụng hay phải học thuộc nhiều từ vựng, phải để ; cuối lệnh (kiểu nghĩ của học sinh hay các bác "Sửu nhi"- vào học thì thầy dạy sao làm y vậy, hay còn liếc sang đứa bên cạnh) hoặc nó sinh mã phức tạp, dài, chương trình chạy không hiệu quả, thư viện hạn chế, cộng đồng hỗ trợ ít,... (cách nghĩ của các pro, coder, dev-er,...). Thì bây giờ chúng ta hãy đi phân tích các khuyết điểm của nó:</p>

<ol>
<li>Về các từ khóa thì không vấn đề nhưng mà có một số từ khóa khá... vô dụng (program - chỉ để chú thích tên chương trình).</li>
<li>Con trỏ khá vô dụng và khó sử dụng, và cả khó khai báo<br>VD: <br>Type<br>int = ^integer; <br>hay <br>var <br>p : pointer;<br>(Các thím nào dùng C/C++ đã quen với việc dùng * thì Pascal sẽ khiến các bạn thét lên "WT*F?")</li>
<li>Khai báo biến phải đặt trong var (biến toàn cục) và phải khai báo hết toàn bộ, từ biến dùng nhiều lần đến dùng một lần.</li>
<li>Không Case Sensitive (Phân biệt hoa-thường) -&gt; khó đặt tên biến (khi trường hợp phải dùng 2 biến cho hai vị trí khác nhau nhưng lại sử dụng chung một tên)</li>
<li>Được thiết kế ban đầu cho việc giảng dạy -&gt; hệ thống thư viện hàm được thiết kế còn khá ít.</li>
<li>Không thống nhất về Compiler (vô vàng các compiler nhưng chỉ có Turbo là thấy thoải mái nhất. ^^). và cũng có khá ít IDE (Chỉ có Free Pascal, Borland Pascal, Dev-Pas, V-pas,... - Thường thấy là trên nền console không hiệu quả)</li>
<li>Kiểu liệt kê cũng ổn, kiểu bản ghi cũng đã lỗi thời - vì bây giờ toàn dùng Database, hệ thống hàm làm việc với hệ thống tập tin cũng kém hiệu quả.</li>
<li>Hiện chỉ còn thoi thóp trong môi trường giáo dục trung học, còn đại học thì,.... như đã nói.</li>
<li>Không chạy đa nền tảng, chỉ chạy trên nền Console của DOS hay UNIX</li>
<li>Pascal yêu cầu phức tạp về hệ thống lệnh, đẹp thì đẹp thật nhưng mấy anh coder dạo ngày nay thích nhanh và mạnh là chính nên code Pascal khá... khó chịu.</li>
<li>Các định nghĩa cơ bản được học bằng pascal nhưng một khi đã quen với Pascal thì chuyển sang C thì thấy nó thiếu rất nhiều thứ (#define - định nghĩa người dùng, hằng, các kiểu trả về, lại không có hàm main, thiết kế procedure và function chỉ cho một mục đích,...) và khiến các bạn không quen.</li>
<li>Không dùng Non-print Character, Regular Expression -&gt; Khó ứng dụng viết chương trình hiệu quả cao.<br>Còn nhiều lắm..</li>
</ol>

<p>Vậy mình đã phân tích xong các yếu điểm của Pascal khiến nó thoi thóp nằm trong máy chiếc PC 512 Ram đặt trong trường trung học.</p>

<p>Pascal là một ngôn ngữ đẹp, ngay cả Cha đẻ của C - Dennis Riches còn khen và bênh vực cho Pascal thì chắc hẳn Pascal sẽ rất phát triển và làm bộ móng cho các ngôn ngữ sau này. Nhưng đó chỉ là cách nghĩ của 15 năm trước, còn hiện tại thì học xong thì chẳng còn gặp lại nó nữa, nó càng ngày càng bộc lộ nhiều yếu điểm, số lượng lập trình viên dùng và hỗ trợ ngày càng ít. Có thể nói nó đang "Chết dần chết mòn" trong thế giới công nghệ "3 Năm là cũ, 7 năm là cổ, 10 năm là bị khai tử" như ngày nay. và cuối cùng có thể nó sẽ "trút hơi thở cuối cùng" và làm collapse (sập) cả giàn máy WinXP 512 MB Intel Celeron 69 MHz ở trường học <img src="http://daynhauhoc.com/images/emoji/twitter/slight_smile.png?v=2" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>

<blockquote><p>Rồi, bây giờ bạn có thể cắm lại bàn phím và bắt đầu tự tin thể hiện bản lĩnh Anh Hùng Bàn Phím.. à không Sửu Nhi bàn Phím mới đúng ^^ (đùa thôi).</p></blockquote>
]]></description><link>http://blog.daynhauhoc.com/pascal-m-t-ngon-ngu-thoi-thop/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/pascal-m-t-ngon-ngu-thoi-thop/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sat, 23 Jan 2016 11:31:09 GMT</pubDate></item><item><title><![CDATA[Bạn có thường nghe nhạc khi làm việc?]]></title><description><![CDATA[
<p>Bạn thường nghe nhạc khi làm việc? Nhiều nghiên cứu đã chứng minh nghe nhạc phù hợp với đặc điểm nghề nghiệp giúp tăng hiệu quả công việc. Biểu đồ sau sẽ cho bạn biết loại nhạc lý tưởng giúp bạn có động lực và tập trung.<br>  <a href="http://wp_media-prod.s3.amazonaws.com/app/uploads/2013/09/sonos-infographic-working-jams-what-music-to-listen-to-on-the-job.jpg" rel="nofollow">http://wp_media-prod.s3.amazonaws.com/app/uploads/2013/09/sonos-infographic-working-jams-what-music-to-listen-to-on-the-job.jpg</a><br><a href="http://wp_media-prod.s3.amazonaws.com/app/uploads/2013/09/sonos-infographic-working-jams-what-music-to-listen-to-on-the-job.jpg" rel="nofollow"><img src="http://wp_media-prod.s3.amazonaws.com/app/uploads/2013/09/sonos-infographic-working-jams-what-music-to-listen-to-on-the-job.jpg" width="" height=""></a></p>
]]></description><link>http://blog.daynhauhoc.com/ban-co-thuong-nghe-nhac-khi-lam-viec/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/ban-co-thuong-nghe-nhac-khi-lam-viec/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Fri, 18 Dec 2015 08:57:34 GMT</pubDate></item><item><title><![CDATA[JavaScript - Debounce function là gì?]]></title><description><![CDATA[
<p>Lúc trước mình có làm một bài test yêu cầu làm một Instant Search như của Twitter. Trong quá trình làm, sẽ phát sinh một trường hợp như trong hình dưới đây.</p>

<a href="http://vhnam.github.io/blog/javascript-debounce-function-la-gi/images/example.png" target="_blank"><img src="http://vhnam.github.io/blog/javascript-debounce-function-la-gi/images/example.png" width="341" height="124"></a>

<p>Tức là, mình gởi 3 request, thì sẽ có 3 response tương ứng. Nhưng mình chỉ muốn gởi request thứ 3 với từ khóa <strong>"abc"</strong> nhưng response trả về lại là dữ liệu của từ khóa <strong>"ab"</strong>. Như vậy kết quả search của người dùng sẽ bị sai, ảnh hưởng nghiêm trọng tới UX. <img src="http://daynhauhoc.com/images/emoji/twitter/scream.png?v=0" title=":scream:" class="emoji" alt=":scream:"></p>

<p>Mình được giới thiệu kỹ thuật <strong>Debounce</strong> để giải quyết vấn đề này, sẵn tiện viết thành blog để chia sẻ luôn <img src="http://daynhauhoc.com/images/emoji/twitter/wink.png?v=0" title=":wink:" class="emoji" alt=":wink:"></p>

<p>Mình có viết chưa đúng chỗ nào, mong mọi người chỉ chỗ để sửa.</p>

<p><a href="http://vhnam.github.io/blog/javascript-debounce-function-la-gi/" class="onebox" target="_blank" rel="nofollow">http://vhnam.github.io/blog/javascript-debounce-function-la-gi/</a></p>
]]></description><link>http://blog.daynhauhoc.com/javascript-debounce-function-la-gi/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/javascript-debounce-function-la-gi/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Mon, 02 Nov 2015 18:25:24 GMT</pubDate></item><item><title><![CDATA[Tạo và deploy app trên heroku (node.js)]]></title><description><![CDATA[
<blockquote><p>Mình là newbie, từng gặp rất nhiều khó khăn khi tiếp xúc với heroku. Nay mình post bài này để các bạn chưa biết tham khảo. Các đại ca góp ý chứ đừng chém nhé.</p></blockquote>

<p>Những điều cần thiết:<br> - Biết sơ sơ về git (biết clone, add, commit,push vậy là đủ rồi)<br> - Biết sơ sơ về Node.js (biết cài node, sử dụng npm install, run)<br> - Tạo một tài khoản Heroku</p>

<p>Thực hiện:<br><strong>Step 1: Chuẩn bị các thứ liên quan</strong></p>

<ul>
<li>Cài Node.js: (Vì ví dụ mình dùng node nên đương nhiên phải cài node) <br>Vào trang <a href="https://nodejs.org/en/" rel="nofollow">https://nodejs.org/en/</a> tải node for window về cài vào.</li>
<li>Cài express-generator: (Cái này là framework giúp minh tạo một trang web nhanh, đúng chuẩn)<br>Sau khi cài Node.js xong (có thể cần restart) bật PowerShell lên gõ:<br><strong><code>npm install express-generator -g</code></strong>
</li>
<li>Cài Heroku Toolbelt<br>Vào trang sau tải về và cài đặt: <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up" rel="nofollow">https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up</a>
</li>
</ul>

<p><strong>Step 2: Tạo trang web trên local</strong></p>

<ul>
<li>Dùng PowerShell tìm đến nơi cần đặt thư mục bằng lệnh <strong>cd</strong>
</li>
<li>Gõ: <strong><code>express ten_website</code></strong>     express sẽ sinh ra một thư mục là <em>ten_website</em> trong đó có views, routers...</li>
<li>Gõ <strong><code>cd ten_website</code></strong> để vào thư mục này</li>
</ul>

<p><strong>Step 3: Tạo trang web trên Heroku và gắn với local</strong></p>

<ul>
<li>Đăng nhập heroku:<br>Gõ: <strong><code>heroku login</code></strong> và nhập <em>email</em> và <em>password</em> đăng nhập vào.</li>
<li>Tạo project trên heroku:<br>Gõ: <strong><code>heroku apps:create ten_website</code></strong>
</li>
<li>Gắn thư mục hiện tại vào project đã tạo trên heroku<br>Gõ: <strong><code>heroku git:remote -a ten_website</code></strong>
</li>
</ul>

<p><strong>Step 4: Cập nhật trang web và upload lên Heroku</strong></p>

<ul>
<li>Gõ: <strong><code>git add .</code></strong> để thêm những thay đổi mới vào lần commit này</li>
<li>Gõ: <strong><code>git commit -am "chu thich cho lan commit nay"</code></strong> để commit những thay đổi và chú thích cho lần này</li>
<li>Gõ: <strong><code>git push heroku master</code></strong>
</li>
</ul>

<hr>

<p>Vậy là xong. Đợi lệnh trên chạy xong là website đã có thể chạy. Bạn có thể gõ <strong><code>heroku open</code></strong> để mở trang web trên browser. Nếu bạn có nhiều app thì cần gõ <strong><code>heroku open --app ten_website</code></strong><br>Từ nay, sau khi bạn edit trên local xong chỉ cần tìm đến thư mục <code>ten_website</code> thực hiện <strong>Step 4</strong> là có thể upload lên heroku, đôi khi cần login lại.</p>
]]></description><link>http://blog.daynhauhoc.com/t-o-va-deploy-app-tren-heroku-node-js/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/t-o-va-deploy-app-tren-heroku-node-js/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Thu, 15 Oct 2015 04:43:57 GMT</pubDate></item><item><title><![CDATA[Tại sao một số người lại thích xin Facebook để ... hỏi bài?]]></title><description><![CDATA[
<p>... Nhưng có thể sẽ không bao giờ hỏi hoặc khó lòng nhận được câu trả lời như mình hi vọng</p>

<p><strong>Tại sao người hỏi có thể sẽ không bao giờ hỏi</strong></p>

<p>Đó là khi việc add friends nhanh và dễ dàng hơn vệc chuẩn bị một câu hỏi rõ ràng. Hoặc đó là khi người hỏi không còn hứng thú với vấn đề họ từng muốn hỏi nữa.</p>

<p><strong>Tại sao khó lòng nhận được câu trả lời như mình tưởng</strong></p>

<p>Theo Đạt thấy thì ai cũng muốn được giúp đỡ, Đạt trước cũng thế nhưng giờ bớt rồi. Bởi vì được giúp đỡ khi mình gặp khó khăn thì thật là tuyệt vời đúng không? Thế nhưng đó là trước khi Đạt rơi vào tình trạng bị hỏi quá nhiều trong khi thời gian dành cho gia đình quá ít. Đạt không thể dành 100% thời gian cần thiết để trả lời một câu hỏi hoàn chỉnh, thế nên các câu hỏi sẽ được trả lời ở dạng</p>

<ul>
<li>Sơ sài</li>
<li>Hướng dẫn google hoặc nhờ người khác trả lời</li>
<li>Lơ</li>
</ul>

<p>Có lẽ ai cũng muốn giúp người khác, nhưng phải nằm trong một giới hạn nào đấy. Well, Đạt làm video dạy học lập trình nhưng Đạt không mong đợi sẽ nhận được rất nhiều câu hỏi. Bởi vì Đạt sẽ không có thời gian trả lời mọi câu hỏi, trong khi ngoài kia có rất nhiều người giỏi hơn Đạt và tổng thời gian rảnh rỗi của mọi người sẽ bằng gấp nhiều lần thời gian làm việc full-time 8h mỗi ngày của Đạt.</p>

<p><strong>Giải pháp cho vấn đề trên nên được giải quyết như thế nào?</strong></p>

<p>Và đấy là lý do DayNhauHoc ra đời, nó giúp cho</p>

<ul>
<li>Nhiều người biết trả lời câu hỏi cho nhiều người không biết</li>
<li>Nhiều người biết ít cùng trả lời câu hỏi cho một người không biết</li>
<li>Nhiều người không biết học được từ các câu trả lời trên</li>
</ul>

<hr>

<p>Chốt: Đây không phải là bài viết quảng cáo cho DayNhauHoc <img src="http://daynhauhoc.com/images/emoji/twitter/smiling_imp.png?v=0" title=":smiling_imp:" class="emoji" alt=":smiling_imp:"></p>
]]></description><link>http://blog.daynhauhoc.com/t-i-sao-m-t-s-ng-i-l-i-thich-xin-facebook-d-h-i-bai/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/t-i-sao-m-t-s-ng-i-l-i-thich-xin-facebook-d-h-i-bai/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Sat, 10 Oct 2015 07:53:44 GMT</pubDate></item><item><title><![CDATA[Đặt tên biến như thế nào cho hiệu quả (part1)]]></title><description><![CDATA[
<p>( Sinh nhật diễn đàn rồi, viết bài kiếm ít like đi chơi xổ số nào <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> )</p>

<p>Bài viết này mình xin chia sẻ một vài gợi ý về việc đặt tên biến sao cho hiệu quả  <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> </p>

<p><img src="http://www.nambos.de/img/motive/naming-prozess.jpg" alt="Cách đặt tên biến" width="458" height="220"></p>

<p>Việc đặt tên biến khi làm bài tập nhỏ khá là đơn giản, thường là cứ <code>int a,b,c,d,... ;</code> là xong <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> nhưng khi làm những bài tập phức tạp, hay một project nào đó mà cần lưu trữ, phát triển lâu dài thì phải rất chú ý việc đặt tên biến làm sao cho dễ hiểu, rõ ràng, đặc biệt là khi làm team hoặc chia sẻ code cho người khác thì càng phải trau chuốt, nếu không thì người đọc code của bạn sẽ như thế này <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"></p>

<p><img src="http://www.reactiongifs.com/r/yxno.gif" alt="Phản ứng của người đọc code của bạn" width="396" height="234"></p>

<h3>1. Một vài ví dụ về tên "đẹp", tên "xấu"</h3>

<p>Ta bắt đầu với 2 đoạn code như thế này:</p>

<p></p><pre><code class="lang-auto">x = x - xx;
xxx = aretha + SalesTax(aretha);
x = x + LateFee(x1, x) + xxx;
x = x + Interest(x1, x);</code></pre>

<p>Và đây:</p>

<p></p><pre><code class="lang-auto">balance = balance - lastPayment;
monthlyTotal = NewPurchases + SalesTax ( newPurchases );
balance = balance + LateFee( customerID, balance ) + monthlyTotal;
balance = balance + Interest( customerID, balance );</code></pre>

<p>Rõ ràng là code thứ 2 "đẹp" hơn nhiều so với code 1, code 1 mà là Ngọc Trinh thì code 2 chắc phải hơn Polla <img src="http://daynhauhoc.com/images/emoji/twitter/joy.png?v=0" title=":joy:" class="emoji" alt=":joy:"> </p>

<blockquote><p><strong>"Đẹp"</strong> ở đây nghĩa là: <strong>tính dễ đọc</strong> (readable), <strong>tính dễ nhớ</strong> (memorable) và <strong>tính phù hợp</strong> (appropriate).</p></blockquote>

<p><strong>Điều quan trọng nhất khi đặt tên biến là phải làm sao để tên biến nó thể hiện được đầy đủ và chính xác cái mà nó nói đến</strong> vì như vậy người đọc code sẽ không bị lẫn với các thứ khác. Ví dụ một tên biến thế này: </p>

<p></p><pre><code class="lang-auto">numberOfPeopleOnTheUsOlympicTeam</code></pre>

<p>Rõ ràng tên này đẹp hơn nhiều so với mấy cái tên kiểu <code>a</code>, <code>b</code>, <code>c</code>, <code>number</code>, <code>x</code>,... Chỉ có điều là hơi dài chút. (Vụ dài ngắn sẽ nói ở phần sau)</p>

<p>Bây giờ bạn thử chấm xem mấy em dưới đây em nào là hoa hậu em nào là thị nở nhá <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> </p>

<blockquote><ul>
<li><p>Biến Ngày tháng hiện tại: currentDate, todaysDate <strong>vs.</strong> current, c, x, x1, x2, date</p></li>
<li><p>Biến Số dòng của trang: linesPerPage <strong>vs.</strong> lpp, lines, l, x, x1, x2</p></li>
<li><p>Biến Vận tốc của một đoàn tàu cao tốc: trainVelocity, velocityInMph <strong>vs.</strong> velt, v, tv, x, x1, x2, train</p></li>
</ul></blockquote>

<p>Tên biến bên trái nêu rõ được cái mà nó muốn nói đến, còn bên phải thì nó quá mơ hồ, không cụ thể, dùng mấy tên như vậy thì chắc code lâu lâu không động vào là chẳng hiểu biến này là biến gì luôn <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"></p>

<h3>2. Hãy hướng vào Vấn Đề cần nói đến chứ đừng hướng vào Giải Pháp (Problem-Orientation)</h3>

<p>Nói cách khác là hãy trả lời câu hỏi <strong>What</strong> chứ đừng trả lời câu hỏi <strong>How</strong></p>

<p>Ví dụ: </p>

<pre><code>inputRecord vs. employeeData 
bitFlag vs. printerReady
calcVal vs. sum</code></pre>

<p><strong>inputRecord</strong> là nói về cách chúng ta lấy thông tin (How), còn <strong>employeeData</strong> mới là cái chúng ta muốn nói đến (What). Tương tự <strong>bitFlag</strong> là công cụ để ta xác định printer đã Ready chưa, còn <strong>printerReady</strong> mới là cái ta cần nói đến. <strong>Sum</strong> là cái cần nói đến còn <strong>calcVal</strong> là nói về cách tính <strong>sum</strong>.</p>

<h3>3. Tên biến dài tầm nào thì được?</h3>

<p>Quay lại với ví dụ vừa nãy:</p>

<blockquote><p>numberOfPeopleOnTheUsOlympicTeam</p></blockquote>

<p>Tên này thì quá là rõ ràng, đầy đủ, không thể nào nhầm với biến khác được, nhưng có cái là nó hơi dài, cho vào code sẽ làm rối code. Người ta thống kê được là những chương trình có độ dài trung bình các tên biến tầm khoảng từ 8 - 20 (tức là khoảng 2 - 5 từ) thì dễ debug hơn. Tất nhiên thống kê này không có nghĩa là biến nào cũng phải như vậy, mà nó nhắc chúng ta nhớ đến việc phải đặt tên biến sao cho nó có độ dài hợp lý.</p>

<p>Với biến trên thì ta có thể viết là: numTeamMembers, teamMemberCount,.. nhưng tuyệt đối đừng đặt tên kiểu n, ntm, tmc,..</p>

<p>... Mỏi tay quá.... To Be Continued <img src="http://daynhauhoc.com/images/emoji/twitter/smile.png?v=0" title=":smile:" class="emoji" alt=":smile:"> ...  </p>

<hr>

<p>Bài viết dựa trên cuốn Code Complete của Steve C.McConnell</p>

<hr>

<p>Đọc thêm: Những bài viết về code sao cho đẹp<br><a href="http://daynhauhoc.com/tags/coding-style" class="onebox" target="_blank">http://daynhauhoc.com/tags/coding-style</a></p>
]]></description><link>http://blog.daynhauhoc.com/d-t-ten-bi-n-nh-th-nao-cho-hi-u-qu-part1/</link><guid isPermaLink="true">http://blog.daynhauhoc.com/d-t-ten-bi-n-nh-th-nao-cho-hi-u-qu-part1/</guid><dc:creator><![CDATA[[object Object]]]></dc:creator><pubDate>Fri, 09 Oct 2015 16:12:03 GMT</pubDate></item></channel></rss>