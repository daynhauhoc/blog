{"head":{"id":5973,"layout":"Post","route":"giai-thich-su-khac-nhau-giua-khai-bao-va-dinh-nghia-trong-c-c","title":"Giải thích sự khác nhau giữa khai báo và định nghĩa trong C/C++","tags":["c++","c","define","declare"],"date":"2015-04-15T01:27:04.022Z","author":{"username":"ltd","avatar":"/user_avatar/daynhauhoc.com/ltd/{size}/1016_1.png"},"description":"Giải thích chung chung:\n\nKhai báo: là giới thiệu sự tồn tại của\n\nmột biến với kiểu dữ liệu cụ thể \n\nmột hàm với cấu trúc trả về và tham số…"},"body":"<h2 id=\"gii-thch-chung-chung\"><a href=\"#gii-thch-chung-chung\" class=\"statinamic-HeadingAnchor\">#</a>Giải thích chung chung:</h2>\n<p><strong>Khai báo:</strong> là giới thiệu sự tồn tại của</p>\n<ul>\n<li>một biến với kiểu dữ liệu cụ thể </li>\n<li>một hàm với cấu trúc trả về và tham số nhận vào</li>\n</ul>\n<p><strong>Định nghĩa:</strong> là trình bày rõ</p>\n<ul>\n<li>kiểu dữ liệu và giá trị khởi tạo một biến và <strong>yêu cầu compiler cấp vùng nhớ cho biến này</strong></li>\n<li>cấu trúc và nội dung của một hàm/class (sẽ ví dụ sau)</li>\n</ul>\n<h2 id=\"gii-thch-v-v-d-cho-bin\"><a href=\"#gii-thch-v-v-d-cho-bin\" class=\"statinamic-HeadingAnchor\">#</a>Giải thích và ví dụ cho biến:</h2>\n<p><strong>Khai báo biến:</strong></p>\n<p>Ta có thể viết như sau, bắt buộc phải có từ khóa <code>extern</code> thì mới gọi là khai báo.</p>\n<pre><code>int main()\n{\n    extern int cu_lac_gion_tan;\n}\n</code></pre>\n<p>Vì từ khóa <code>extern</code> cho biết rằng biến này được định nghĩa ở chỗ khác. Có nghĩa <strong>compiler không cần phải cấp vùng nhớ cho biến này</strong>.</p>\n<p><strong>Định nghĩa biến:</strong></p>\n<p>Vậy trường hợp ta viết như thông thường hay làm</p>\n<pre><code>int main()\n{\n    int cau_lam_gioi_the = 3;\n}\n</code></pre>\n<p><strong>Thì đây là sự kết hợp giữa khai báo và định nghĩa</strong>. Ở đây mình có thể hiểu là, tôi khai báo một biến kiểu <code>int</code> có tên là <code>cau_lam_gioi_the</code> và xin compiler cấp cho nó một vùng nhớ (đây là định nghĩa). <code>= 3</code> tức là sau khi cấp vùng nhớ thì cho vùng nhớ đó gía trị 3.</p>\n<p>Nếu mình không gán gía trị cho biến <code>cau_lam_gioi_the</code> thì compiler sẽ không gán gía trị gì vào vùng nhớ đã tạo cho biến này. Khi đó mình sẽ có một gía trị rác tại vùng nhớ đó.</p>\n<h2 id=\"gii-thch-v-v-d-cho-hm\"><a href=\"#gii-thch-v-v-d-cho-hm\" class=\"statinamic-HeadingAnchor\">#</a>Giải thích và ví dụ cho hàm:</h2>\n<p>Hàm thì đơn giản hơn nhiều</p>\n<p>Đây là một khai báo</p>\n<pre><code>bool daynhauhoc_good(int member_num, int member_iq);\n</code></pre>\n<p>Đây là một định nghĩa</p>\n<pre><code>bool daynhauhoc_good(int member_num, int member_iq) \n{\n    // actually I don&#x27;t care about the arguments lol\n    return true;\n}\n</code></pre>\n<h2 id=\"gii-thch-v-v-d-cho-class\"><a href=\"#gii-thch-v-v-d-cho-class\" class=\"statinamic-HeadingAnchor\">#</a>Giải thích và ví dụ cho class:</h2>\n<p>Đây là một khai báo</p>\n<pre><code>class DayNhauHoc();\n</code></pre>\n<p>Đây là một định nghĩa</p>\n<pre><code>class DayNhauHoc()\n{\n    public:\n        DayNhauHoc() {}\n}\n</code></pre>\n","rawBody":"\n## Giải thích chung chung:\n**Khai báo:** là giới thiệu sự tồn tại của\n\n- một biến với kiểu dữ liệu cụ thể \n- một hàm với cấu trúc trả về và tham số nhận vào\n\n**Định nghĩa:** là trình bày rõ \n\n- kiểu dữ liệu và giá trị khởi tạo một biến và **yêu cầu compiler cấp vùng nhớ cho biến này**\n- cấu trúc và nội dung của một hàm/class (sẽ ví dụ sau)\n\n## Giải thích và ví dụ cho biến:\n\n**Khai báo biến:**\n\nTa có thể viết như sau, bắt buộc phải có từ khóa `extern` thì mới gọi là khai báo.\n```\nint main()\n{\n    extern int cu_lac_gion_tan;\n}\n```\n\nVì từ khóa `extern` cho biết rằng biến này được định nghĩa ở chỗ khác. Có nghĩa **compiler không cần phải cấp vùng nhớ cho biến này**.\n\n**Định nghĩa biến:**\n\nVậy trường hợp ta viết như thông thường hay làm\n\n```\nint main()\n{\n    int cau_lam_gioi_the = 3;\n}\n```\n**Thì đây là sự kết hợp giữa khai báo và định nghĩa**. Ở đây mình có thể hiểu là, tôi khai báo một biến kiểu `int` có tên là `cau_lam_gioi_the` và xin compiler cấp cho nó một vùng nhớ (đây là định nghĩa). `= 3` tức là sau khi cấp vùng nhớ thì cho vùng nhớ đó gía trị 3.\n\nNếu mình không gán gía trị cho biến `cau_lam_gioi_the` thì compiler sẽ không gán gía trị gì vào vùng nhớ đã tạo cho biến này. Khi đó mình sẽ có một gía trị rác tại vùng nhớ đó.\n\n## Giải thích và ví dụ cho hàm:\n\nHàm thì đơn giản hơn nhiều\n\nĐây là một khai báo\n```\nbool daynhauhoc_good(int member_num, int member_iq);\n```\n\nĐây là một định nghĩa\n\n```\nbool daynhauhoc_good(int member_num, int member_iq) \n{\n    // actually I don't care about the arguments lol\n    return true;\n}\n```\n\n## Giải thích và ví dụ cho class:\n\nĐây là một khai báo\n```\nclass DayNhauHoc();\n```\n\nĐây là một định nghĩa\n\n```\nclass DayNhauHoc()\n{\n    public:\n        DayNhauHoc() {}\n}\n```\n","raw":"---json\n{\"id\":5973,\"layout\":\"Post\",\"route\":\"giai-thich-su-khac-nhau-giua-khai-bao-va-dinh-nghia-trong-c-c\",\"title\":\"Giải thích sự khác nhau giữa khai báo và định nghĩa trong C/C++\",\"tags\":[\"c++\",\"c\",\"define\",\"declare\"],\"date\":\"2015-04-15T01:27:04.022Z\",\"author\":{\"username\":\"ltd\",\"avatar\":\"/user_avatar/daynhauhoc.com/ltd/{size}/1016_1.png\"}}\n---\n\n## Giải thích chung chung:\n**Khai báo:** là giới thiệu sự tồn tại của\n\n- một biến với kiểu dữ liệu cụ thể \n- một hàm với cấu trúc trả về và tham số nhận vào\n\n**Định nghĩa:** là trình bày rõ \n\n- kiểu dữ liệu và giá trị khởi tạo một biến và **yêu cầu compiler cấp vùng nhớ cho biến này**\n- cấu trúc và nội dung của một hàm/class (sẽ ví dụ sau)\n\n## Giải thích và ví dụ cho biến:\n\n**Khai báo biến:**\n\nTa có thể viết như sau, bắt buộc phải có từ khóa `extern` thì mới gọi là khai báo.\n```\nint main()\n{\n    extern int cu_lac_gion_tan;\n}\n```\n\nVì từ khóa `extern` cho biết rằng biến này được định nghĩa ở chỗ khác. Có nghĩa **compiler không cần phải cấp vùng nhớ cho biến này**.\n\n**Định nghĩa biến:**\n\nVậy trường hợp ta viết như thông thường hay làm\n\n```\nint main()\n{\n    int cau_lam_gioi_the = 3;\n}\n```\n**Thì đây là sự kết hợp giữa khai báo và định nghĩa**. Ở đây mình có thể hiểu là, tôi khai báo một biến kiểu `int` có tên là `cau_lam_gioi_the` và xin compiler cấp cho nó một vùng nhớ (đây là định nghĩa). `= 3` tức là sau khi cấp vùng nhớ thì cho vùng nhớ đó gía trị 3.\n\nNếu mình không gán gía trị cho biến `cau_lam_gioi_the` thì compiler sẽ không gán gía trị gì vào vùng nhớ đã tạo cho biến này. Khi đó mình sẽ có một gía trị rác tại vùng nhớ đó.\n\n## Giải thích và ví dụ cho hàm:\n\nHàm thì đơn giản hơn nhiều\n\nĐây là một khai báo\n```\nbool daynhauhoc_good(int member_num, int member_iq);\n```\n\nĐây là một định nghĩa\n\n```\nbool daynhauhoc_good(int member_num, int member_iq) \n{\n    // actually I don't care about the arguments lol\n    return true;\n}\n```\n\n## Giải thích và ví dụ cho class:\n\nĐây là một khai báo\n```\nclass DayNhauHoc();\n```\n\nĐây là một định nghĩa\n\n```\nclass DayNhauHoc()\n{\n    public:\n        DayNhauHoc() {}\n}\n```\n","__filename":"posts/5973.md","__url":"/giai-thich-su-khac-nhau-giua-khai-bao-va-dinh-nghia-trong-c-c/","__resourceUrl":"/giai-thich-su-khac-nhau-giua-khai-bao-va-dinh-nghia-trong-c-c/index.html","__dataUrl":"/giai-thich-su-khac-nhau-giua-khai-bao-va-dinh-nghia-trong-c-c/index.html.6bde1514499ccbacef6110c96ad4f654.json"}